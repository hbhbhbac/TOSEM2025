[{"name": "numpy", "commit_message": "TensorFlow: Upstream latest changes to git.\n\nChanges:\n- Documentation updates.\n- Specify numpy version in required packages.\n\nBase CL: 107344010\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "TensorFlow: Upstream changes to git.\n\nChanges:\n- Documentation updates.\n- Relax numpy requirement to 1.9.2\n\nBase CL: 107349632\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "TensorFlow: Upstream changes from afternoon.\n\nChanges:\n- Ptrdiff -> DenseIndex change by @jiayq\n\n- Fix to scoping the logging in logging.py by @dga\n\n- Improvement to Conv2DBackpropFilter on CPU by Andy\n\n- Remove lookup table wrappers for the time being (wasn't in our\n  public API yet) by Yukata\n\n- Add a check similar to numpy to make sure the user isn't in the\n  tensorflow src directory by @vrv\n\n- More changes for  python 3 compat by @girving\n\n- Make dropout preserve shape info from input (@mrry)\n\n- Significant speed improvements by @zheng-xq to BFC allocator to bring\n  on par (CPU overhead-wise) to the region allocator.  Make BFC\n  allocator the default now that it's working well for a variety\n  of models.\n\n- Fix a bunch of typos reported by users (@vrv)\n\n- Enable concat for bfloat16 on GPU by Ashish.\n\nBase CL: 107733123\n", "change_type": "added", "type": ""}, {"name": "protobuf", "commit_message": "TensorFlow: more features, performance improvements, and doc fixes.\n\nChanges:\n- Add Split/Concat() methods to TensorUtil (meant for convenience, not\n  speed) by Chris.\n\n- Changes to linear algebra ops interface by Rasmus\n\n- Tests for tensorboard by Daniel\n\n- Fix bug in histogram calculation by Cassandra\n\n- Added tool for backwards compatibility of OpDefs.  Tool\n  Checks in history of opdefs and their changes, checks for\n  backwards-incompatible changes.  All done by @josh11b\n\n- Fix some protobuf example proto docs by Oliver\n\n- Add derivative of MatrixDeterminant by @yaroslavvb\n\n- Add a priority queue queue by @ebrevdo\n\n- Doc and typo fixes by Aurelien and @dave-andersen\n\n- Speed improvements to ConvBackwardFilter by @andydavis\n\n- Improve speed of Alexnet on TitanX by @zheng-xq\n\n- Add some host memory annotations to some GPU kernels by Yuan.\n\n- Add support for doubles in histogram summary by @jmchen-g\n\nBase CL: 108158338\n", "change_type": "added", "type": ""}, {"name": "protobuf", "commit_message": "TensorFlow: Improve performance of Alexnet\n\nChanges:\n\n* error message that refers to removed `DefaultSession` method.\n* -Wnull-conversion warnings\n* the \"_start_time\" attr for recvs when the flag \"--brain_enable_scheduling_for_recvs\" is set.\n* typo in tutorial data download progress message.\n* a typo (\"however their installing\"=>\"however installing\").\n* typo, rename \"TensorFlow Mechanics\" to \"How To\" to be consistent with the website.\n* a typo (\"subtact\"=>\"subtract\").\n* protobuf examples in comments in tensorflow::Example.proto.\n* formula formatting in MNIST beginner tutorial\n* negative fraction-of-queue-full stats\n* protobuf inclusion path so that Android demo will build under Blaze.\n* small typo (moderatly > moderately)\n* Session.run() to check that tensor arguments come from the session's graph.\n* another six import\n* seq2seq typo in bazel command\n\nBase CL: 108349164\n", "change_type": "added", "type": ""}, {"name": "six", "commit_message": "TensorFlow: Improve performance of Alexnet\n\nChanges:\n\n* error message that refers to removed `DefaultSession` method.\n* -Wnull-conversion warnings\n* the \"_start_time\" attr for recvs when the flag \"--brain_enable_scheduling_for_recvs\" is set.\n* typo in tutorial data download progress message.\n* a typo (\"however their installing\"=>\"however installing\").\n* typo, rename \"TensorFlow Mechanics\" to \"How To\" to be consistent with the website.\n* a typo (\"subtact\"=>\"subtract\").\n* protobuf examples in comments in tensorflow::Example.proto.\n* formula formatting in MNIST beginner tutorial\n* negative fraction-of-queue-full stats\n* protobuf inclusion path so that Android demo will build under Blaze.\n* small typo (moderatly > moderately)\n* Session.run() to check that tensor arguments come from the session's graph.\n* another six import\n* seq2seq typo in bazel command\n\nBase CL: 108349164\n", "change_type": "added", "type": ""}, {"name": "gulp", "commit_message": "TensorFlow: upstream changes to git\n\nChange:\n\tClean up documentation for ReverseSequence\nChange:\n\tUpdated several tensorflow operations to use 32bit indices on GPU.\nChange:\n\tAdd attribute batch_dim to ReverseSequenceOp.\nChange:\n\tFix error in convert_to_records.py.  As reported in\n\thttps://github.com/tensorflow/tensorflow/issues/370\n\tby AlexUnderMicrocontRoll.\nChange:\n\tUpdate TensorBoard README.\nChange:\n\tFixes to boolean flags reported in\n\thttps://github.com/tensorflow/tensorflow/issues/379.  Supports:\n\n\t--bool_flag=True  --> True\n\t--bool_flag=False  --> False\n\t--bool_flag=gibberish  --> False\n\t--bool_flag --> True\n\t--nobool_flag --> False\n\n\tFixes #379\nChange:\n\tUpdate generated Op docs.\nChange:\n\tEnable local development of TensorBoard using gulp\n\tAlso make tf-tensorboard a regular component rather than special case\n\n\tThis is mostly effected by creating tfserve.js, which is a small server\n\twith clever routing to load from bower_components/ and components/ using\n\tthe paths that work within google3.\n\n\tWorkflow: `gulp serve`\nChange:\n\tAdd a full working code example to the tensorboard and summaries tutorial\nChange:\n\tFix seq2seq_test when running on GPU.\n\n\tThe \"proj_w\" and \"proj_b\" variables were being created before the\n\t`test_session()`'s device function took effect, which pushed the\n\tplacement algorithm into making an incorrect decision.\nChange:\n\tAdd a sentence in TensorBoard README on how to serialize summary data to logs and provide link to the how-to tutorial on the TensorFlow website.\nChange:\n\tAdd error-catching code if string_input_producer is supplied a null input.\n\tBefore this change, it would die with an opaque shape error from inside\n\tthe queue.  This change catches (most) python null lists being\n\tpassed directly in, and at runtime detects null tensors.\n\n\tAdds two tests for this to input_test.py\nChange:\n\tSpeed up for models that use the same variable multiple times in the case\n\twhere variables must be copied across devices:\n\t- Have Variables wrap the Variable op in an Identity op when converted to Tensor.\n\t  This avoids multiple copies across devices if a variable is used multiple time\n\t  in a computation.\n\t- Add Variable.mutable() to return the non-wrapped Variable op for used when\n\t  assigning new values.\n\t- Add an as_ref parameter to convert_to_tensor() to allow code to specify\n\t  if they plan to assign a new value to the result of the conversion.  Make Variable\n\t  return the result of Variable.mutable() when as_ref is True.\n\t- Make all ops that assign values to variables pass as_ref=True when converting\n\t  their arguments.\nChange:\n\tChange to reduce critical section times in gpu_event_mgr.h:\n\t(1) Call stream->ThenRecordEvent outside the EventMgr critical section\n\t(2) Do memory deallocation outside the critical section\n\n\tSpeeds up one configuration of ptb_word_lm from 2924 words per\n\tsecond (wps) to 3278 wps on my desktop machine with a Titan X.\nChange:\n\tRemove some colons that break the open source build\n\n\t::tensorflow::StringPiece breaks for @raingo, see\n\thttps://github.com/tensorflow/tensorflow/issues/358.\n\ttensorflow::StringPiece (without the leading colons)\n\tseems to fix the problem.\nChange:\n\tAdded check that inputs to Operation is a list and make a defensive copy of the input. This is for cases where the input list is changed such as in _add_input.\nChange:\n\tUse standard names for TensorFlow dtypes in the tutorial.\nChange:\n\tAdd tests for tensor inputs.\nChange:\n\tFix build after declaring more types for ops\nChange:\n\tSwitch to 32 bit indexing to speedup convolutions and concatenations.\nChange:\n\tAdd convert_image op to convert between types for images (similar to OpenCV's cvtScale).\nChange:\n\tMake cast work between numeric types (bool, uint8, int16, int32, int64, float, double).\nChange:\n\n\tPadding input data for odd number of paddings, so we can use cudnn anyway.\n\t+ Fix total padding computation when padding==VALID.\n\t+ This CL makes the Googlenet benchmark run 5x faster.\n\nChange:\n\tSupport IndexedSlices in ConcatGrad\nChange:\n\t* sampled softmax op uses one embedding lookup for positive and negative samples\n\t* float64 support for sampled softmax\nChange:\n\tMove RNN code out of models.rnn (without breaking existing code).  The API may still undergo minor changes, until full documentation as added.\nChange:\n\tChanged to use per-step stacks for the accumulators used in while-loop gradient computation. This addresses the problem caused by using concat without sufficient static shape information. It should also improve performance as we avoided those expensive concats.\nChange:\n\tUpdate generated Op docs.\nChange:\n\tImprove error messages when the optimizer finds no variables to minimize or\n\twhen none of the variables has gradients.\nChange:\n\tSay that -1 isn't just for flattening in reshape docs\n\n\tAlso add scalar reshape (reshape(t, [])) as an example.\n\n\tThis fixes https://github.com/tensorflow/tensorflow/issues/281.\nChange:\n\tThis is a test.\n\nBase CL: 109118714\n", "change_type": "added", "type": ""}, {"name": "protobuf", "commit_message": "TensorFlow: upstream changes to git.\n\nChange 109418220\n\tUpdate WORKSPACE to use gmock.BUILD from google/protobuf instead of a duplicate.\n\tUpdate google/protobuf's commit hash to include damieng@'s commit.\nChange 109417314\n\tTensorFlow: add .gitignore to ignore some in-tree modified files.\nChange 109400051\n\tOptionally build full TensorFlow for Android.\n\t1. --define ANDROID_TYPES=__ANDROID_TYPES_FULL__ to register ops\n\t   for all types, not just float. Today this increases codesize\n\t   by ~700K when compiled for ARM, though only for clients who\n\t   request full type support.\n\t2. Add more ops to android_extended_ops, sufficient to train on\n\t   the linear regression baseball codelab.\nChange 109388118\n\tFix the option changed in templatize. Oops.\nChange 109382553\n\tAllows setting a function name in an op's attr in the py frontend.\nChange 109380896\n\tRemove assert_same_graph in favor of op_scope. Change the latter to handle tensor-like objects such as SparseTensor, IndexedSlices, and Variable.\n\nBase CL: 109418322\n", "change_type": "added", "type": ""}, {"name": "protobuf", "commit_message": "TensorFlow: update google/protobuf to newest commit that\nsupports python3\n", "change_type": "added", "type": ""}, {"name": "numpy", "commit_message": "TensorFlow: merge changes from internal\n\nChange 110004767\n\tAdd Cast to list of supported ConstantValue ops, mainly useful for shape inference\nChange 110002200\n\tBug fix for b/24814668. The fix uses mdevin's CL/109324239, which adds support to clear control dependency and control flow contexts.\n\n\tBug fix for b/25914830. We now clear the control related contexts for initial values of variables in adagrad.\nChange 110000213\n\tFurther (minor) improvements to print usage in docs and tutorials\nChange 109975099\n\tUpdate `tensor_util.ConstantValue()` to return scalars when appropriate.\n\n\tThe `ConstantValue()` implementations for `tf.size()` and `tf.rank()`\n\twere returning single-element numpy vectors, whereas the op\n\timplementations produce scalar outputs.\nChange 109950165\n\tTensorBoard tag to 5\n\nBase CL: 110006867\n", "change_type": "updated", "type": ""}, {"name": "sklearn", "commit_message": "Fixes #47: Changed import for NotFittedError to make sure it works with sklearn 0.18\n", "change_type": "added", "type": ""}, {"name": "numpy", "commit_message": "Trying to match pre-reqs for numpy in py3\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Moving form random.randint to use numpy.random.randint to have more stable between version / OSs random generator. No need to set random.seed anymore in each different place.\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Reworked ByteProcessor to use numpy.frombuffer and handle nicer unicode vs strings in PY2/3\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "TensorFlow: make pip wheel depend on 3.0.0b2 protobuf,\nsince that's roughly what we package too.\nChange: 115027171\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "TensorFlow: make pip wheel depend on 3.0.0b2 protobuf,\nsince that's roughly what we package too.\nChange: 115027171\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "TensorFlow r0.7: change pip dependency for numpy to 1.10.1 on OS X\n\npip3 install numpy==1.8.2 results in failures to find Python.h\nduring our wheel building process, and it appears to be a bug\nin numpy.distutils at 1.8.2.\n", "change_type": "removed", "type": ""}, {"name": "numpy", "commit_message": "Removing --upgrade and numpy-1.8.2 from pip.sh\n\nConsolidating the two steps into one.\n", "change_type": "removed", "type": ""}, {"name": "numpy", "commit_message": "Removing --upgrade and numpy-1.8.2 from pip.sh\n\nConsolidating the two steps into one.\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Updated protobuf submodule to fb714b3 to bring in updates to grpc support\n", "change_type": "added", "type": ""}, {"name": "tsd", "commit_message": "We don't use tsd anymore since we migrated to typings\nChange: 116184216\n", "change_type": "removed", "type": ""}, {"name": "sklearn", "commit_message": "Fixes #120: version check for TF and sklearn\n", "change_type": "added", "type": ""}, {"name": "numpy", "commit_message": "Update image_ops.py\n\nFix Error using tf.image.random._ : 'numpy.ndarray' object has no attribute 'get_shape' #1399 by fix flip_left_to_right to call convert_to_tensor fisrt", "change_type": "removed", "type": ""}, {"name": "typings", "commit_message": "Add paper-dialog as a dependency for tf-tensorboard.\nAlso update typings in package.json and add typing dependency on sinon (its provided by wct)\nChange: 119988943\n", "change_type": "added", "type": ""}, {"name": "gulp-typings", "commit_message": "Remove gulp-typings since it errors and simplify the environment preparation.\n'npm run prepare' runs 'npm install && bower install && typings install'\nChange: 121524007\n", "change_type": "removed", "type": ""}, {"name": "typings", "commit_message": "Upgrade typings to >version 1.\nRequired for fixing the jenkins build.\nChange: 123886969\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Change protobuf::uint64 to protobuf_uint64 in tensor_coding.cc (#4369)\n\n", "change_type": "added", "type": ""}, {"name": "protobuf", "commit_message": "Upgrade numpy version: 1.8.2 --> 1.11.0\n\n* Also upgrade the protobuf dependency version for pip install: 3.0.0b2 --> 3.0.0\n\n* Make upgrades in ci_build docker images and pip package install script.\n\n* Installing dependencies of the pip package (six and protobuf) in the docker images (or Mac) directly, so that the --no-deps flag can be used during PIP test to avoid the time-consuming building of numpy from source.\nChange: 133949959\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Upgrade numpy version: 1.8.2 --> 1.11.0\n\n* Also upgrade the protobuf dependency version for pip install: 3.0.0b2 --> 3.0.0\n\n* Make upgrades in ci_build docker images and pip package install script.\n\n* Installing dependencies of the pip package (six and protobuf) in the docker images (or Mac) directly, so that the --no-deps flag can be used during PIP test to avoid the time-consuming building of numpy from source.\nChange: 133949959\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "upgrade protobuf to 3.1.0 (#4572)\n\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Update instructions for installing protobuf package.\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Also add the instruction to uninstall the existing protobuf package.\n", "change_type": "updated", "type": ""}, {"name": "typings", "commit_message": "Update typings version, definitions for polymer and fix `gulp compile`\nChange: 134979996\n", "change_type": "updated", "type": ""}, {"name": "typings", "commit_message": "Branch 135176011 (#4771)\n\n* Adds a test tf.Assert inside a function.\r\nChange: 134855633\r\n\r\n* Remove non-batch methods from operator_pd_cholesky if they have been merged with batch.\r\nRecent changes to tensorflow linear algebra Ops merged batch/non-batch Ops.\r\nThis makes their separation un-necessary in OperatorPDCholesky.  Note that OperatorPDBase will still \"dispatch based on batch\"\r\nsince [non]batch-specific implementations still exist for matmul, and will probably\r\nexist for some subset of Ops/Operators.\r\n\r\nOperatorPDBase calls the _batch* method if the non-batch method does not exist, so this change will leave the _batch* methods as-is.\r\nChange: 134859101\r\n\r\n* Allow tf.py_func to have no return values.\r\nChange: 134873490\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 134874339\r\n\r\n* Allow graph to be passed in to write_graph.\r\nChange: 134894910\r\n\r\n* Update generated Python Op docs.\r\nChange: 134896141\r\n\r\n* Increase tolerance in resample_test to reduce flakes.\r\nChange: 134906739\r\n\r\n* Clean up of _inner_flatten.\r\nChange: 134977904\r\n\r\n* Update typings version, definitions for polymer and fix `gulp compile`\r\nChange: 134979996\r\n\r\n* Move inspector panel to its own component.\r\n\r\nThis reduces the complexity of `Projector` by delegating work to the `InspectorPanel`.\r\n\r\nAlso related:\r\n - Add an option to search by other metadata fields.\r\n - Introduce shared css styles used by every component.\r\n - Move data querying methods (findNeighbors, queryByField, etc) to data.ts. These methods are used by anyone that has access to the dataset (e.g. both the projector and the inspectorPanel use it).\r\nChange: 134989405\r\n\r\n* Created a tensorboard endpoint data/logdir for obtaining the logdir.\r\nChange: 135001927\r\n\r\n* numpy meshgrid parity\r\nChange: 135002812\r\n\r\n* tensor_bundle interface: accept StringPiece everywhere.\r\n\r\nThis facilitates the callers in that when passing \"char*\", \"string\", or\r\n\"StringPiece\" no explicit conversions are needed.\r\nChange: 135007288\r\n\r\n* tfdbg: 1st check-in of curses UI and a demo\r\n\r\nTo run the demo, do:\r\n\r\n./configure\r\nbazel build tensorflow/python/debug:debug_fibonacci && bazel-bin/tensorflow/python/debug/debug_fibonacci\r\n\r\nBarebone/backbone implementation of the curses-based command-line UI for tfdbg.\r\n\r\nThe fibonacci_network demo constucts a simple TF graph that computes the fibonacci sequence, wraps a tf.Session object with a CLI debugger wrapper session and calls its run() method. which leads to launching of the curses CLI.\r\n\r\nThe CLI debugger wrapper implements the BaseDebugWrapperSession.\r\n\r\nThe UI currently has only minimalist command set including\r\n  ni: inspect node info\r\n  lt: list all dumped tensors\r\n  li: list node inputs\r\n  lo: list node output recipients\r\n  pt: print tensor.\r\n\r\nCurrently supported UI features:\r\n  * command history navigation using Up/Down keys: with or without prefix\r\n  * scroll large output with PgUp/PgDown/Home/End keys\r\n  * terminal resize response\r\n\r\nSee CLI help output for more information.\r\nChange: 135010660\r\n\r\n* Add comment that argument can be either dense Tensor or SparseTensor.\r\nChange: 135010699\r\n\r\n* Move MonitoredSession and related utilities from tf.contrib.learn to tf.train\r\nChange: 135010812\r\n\r\n* Update generated Python Op docs.\r\nChange: 135011886\r\n\r\n* Documentation fixes for tf.contrib.rnn.\r\nChange: 135017686\r\n\r\n* Fix bug in pylint whitelist error check. Fix the pylint errors it missed\r\nbefore.\r\nChange: 135020083\r\n\r\n* Update generated Python Op docs.\r\nChange: 135021476\r\n\r\n* Fix bug when changing distance metric in the inspector panel.\r\nChange: 135023065\r\n\r\n* Expose MetricSpec.\r\nChange: 135032476\r\n\r\n* Fixing tf.gfile's file writing in append mode. Earlier, append was the same as write mode. Now we distinguish between the two.\r\nChange: 135033928\r\n\r\n* * Supports defining overloaded functions. I.e., defers the\r\n  instantiation of the function definition until all input types are known.\r\n* for convenience, adds more convert_to_tensor calls.\r\n* adds None checking for better error reporting.\r\n* cleanup function_test a bit so that it uses tf.logging.info consistently.\r\n* changes the convention for coming up a function's name:\r\n  * if func_name is explicitly given, stick with it.\r\n  * otherwise, come up a name based on the python function info and a hash of the\r\n    function definition.\r\n* uses __doc__ to fill in func's op def description in the proto.\r\nChange: 135036941\r\n\r\n* Adding a ConditionalAccumulator class, which allows us to accumulate non-stale\r\ngradients. Also adds SparseConditionalAccumulator, which supports IndexedSlices.\r\nChange: 135037419\r\n\r\n* Implement gradients for ndtr, log_ndtr. This avoids automatic differentiation going through several tf.select code-paths.\r\nChange: 135038724\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 135039308\r\n\r\n* Update generated Python Op docs.\r\nChange: 135039979\r\n\r\n* Add regression signature to half_plus_two model.\r\nChange: 135041920\r\n\r\n* Made _Transformer logging less verbose\r\nChange: 135048006\r\n\r\n* Add warning to os_setup for dev setup. Fixes #2844 (well, documents the failure at least).\r\nChange: 135050562\r\n\r\n* Use BlockingCounter to do some minor cleanups.\r\nChange: 135051470\r\n\r\n* Documented the `data/logdir` endpoint in http_api.md.\r\nChange: 135052793\r\n\r\n* Added a const version of the functors specialized to process complex numbers on CUDA devices.\r\nChange: 135053757\r\n\r\n* Parallelize AvgPool on CPU.\r\n\r\nBenchmark                          Base (ns)  New (ns) Improvement\r\n------------------------------------------------------------------\r\nBM_AvgPool_32_112_112_64_3_3_2_VALID_4 30417641  10925222    +64.1%\r\nBM_AvgPool_32_56_56_192_3_3_2_VALID_4 16509939   7054348    +57.3%\r\nBM_AvgPool_32_28_28_352_3_3_2_VALID_4  6494974   2527951    +61.1%\r\nBM_AvgPool_32_14_14_576_3_3_2_VALID_4  2050825    853309    +58.4%\r\nBM_AvgPool_32_112_112_64_3_3_2_SAME_4 31002019   9790387    +68.4%\r\nBM_AvgPool_32_56_56_192_3_3_2_SAME_4 17234631   6463952    +62.5%\r\nBM_AvgPool_32_28_28_352_3_3_2_SAME_4  7171668   3067244    +57.2%\r\nBM_AvgPool_32_14_14_576_3_3_2_SAME_4  2685654   1175420    +56.2%\r\nChange: 135053961\r\n\r\n* minor changes in tf.learn.\r\nAllow specifying saving checkpointing every N steps instead of every N secs, which is already supported by basic_session_run_hooks.CheckpointSaverHook but not supported by learn.RunConfig and estimator.\r\nChange: 135055051\r\n\r\n* Update generated Python Op docs.\r\nChange: 135057486\r\n\r\n* Cleanups to distributions tests.\r\n  - Remove hack for sampling in beta test. Gamma sampler does not emit 0s any more.\r\n  - Change tests to camel case..\r\nChange: 135065764\r\n\r\n* Show search results in the inspector panel.\r\nChange: 135104864\r\n\r\n* Get rid of vz-projector.ts's concept of 'highlighted points' and 'color accessors', moving slowly towards a model where we don't call accessors in inner loops. Visualizers have direct access to the selected points and neighbors, and can decide their own semantics for display. Projector now prepares a color array of unselected points, which the visualizers use to render. 3D labels are rendered with unselected point colors. Add the HoverContext for observing and reporting hover events.\r\nChange: 135109425\r\n\r\n* Migrating skflow examples to the tensorflow/examples/learn directory. Fixes #3364.\r\nChange: 135109832\r\n\r\n* tfdbg: CLI demo: debug_mnist\r\n\r\nTo run the demo, do:\r\nbazel build -c opt tensorflow/python/debug:debug_mnist && bazel-bin/tensorflow/python/debug/debug_mnist --debug\r\n\r\nSee the doc file at: tensorflow/python/debug/examples/README.md for more details.\r\n\r\nOther related and supporting changes:\r\n  * Move function \"parse_node_or_tensor_name\" from analyzer_cli.py to debug_data.py. Also moved related unit tests.\r\n  * Add title bar to CursesUI\r\n  * Add the predicate (filter) function has_inf_or_nan to module debug_data. Also added unit tests.\r\n  * analyzer_cli.py: Add methods \"add_tensor_filter\" and \"get_tensor_filter\" to support filtering of dumped intermediate tensors.\r\n  * local_cli.py: Add flag to on-run-start command \"run\", e.g., \"run -f has_inf_or_nan\", along with supporting logic for the run-till-a-tensor-filter-is passed mode.\r\n  * local_cli.py: Improved on-run-start summary lines for feed and fetch.\r\nChange: 135115989\r\n\r\n* Update left navigation for Python API.\r\nChange: 135121210\r\n\r\n* Fix ZeroInitializerOp for GPUs\r\n\r\nAlso changed it to use the C++ shape inference function.\r\nChange: 135123217\r\n\r\n* Use softplus in bernoulli.\r\nChange: 135125153\r\n\r\n* Automated rollback of change 135036941\r\nChange: 135125564\r\n\r\n* Get dnn_sampled_softmax_classifier_test to start running open source tests again. This change simply relaxes the testing criteria for a couple of tests so that everything can run in opensource tests regularly.\r\nChange: 135126062\r\n\r\n* Made the h2 in the graph panel only appear if there is a title. This removes a little white space at the top that is not draggable. Updated screen diff integration tests.\r\nChange: 135126088\r\n\r\n* Improved documentation of session_creator of MonitoredSession.\r\nChange: 135127073\r\n\r\n* Fix compilation error on some non-standard toolchains\r\nChange: 135127376\r\n\r\n* Add an internal-only C++ wrapper around function_ops.\r\nChange: 135130656\r\n\r\n* Move the left hand side projections panel to its own polymer component, vz-projector-projections-panel, and wire scatter plot updates through the vz-projector.\r\nChange: 135130797\r\n\r\n* Update generated Python Op docs.\r\nChange: 135131860\r\n\r\n* enable tile for complex inputs in gpu, github issue #2577\r\nChange: 135135194\r\n\r\n* Taking //tensorflow/examples/learn:examples_test out as it is too long for\r\n'larget' test and breaking OSS builds.\r\nChange: 135138752\r\n\r\n* Disable dnn_test.\r\nChange: 135139116\r\n\r\n* Fix missing close-quote in markdown for tf.contrib.distributions.Distribution\r\nChange: 135140486\r\n\r\n* Update generated Python Op docs.\r\nChange: 135142722\r\n\r\n* Convert sample_rate attribute for AudioSummary into an input.\r\n\r\nThis is helpful for graphs that consume or generate audio with variable sample rates. Adds an AudioSummaryV2 op and marks AudioSummary as deprecated. The same AudioSummaryOp kernel handles both AudioSummary and AudioSummaryV2.\r\nChange: 135148773\r\n\r\n* Update ops-related pbtxt files.\r\nChange: 135152974\r\n\r\n* Update generated Python Op docs.\r\nChange: 135153503\r\n\r\n* * Supports defining overloaded functions. I.e., defers the\r\n  instantiation of the function definition until all input types are known.\r\n* for convenience, adds more convert_to_tensor calls.\r\n* adds None checking for better error reporting.\r\n* cleanup function_test a bit so that it uses tf.logging.info consistently.\r\n* changes the convention for coming up a function's name:\r\n  * if func_name is explicitly given, stick with it.\r\n  * otherwise, come up a name based on the python function info and a hash of the\r\n    function definition.\r\n* uses __doc__ to fill in func's op def description in the proto.\r\nChange: 135156837\r\n\r\n* Improve UI of inspector panel (neighbors + search results).\r\n\r\n- React when hovering over results\r\n- Improve layout for long text by overflowing text with '...'\r\n- On mouse hover, show the full text (title attribute on anchor).\r\n- Remove dead code in vz-projector-data-panel.html\r\nChange: 135165962\r\n\r\n* go: Add a README.md with installation instructions.\r\n\r\nThe Go API is still decidedly an \"alpha version\" and the\r\ninstallation process would ideally be much smoother. But\r\nthe instructions included here are at least functional.\r\n\r\nAnother step towards #10\r\nChange: 135166392\r\n\r\n* Add tf.contrib.distributions to API leftnav\r\nChange: 135167978\r\n\r\n* Change to use existing macros.\r\nChange: 135176011\r\n", "change_type": "updated", "type": ""}, {"name": "tslint", "commit_message": "Remove tslint from gulp compilation.\nChange: 137312850\n", "change_type": "removed", "type": ""}, {"name": "protobuf", "commit_message": "[Windows/CMake] Avoid file locking race in protoc.\n\nIn particular, we avoid regenerating the C++ protobuf implementations\nfor `tensorflow/core` proto files, because this can trigger a flaky\nrace when run on Windows.\n\nAnother reminder of why hermetic builds are delightful, I suppose :).\n", "change_type": "removed", "type": ""}, {"name": "protobuf", "commit_message": "Change the protobuf dependency from == 3.1.0 to >= 3.1.0 so it doesn't\nreinstall when installing tensorflow.\nChange: 141465425\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Change the protobuf dependency from == 3.1.0 to >= 3.1.0 so it doesn't\nreinstall when installing tensorflow.\nChange: 141465425\n", "change_type": "updated", "type": ""}, {"name": "werkzeug", "commit_message": "Refactor TensorBoard into WSGI application.  Adds werkzeug pip dependency to\ntensorflow.\n\nThis change is motivated by the need to use middleware to provide authentication internally. It also makes the TensorBoard backend more embeddable/re-usable.\n\n* Adds a dependency on werkzeug for convenience in setting up WSGI apps.\n* Replaces \"TensorBoardHandler\" with \"TensorBoardWSGIApp\". Now each route is a WSGI application. Generally uses convenient werkzeug decorators for making these applications.\n* Removes handler.py, server.py; these are merged into application.py\n* The Respond method in http.py now returns a Werkzeug Response object.\n* Modify projector plugin to also be a WSGI application.\n* Add a few error messages for helpfulness.\n* Remove some dead code along the way. It has to do with sampling, but we never incorporated it anywhere.\nChange: 145183192\n", "change_type": "added", "type": ""}, {"name": "protobuf", "commit_message": "Bump the website and the dependency to use protobuf 3.2.0.\n\nThis version removes the 64 MB default limit for serialized proto sizes.\nChange: 146721509\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Parse compatibility notes and place them into the generated md.\n\nThis required switching to a somewhat more complicated state logic.\nEven though, we could just handle numpy as special for now, it\nwould be nice to be able to do other behavior like pull it into\nits own file. So this infrastructure as is will help with that.\n\nFor example:\n\ndef foo():\n  \"\"\"foo\n\n  @compatibility(numpy)\n  Nice function but no numpy equivalent.\n  @end_compatibility\n  \"\"\"\nChange: 146858981\n", "change_type": "removed", "type": ""}, {"name": "numpy", "commit_message": "Re-enable shape_test failing tests after fixing issue that shows up in\nnumpy 1.12 only.\nChange: 147512538\n", "change_type": "removed", "type": ""}, {"name": "bleach", "commit_message": "Add markdown support to TensorBoard text plugin.\n\nThe markdown is sanitized, so TensorBoard will be safe from XSS attacks.\n\nAdded markdown, bleach, and html5lib as dependencies.\nChange: 151479803\n", "change_type": "added", "type": ""}, {"name": "html5lib", "commit_message": "Add markdown support to TensorBoard text plugin.\n\nThe markdown is sanitized, so TensorBoard will be safe from XSS attacks.\n\nAdded markdown, bleach, and html5lib as dependencies.\nChange: 151479803\n", "change_type": "added", "type": ""}, {"name": "markdown", "commit_message": "Add markdown support to TensorBoard text plugin.\n\nThe markdown is sanitized, so TensorBoard will be safe from XSS attacks.\n\nAdded markdown, bleach, and html5lib as dependencies.\nChange: 151479803\n", "change_type": "added", "type": ""}, {"name": "html5lib", "commit_message": "Use html5lib version that bleach wants (#9004)\n\nFixes #8971", "change_type": "updated", "type": ""}, {"name": "typescript", "commit_message": "Merge changes from github.\nEND_PUBLIC\n\n---\nCommit f0e185d1f authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBetter handle nodes with a variable number of outputs\n\nPiperOrigin-RevId: 158435028\n\n---\nCommit bc3e20807 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused BUILD dependencies\n\nPiperOrigin-RevId: 158431059\n\n---\nCommit a0c80e4d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDelete unnecessary (mistakenly duplicated) logging message.\n\nPiperOrigin-RevId: 158428506\n\n---\nCommit b6ad1d747 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds DNN-only tests for DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158423119\n\n---\nCommit ddbb58034 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unnecessary pylint disable\n\nPiperOrigin-RevId: 158416140\n\n---\nCommit fcaa724e2 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans pack and unpack ops (#10336)\n\n* [OpenCL] Cleans pack op\n\n* [OpenCL] Cleans unpack op\n\n---\nCommit 2f53cacb2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix a test failure of quantization_utils_test on ASAN\n\nPiperOrigin-RevId: 158414538\n\n---\nCommit 50b2f951c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158413455\n\n---\nCommit 1e90b78e9 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd CacheDataset ops.\n\nSome input pipelines may pull down data from remote webservers or perform\nexpensive processing. In order to avoid extraneous work, we now support\ncaching the dataset (e.g. on disk).\n\nPiperOrigin-RevId: 158411901\n\n---\nCommit e16cd2ede authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by gunan<gunan@google.com>:\nFix typos (#10533)\n\n---\nCommit 50d80ddf9 authored by Jonathan Hseu<jhseu@google.com>\nCommitted by Jonathan Hseu<jhseu@google.com>:\nFix fft_ops_test.py for CPU\n\n---\nCommit d35cbbb44 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd weight-column support to the heads.\n\nPiperOrigin-RevId: 158409180\n\n---\nCommit 7fb52cd54 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon't crash when displaying XLA metrics if they happen to be negative.\n\nPiperOrigin-RevId: 158407664\n\n---\nCommit 12a7a752a authored by Jianfei Wang<me@thinxer.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nAdd a tip for tf.train.LoggingTensorHook (#10237)\n\n`INFO` logs are not printed by default unless in IPython. Add a friendly tip for newcomers.\n---\nCommit 216dcbf1e authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reduction ops (#10340)\n\n* [OpenCL] Cleans reduction_ops_max.cc\n\n* [OpenCL] Cleans reduction_ops_mean.cc\n\n* [OpenCL] Cleans reduction_ops_min.cc\n\n* [OpenCL] Cleans reduction_ops_prod.cc\n\n* [OpenCL] Cleans reduction_ops_sum.cc\n\n---\nCommit 2b351062a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nImprove docs for selective registration headers (#10351)\n\n* Improve docs for selective registration headers\n\nprogressing #10299\n\n* Update print_selective_registration_header.py\n\n* Mention both flags\n\n-DSELECTIVE_REGISTRATION and -DSUPPORT_SELECTIVE_REGISTRATION\n\n---\nCommit ee919510f authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nRe-enable some python tests in Windows Bazel build (#10526)\n\n---\nCommit b0e881457 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Declare and assign separately (#10509)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2155\n---\nCommit 284901b08 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Remove unquoting quotes (#10506)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2027\n---\nCommit 2a1f11556 authored by ksellesk<zhengdachuan200305@gmail.com>\nCommitted by ksellesk<zhengdachuan200305@gmail.com>:\nFix AttributeError in resnet.py\n\nThere is no function tf.softmax() in Tensorflow 1.x.\n\nWhen running the old code, Python interpreter complains:\n\nFile \"resnet.py\", line 152, in res_net_model\nprediction, loss = res_net(x, y)\nFile \"resnet.py\", line 148, in res_net\nreturn tf.softmax(logits), loss\nAttributeError: 'module' object has no attribute 'softmax'\n\n---\nCommit 1d68f729b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unneeded BUILD dependency\n\nPiperOrigin-RevId: 158391996\n\n---\nCommit 08ed32dbb authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nWindows: Make TensorFlow build without --cpu=x64_windows_msvc (#10466)\n\n* Windows: Make TensorFlow build without --cpu=x64_windows_msvc\n\nSince from Bazel 0.5.0, MSVC toolchain became the default toolchain on\nWindows. So --cpu=x64_windows_msvc is not required as long as we adjust\nthe BUILD files in TensorFlow.\n\n--cpu=x64_windows_msvc is also supported for now, but is depracated.\nThe configuration for cpu value x64_windows_msvc is a duplicate of\nx64_windows, which should be removed in the future.\n\n* Fix breakage on macOS\n\n---\nCommit 02dbe153a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Simplify Conditional (#10503)\n\n---\nCommit c07bc581f authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Prefer read -a to split path (#10508)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2207\n---\nCommit 0a389674d authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Prefer [ p ] && [ q ] over [ p -a q ] (#10507)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2166\n---\nCommit 87a008ec3 authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by gunan<gunan@google.com>:\nDelete non-deterministic testEmpty() test (#10512)\n\n---\nCommit 3a2971bd8 authored by Frank Chen<frankchn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds the base for ClusterResolvers, a new way of communicating with and retrieving cluster information for running distributed TensorFlow.\n\nImplementations of this class would eventually allow users to simply point TensorFlow at a cluster management endpoint, and TensorFlow will automatically retrieve the host names/IPs and port numbers of TensorFlow workers from the cluster management service.\n\nPiperOrigin-RevId: 158358761\n\n---\nCommit 28b4e7f04 authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by gunan<gunan@google.com>:\nDisable stage_op_test and map_stage_op_test (#10516)\n\n---\nCommit 390e57a75 authored by Yan (Asta) Li<yanastali@users.noreply.github.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nCheck EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0 (#10380)\n\n* Check EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0\n\nIf EIGEN_MAX_ALIGN_BYTES is set to 0, alignment checks that mod by EIGEN_MAX_ALIGN_BYTES fail at runtime.\n\n* Returns true, as in tensorflow/core/framework/tensor.h\n* Update unit tests\n\n* Enable tests only if EIGEN_MAX_ALIGN_BYTES > 0\n\n---\nCommit cd5ac40b3 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Update LLVM to upstream revision r304927.\nAdd LLVM build rules for the LLVM AMDGPU backend, commented out by default. Fixes issue #10437.\n\nPiperOrigin-RevId: 158351480\n\n---\nCommit 91cb809bd authored by David Norman<DavidNorman@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[XLA] Add ability to run the XLA unit tests against a different device (#9759)\n\n* Add ability to run the XLA unit tests against a different device\n\n* Allow for multiple extra backend devices\n\n* Correct merge error\n\n* Include options for additional tags\n\n---\nCommit aff4d124b authored by Yuxin Wu<ppwwyyxxc@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nCompare base_dtype instead of dtype in piecewise_constant (#10280)\n\n* Compare base_dtype instead of dtype in piecewise_constant\n\nCompare base_dtype instead of dtype in piecewise_constant. Fix #10086\n\n* add unit test\n\n* Small lint fix and comment\n\n---\nCommit 845539f98 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd evaluation test for linear classifier (n==2 or n >2).\n\nPiperOrigin-RevId: 158340296\n\n---\nCommit 7c46214ab authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by GitHub<noreply@github.com>:\nFix numpy 1.13 incompatibilities (#10501)\n\n* Fix numpy 1.13 incompatibilities\n\n* Skip tests with numpy 1.13.0\n\n---\nCommit 4572c41df authored by gunan<gunan@google.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nA few changes to kernel_tests. (#10502)\n\n* Disable reader_ops_test on windows.\n\n* Run buildifier on kernel_tests/BUILD\n\n* Mark map_stage_op_test as large.\n\n* Set the size of stage_op_test to large\n\n---\nCommit 892293d98 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet a default for datasets end_of_sequence.\n\nWhile all datasets carefully set the end_of_sequence to true at the\nappropriate time, some datasets might forget to set it to false in the normal\ncase. In order to avoid potential undefined behavior, we set the\nend_of_sequence variable to be false by default.\n\nPiperOrigin-RevId: 158337799\n\n---\nCommit 187404eac authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSetup the env to since ops such as MatchFileOp rely on it.\n\nPiperOrigin-RevId: 158336344\n\n---\nCommit 2741561c8 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix up vz_projector script structure\n\nWe now make sure scripts and HTML imports are declared in the correct\nplaces. In the future, pedantically listing script tags should not be\nnecessary.\n\nPiperOrigin-RevId: 158334306\n\n---\nCommit beeaade46 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nResubmit a reverted change. Original description:\n\n[XLA] Enable HloEvaluator for constant folding, also merged a few operations\nfrom hlo_constant_folding to hlo_evaluator.\n\nAdditionally:\n- In ShapeUtil::ForEachIndex:\n    * fix a bug where visitor is called when the shape has zero elements (e.g., F32{1,0})\n    * added test case for ForEachIndex.\n\n- In HloEvaluator:\n    * Instead of copying and caching a Constant instruction, return the literal directly if the instruction is constant.\n    * Fix an issue where TUPLE and OPAQUE primitives are not keyed in the templated typed_visitor.\n    * Use (fixed) LiteralUtil::Populate to populate resulting literal, fixes the preexisting bug in the evaluator where R0 and shape with zero size dimensions are not handled.\n    * Refactor ElementWiseUnaryOp and HandleCompare to be templatized on the operand's type.\n    * Refactor IsFinite to be top level since it is only applicable to floats and the return type is always boolean.\n    * Change from std::remainder to std::fmod for kRemainder to be compliant with existing XLA behavior.\n    * Change from std::max and std::min to std::fmax and std::fmin to handle NaNs.\n    * Minor comments fix.\n\nPiperOrigin-RevId: 158330052\n\n---\nCommit b94540e6f authored by Toby Boyd<tobyboyd@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntf.layers.conv2d use_bias=True to use nn.bias_add\n\nPiperOrigin-RevId: 158326493\n\n---\nCommit 379aa9911 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 158325855\n\n---\nCommit 4e529f0f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158325293\n\n---\nCommit 0a9d2dac0 authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a util function in virtual placer to return canonicalized device string, which can be used to fix the node's device field before passing them to the maxcut algorithm.\n\nPiperOrigin-RevId: 158322753\n\n---\nCommit 2d8da1d9b authored by Daniel Ylitalo<daniel@blodan.se>\nCommitted by gunan<gunan@google.com>:\nRecognize CPU core count in FreeBSD (#10490)\n\n---\nCommit c19e6cac0 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Initial implementation of TensorArray ops.\n\nThe XLA implementation of TensorArrays is more restrictive than regular TensorArrays:\n* XLA TensorArrays must have dynamic_size=False.\n* all elements in an XLA TensorArray must have the same shape.\n* writes always add their values to any existing values; neither reads nor writes ever issue errors. Out-of-bounds writes currently wrap.\n\nRefactor Variable handling in the TF/XLA bridge. Use a XlaVariable* to refer to variables inside compilation rather than a numerical ID. Allow for variables that don't correspond to variables known to the user. Also use XlaVariable to handle TensorArrays.\n\nPiperOrigin-RevId: 158322041\n\n---\nCommit b5e8d3086 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Refactor randomized tests to allow testing of larger inputs without running out of memory.\n\nPiperOrigin-RevId: 158321431\n\n---\nCommit 5d90bbaac authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Disable constant_folding in test base, so that intended test code paths\nwould not be elided by constant_folding pass.\n\nPiperOrigin-RevId: 158317641\n\n---\nCommit 036ce8ba6 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans dense_update_ops (#10335)\n\n* [OpenCL] Cleans dense_update_ops\n\n* Acts on feedback from: #10335#discussion_r120536460\n\n---\nCommit 85f968125 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans cast operation (#10330)\n\n* [OpenCL] Removes not needed typedef for SYCLDevice\n\n* [OpenCL] Fixes formatting\n\n* [OpenCL] use SYCLDevice for int32 cast case\n\n---\nCommit bff5e72da authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix typo.\n\nPiperOrigin-RevId: 158310742\n\n---\nCommit 38249d6be authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwap the order of NanTensorHook and custom hooks\n\nto ensure that when the training encounteres NaN's in the loss function, user-supplied hooks such as tf_debug.LocalCLIDebugHook can still be used to debug the root cause of the numeric issues.\n\nPiperOrigin-RevId: 158310249\n\n---\nCommit 599727c65 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Propagate debug option flags to hlo_test_base.\n\nSpecific HLO tests have to replace the generic test_main target with a manual\nmain() that invokes RUN_ALL_TESTS.\n\nTo get access to a module with debug options set up, a new convenience method\nis created on HloTestBase.\n\nInitially algebraic_simplifier_test is modified as a canary; in a followup\nwe'll convert all HLO tests to this approach.\n\nPiperOrigin-RevId: 158309488\n\n---\nCommit 0770393e9 authored by Eric Liu<ioeric@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[Tensorboard] Add a trace viewer component to TensorBoard.\n\nWe make the trace viewer a separate app; otherwise, there would be dependency\nconflicts (e.g. Polymer) between the trace viewer app and the tensorboard app.\nThe trace viewer app would be served by a plugin, and Tensorboard dashboard will integrate trace viewer app using iframe in the\nfuture.\n\nThis CL also added \"mominify\" support for link import HTML tags in the\ntensorboard home-grown java vulnizer; otherwise, the vulcanized trace viewer code\nwould crash the java vulcanizer.\n\nFor open-source build, we add a denpendency on the Catapult github repository\n(https://github.com/catapult-project/catapult/tree/master/tracing). We use a bazel genrule to vulcanize a trace viewer binary which is then used in the\ntf-trace-viewer component.\n\nPiperOrigin-RevId: 158309408\n\n---\nCommit 85e832201 authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport unknown emit shapes in tf.nn.raw_rnn.\n\nPiperOrigin-RevId: 158308002\n\n---\nCommit edb5fed7f authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd label-vocab support to binary logistic head.\nAdd assertion that binary classifier label is in range [0., 1.]\nFixed Classifier Integration tests.\n\nPiperOrigin-RevId: 158307521\n\n---\nCommit f8e1cf8fa authored by Justine Tunney<jart@google.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nOpen up visibility of tf_imports (#10500)\n\nThis also fixes the definition of Clutz.\n---\nCommit 9fd7cf054 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans relu ops (#10343)\n\n* [OpenCL] register relu ops to gpu types (no half)\n\n* [OpenCL] Removes #undef EIGEN_USE_SYCL\n\n---\nCommit 09c1455e3 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reverse_op.cc (#10346)\n\n---\nCommit b7892a30f authored by orome<royl@aldaron.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nClarify tf.matmul documentation (#10381)\n\n* Update math_ops.py\n\n* Fix non-ascii character\n\n---\nCommit 9786b7062 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Cleans StridedSlice Op (#10314)\n\n* [OpenCL] Cleans StridedSlice Op\n\n* [OpenCL] Removes half from registred types\n\n---\nCommit f105df047 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, optimize backward filter convolution for images 2 or 4 times smaller than 16x16. Also initialize in_cols from blockDim, to fix the regression caused in CL 157906773.\n\nPiperOrigin-RevId: 158296136\n\n---\nCommit 492afc2e3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 158295169\n\n---\nCommit abe0877ef authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd bazel version check to .configure\n\nPiperOrigin-RevId: 158294569\n\n---\nCommit b702e7e79 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158294289\n\n---\nCommit 94085bee7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReplace std::function object with regular function.\n\nThe function is called recursively, and the std::function object had only existed to allow recursion from within a lambda expression. A regular function should be cheaper than a polymorphic function wrapper.\n\nPiperOrigin-RevId: 158292415\n\n---\nCommit ba656b261 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse template specialization instead of overloaded methods. This is a more appropriate tool here. NFC\n\nPiperOrigin-RevId: 158292035\n\n---\nCommit 55f987692 authored by Yutaka Leon<yleon@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n  Make tf.contrib.lookup  python functions use the kernels v2 that uses the resource tensor as handler.\n\nPiperOrigin-RevId: 158291836\n\n---\nCommit ebae3deba authored by Wei Ho<weiho@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwitch back to max_num_rows_to_load instead of reading slice by slice due to performance regression from network overhead.\n\nAdd check when using initializing values to avoid seg fault\n\nPiperOrigin-RevId: 158291218\n\n---\nCommit 7b4c01794 authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport numpy-style padding and slicing of tf.spectral.rfft/irfft to match the desired FFT length.\n\nFixes incorrect RFFT/IRFFT results when fft_length does not match the input dimension.\n\nPiperOrigin-RevId: 158289991\n\n---\nCommit fdb8e2935 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate iOS examples to use CocoaPods, and moved to tensorflow/examples/ios\n\nPiperOrigin-RevId: 158289285\n\n---\nCommit d86167b5f authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nMerging rc2 back into master.\n\n---\nCommit dffea202a authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nClean up some code after previous CL\n\nPiperOrigin-RevId: 158282834\n\n---\nCommit 7b5302af0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds ability to set a \"family\" attribute in Tensorflow summaries, which\ncontrols the \"tab name\" of the summary that is displayed.\n\nThis solution keeps using name_scope to keep names unique, but then prefixes the tag with the family name if provided.\n\nPiperOrigin-RevId: 158278922\n\n---\nCommit 611c82b5b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds integration test for DNNLinearCombined((Classifier)|(Regressor)).\n\nPiperOrigin-RevId: 158278512\n\n---\nCommit cc6c91a9a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove a further unused proto header inclusion\n\nPiperOrigin-RevId: 158278026\n\n---\nCommit 9f17c26ca authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add HloLocation to dataflow analysis.\nAdd an HloLocation abstraction to dataflow analysis which indicates where (in the output of what instruction and at which index) an HloValue may appear. Previously only uses were stored with an HLO value where a use is an edge in the HLO graph (instruction, operand number and ShapeIndex).\n\nAlso, change the handling of tuple-shaped kSelect instructions when ssa_form is true. Previously a phi value would be created. With this change the the value set instead contains the union of it's inputs identical to the ssa_form=false case.\n\nPiperOrigin-RevId: 158276598\n\n---\nCommit b9d5e1441 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Start collecting flags for debug options in a single place.\n\nClientLibraryTestBase will now parse command-line flags for debug options\nautomatically, permitting subclasses to override certain options by using\nmutable_debug_options.\n\nmain() still has to call AppendDebugOptionsFlags() explicitly before running\nthe TF flag parser. In the mean-time, this CL leaves flag handling to the\ncurrent \"legacy\" approach. However, this is part of a larger plan to move *all*\ndebugging flags for XLA into the DebugOptions message and expose them as flags\nfrom a single place. The other flags (which are not controlling debugging\noptions) will have to be propagated more explicitly.\n\nPiperOrigin-RevId: 158276294\n\n---\nCommit 3b6fe94bb authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nProperly handle shape nodes that have a preexisting control dependency\n\nPiperOrigin-RevId: 158274845\n\n---\nCommit 1d67379d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup\n\nPiperOrigin-RevId: 158268933\n\n---\nCommit 41997756c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSort header inclusions; define EIGEN_USE_THREADS where headers depend on it.\n\nPiperOrigin-RevId: 158267803\n\n---\nCommit 85355f015 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd missing header inclusion\n\nPiperOrigin-RevId: 158265934\n\n---\nCommit 3cf88d390 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWhen GPU is configured, do not require --config=cuda.\nAlso fix indentation in configure.\n\nPiperOrigin-RevId: 158232959\n\n---\nCommit f48673b50 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Removes ReductionFunctor for SYCLDevice (#10326)\n\nWe are using Eigen implementation\n---\nCommit 1b6453bec authored by Joan Puigcerver<joapuipe@gmail.com>\nCommitted by gunan<gunan@google.com>:\nFixes issue #10258 (#10366)\n\nOn CUDA versions previous to 8.0, only __shared__ variables could be declared as static in the device code.\n---\nCommit cd56a638d authored by Beomsu Kim<123bskim@naver.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed wrong range in docstring (#10272)\n\n---\nCommit d13ae380c authored by Micha? Jastrz?bski<michal.jastrzebski@intel.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix CMD in Dockerfile (#10444)\n\nCurrently Notebook fails execution because default user for this container is root, and unless explicitly allowed, jupyter notebook will not start.\n---\nCommit 8118ab4ec authored by Simon Perkins<simon.perkins@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nSupport partial gets in MapStagingArea (#10276)\n\n* Modify map staging area tests\n\n- size from `small` to `medium`\n- introduce 2 shards\n\n* Add partial get support in MapStagingArea\n\nA partial list of tensors in a (key, value) map entry can now be\nrequested. Once all tensors associated with the entry are removed,\nit is removed from the map.\n\n* Correct output/indices mismatch errors\n\n* Rename IncompleteTuple to OptionalTuple\n\n* Add partial get test with indices\n\n* Add some more index checks\n\n* Improve stage test case graph creation\n\nTest sessions (and default graphs) are reused by default.\nCreate explicit, finalized graphs in each test to prevent\npossible interactions between stateful Staging Areas and\nothers ops created in separate tests.\n\n* Make staging area tests small and remove shards\n\nThey were originally made 'medium' to ameliorate timeouts in the test\ncase, but they usually run in ~1s so they should be small.\n\n* Improve imports\n\nAvoid importing base tensorflow package\n\n* Support both python 2 and python 3 range.\n\n* Set map_stage_op_test to size=large\n\n* Convert the tests to size=medium\n\n---\nCommit 0df102b0a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nUpdate `configure` script sample (#10455)\n\nThe `configure` script was changed regularly since the generation of the sample.\nThis PR updates the sample to reflect those changes.\n---\nCommit f6dc1ac61 authored by Earthson Lu<Earthson.Lu@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nMKL_INSTALL_PATH should not be ignore when given (#10180)\n\n* MKL_INSTALL_PATH should not be clear when given\n\n* fix overwrite by default\n\n---\nCommit 8ad6a036e authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nJava: Update Maven release to 1.2.0-rc2\n\nPiperOrigin-RevId: 158212897\n\n---\nCommit 15eddf035 authored by Fritz Obermeyer<fritz.obermeyer@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nExport C API symbols in _pywrap_tensorflow_internal.so (#10469)\n\n* Export C API symbols\n\n* Export C API symbols under config:default\n\n---\nCommit 754e12668 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Removes half concat op registration (#10331)\n\n---\nCommit cfdc22dee authored by Peng Yu<yupbank@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nfix the error (#10293)\n\n---\nCommit 58747e357 authored by Joel Hestness<jthestness@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nPhiloxRandom: Fix race in GPU fill function (#10298)\n\n* PhiloxRandom: Fix race in GPU fill function\n\nThe PhiloxRandom fill kernel for the GPU had race conditions that caused the\noutputs to be non-deterministic. In particular, the code previously executed\nwith N GPU threads (# thread contexts per GPU), but it would only advance the\nfill addresses by N-1 stride in each step. This incorrect stride caused the\n0th and N-1st threads to write to the same memory locations, racing for which\nwas last to write their common locations. Make the stride equal to the number\nof threads to eliminate the race.\n\nBONUS: By fixing this race, PhiloxRandom constant-sized GPU initializers now\nmatch CPU initializers.\n\n* Update random_ops_test.py to find race conditions\n\nIncreasing the size of arrays in the random_ops_test.py test to manifest\nthe race conditions to be resolved.\n\n---\nCommit 2cbcda08f authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed formatting in Linux install guide (#10353)\n\nFormatting issues were introduced in PR #8825, commit f30918b3694afe844990cbddc82e27e023d88856\n---\nCommit ab5f38560 authored by Lakshay Garg<lakshayg@outlook.in>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed typos in documentation & READMEs (#10365)\n\n---\nCommit 94dc1dbfa authored by Christos Nikolaou<cNikolaou@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nEnable figures in the tfprof README.md (#10372)\n\n---\nCommit 3018d4678 authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix typos (#10386)\n\n---\nCommit c5f3c6171 authored by Daniel Rasmussen<drasmuss@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix unbatch for Datasets with multiple elements (#10401)\n\n* Fix unbatch for datasets with multiple elements\n\n* fixup! pylint (indent two spaces instead of four)\n\n---\nCommit 8b065bc10 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix unaligned args in api_docs/python/tf/contrib/learn/Evaluable (#10423)\n\nThis commit fixes unaligned args in api_docs/python/tf/contrib/learn/Evaluable\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n---\nCommit 8f89b654f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nProfile memory usage in VirtualScheduler and report peak memory usage.\nTo do so, NodeState now handles different output ports of a node (in case\na node has multiple outputs).\n\nAlso, VirtualScheduler code is cleaned up with more comments.\n\nPiperOrigin-RevId: 158209068\n\n---\nCommit 0ea0bf5aa authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a frontend for viewing the first ops that exhibit bad values (NaN, +/- Inf).\n\nThis helps the user identify problematic ops. Also moved the debugger data logic within tf-graph-info into a new tf-graph-debugger-data-card component.\n\nPiperOrigin-RevId: 158208679\n\n---\nCommit ed47ecf2d authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Cleans variable op (#10333)\n\n* [OpenCL] Cleans variable op\n\n* Fixes formatting and float / double -> GPU_NUMBER_TYPES_NO_HALF\n\n---\nCommit 9b2c1af63 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Improves device reporting (#10462)\n\nPrints: id, type, name, vendor and profile of the device\n---\nCommit 7f5384dcc authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMaking load() work for resource variables.\n\nPiperOrigin-RevId: 158205361\n\n---\nCommit 05412bd36 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Simplify Shape traversal visitors.\nSimplify shape traversal visitors in ShapeUtil and ShapeTree. Add a non-Status form because most uses of the traversal methods do not use it, and remove is_leaf parameter from ShapeTree.ForEach* as it is not frequently used.\n\nPiperOrigin-RevId: 158201574\n\n---\nCommit 69c9365b4 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtracted linear estimator testing utils to be reused by dnn-linear-combined.\nAdded tests for linear part of dnn-linear-combined estimator.\n\nPiperOrigin-RevId: 158200827\n\n---\nCommit 65ce8c723 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd arrowheads to dataflow edges.\nMake reference edges orange.\nRemove animations from tooltips in the graph documentation.\n\nPreviously, arrowheads were only added to reference edges (because we assumed users knew about the convention that arrowless edges flow upwards). That decision nicely reduces clutter. However, recently, some internal and external folks have expressed confusion, and so I want to try adding arrowheads to all data flow edges. And make the reference edges starkly different.\n\nSee #10428\n\nPiperOrigin-RevId: 158195388\n\n---\nCommit bf4c3dd6b authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nRevert \"Fix patching issue on Windows\" (#10472)\n\nThis reverts commit 47e6785646a1266f01a1a570bd799f8518ee2997.\n\n---\nCommit b49515539 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd only string constants to ASSET_FILEPATHS collection.\n\nPiperOrigin-RevId: 158192152\n\n---\nCommit 51acad09c authored by Sergio Guadarrama<sguada@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd tests with different delta to huber_loss.\n\nPiperOrigin-RevId: 158191361\n\n---\nCommit a4e7b7add authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes a bug in setting default optimizers for DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158190192\n\n---\nCommit ddd67e333 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reshape.cc (#10347)\n\n* [OpenCL] Cleans reshape.cc\n\n* Removes half and complex numbers.\n\n Half is extension and complex numbers needs implementation in Eigen first\n\n---\nCommit 3ca653304 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158186454\n\n---\nCommit 8cda8660e authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans sendrecv_ops.cc (#10345)\n\n---\nCommit 6915bb919 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans Slice op (#10341)\n\n---\nCommit 54998b45d authored by Michele Colombo<m-colombo@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nBasicRNNCell comment fix (#10467)\n\n---\nCommit df5906fb7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMark saver/restore ops that depend on filesystem as stateful to disable them\nfrom being folded into a constant by graph optimizer.\n\nPiperOrigin-RevId: 158182282\n\n---\nCommit 96cb4d182 authored by Sergio Guadarrama<sguada@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support of scale_l1 == 0. or scale_l2 == 0 to l1_l2_regularizer.\nAdded tests.\n\nPiperOrigin-RevId: 158179790\n\n---\nCommit b65eb3f9b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSpeed up atrous_convolution_test by combining evaluations.\n\nTo make this test run faster (and prevent it from timing out under\ncertain circumstances), this change combines all evaluations for each\ntest method into a single call to Session.run, to eliminate overhead.\n\nThis reduces the test time from about 40 seconds to 10 seconds.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 158175227\n\n---\nCommit b440abce7 authored by Gao, Xiang<qasdfgtyuiop@gmail.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nadd Cuda{2D,3D}LaunchConfig that maximizes occupancy (#10032)\n\n* add Cuda{2D,3D}LaunchConfig that max occupancy\n\n* remove default val, check input<=0\n\n* add max size check\n\n* fix typo\n\n* tests, docs, and related changes\n\n* build the test\n\n* buildify\n\n* cudaOccupancy... call check success, and style fix\n\n---\nCommit 81cf61fdb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInitialize tensor in graph_properties_test, to avoid msan complaint.\n\nPiperOrigin-RevId: 158169374\n\n---\nCommit cabc5c35c authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add xla_disable_hlo_passes to DebugOptions\n\nAlso add a SetDebugOptions method to ClientLibraryTestBas; this lets us set\ndebug options in tests by calling it.\n\nAs an example, this CL removes the current way of passing\nxla_disable_hlo_passes programmatically in tests - it used to employ a special\nconstructor parameter which is no longer required.\n\nPiperOrigin-RevId: 158169006\n\n---\nCommit 187d23337 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans Pad op (#10339)\n\n---\nCommit e8bc38ef6 authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nFix test failures on windows. (#10470)\n\n---\nCommit 2b3535c64 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor docstring fix for build_parsing_serving_input_receiver_fn\n\nPiperOrigin-RevId: 158163615\n\n---\nCommit e55f2e036 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPropagates constants through switch nodes.\n\nPiperOrigin-RevId: 158163537\n\n---\nCommit b01d4b905 authored by Jacques Pienaar<jpienaar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Remove outdated todo.\n\nPiperOrigin-RevId: 158161411\n\n---\nCommit 7125733d7 authored by William Chargin<wchargin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCreate a set of sample data for the audio plugin\n\nThis implements a simple tone generator, with sine waves, square waves,\nand triangle waves, plus two simple combinations of sine waves. The step\nvalue is used to control the frequency.\n\nPiperOrigin-RevId: 158160889\n\n---\nCommit dc81a2420 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdates to the WALSMatrixFactorization estimator:\n- Add a completed_sweeps variable to keep track of sweeps that have been completed during training.\n- Add a StopAtSweepHook, which can request a stop after completing a specified number of sweeps.\n\nPiperOrigin-RevId: 158156347\n\n---\nCommit 74220616c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet device cores and frequency in op_level_cost_estimator_test,\nto avoid asan error about assigning inf to int64 (this comes\nin from a divide-by-0).\n\nPiperOrigin-RevId: 158155488\n\n---\nCommit 47e678564 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nFix patching issue on Windows (#10452)\n\n---\nCommit 6d54f09d9 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nFix linking errors of lmdb on Windows (#10457)\n\n---\nCommit 61c8a745b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup: Add braces around if statement arms; remove redundant \"return\" and \"static\".\n\nPiperOrigin-RevId: 158143418\n\n---\nCommit e9a889c5e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPass int parameter by value, not by const reference\n\nPiperOrigin-RevId: 158142102\n\n---\nCommit 9184726ed authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid unnecessary copying of map data during visitation\n\nPiperOrigin-RevId: 158141962\n\n---\nCommit 2e7e1d57b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSmall fix for how std::move is used in constructors\n\nPiperOrigin-RevId: 158141564\n\n---\nCommit 2a61c1652 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn cpu compiler's CompileAheadOfTime, pass ordering when compiling entry computation.\n\nPiperOrigin-RevId: 158140349\n\n---\nCommit f3f53e8b3 authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Add support for dicts and remove lists from nested structures.\n\nThis changes the behavior of constructors like\n`tf.contrib.data.Dataset.from_tensors()` when passed a list. Previously, the\n`nest` utility would recurse into each element of such a list and create a\nseparate Dataset component. Now the list will be converted to a tensor, allowing code like:\n\n```python\ndataset = tf.contrib.data.Dataset.from_tensor_slices(([1, 2, 3], [4, 5, 6]))\n```\n\n...to define a dataset with two components (each of shape `()`).\n\nThis change also adds support for dictionaries as nested structures, which\nsimplifies integration with dictionary-returning ops like `tf.parse_example()`.\n\nFixes #10151.\n\nRELNOTES: Breaking change to `tf.contrib.data.Dataset` APIs that expect a\nnested structure. Lists are now converted to tf.Tensor implicitly. You may need\nto change uses of lists to tuples in existing code. In addition, dicts are now\nsupported as a nested structure.\nPiperOrigin-RevId: 158139467\n\n---\nCommit b6a8848c1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nEnabling python configuration to use a remotely generated configuration that is located inside of the org_tensorflow repo (previously it *had* to be a remote repo declared in workspace file).\n\nPiperOrigin-RevId: 158138601\n\n---\nCommit 0fe0bfcc3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused protobuf header inclusions\n\nPiperOrigin-RevId: 158120864\n\n---\nCommit f0c4c6c3f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW backward filter convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 158111294\n\n---\nCommit 8dcf37b47 authored by Jon Malmaud<malmaud@gmail.com>\nCommitted by gunan<gunan@google.com>:\nFix typo (#10379)\n\n---\nCommit 3039d7da2 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\nRemove \"bazel clean\" (#10318)\n\nReverting #8880 (see #10236)\nunnecessary since bazelbuild/bazel#2759 was merged\n---\nCommit ae1c16ae8 authored by Yifei Feng<fengyifei2026@gmail.com>\nCommitted by gunan<gunan@google.com>:\nUpdate docker to cudnn6. (#10307)\n\n* Update docker to cudnn6.\n\n* Update Dockerfile.gpu\n\n* Add --expunge to bazel clean to make cuda_configure run again and update TF_CUDNN_VERSION.\n\n* Remove expunge and set CUDA and CUDNN version default in configure.\n\n* Update configure\n\n* Only set --action_env once\n\n* Update prints for default version.\n\n---\nCommit 232e9d86d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntf_workspace() claims that the tf_repo_name argument is unused.\ntemp_workaround_http_archive still requires it.\nThis change silences the spurious message.\n\nPiperOrigin-RevId: 158089834\n\n---\nCommit cc1a02d37 authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd fp16 support to convolutional layers that support it.\n\nPiperOrigin-RevId: 158086284\n\n---\nCommit 7d3fbba48 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtracted dnn estimator testing utils to be reused by dnn-linear-combined.\nAdded tests for dnn part of dnn-linear-combined estimator.\n\nPiperOrigin-RevId: 158084898\n\n---\nCommit 9d12c629c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor the document and some polishment\n\nPiperOrigin-RevId: 158083952\n\n---\nCommit 134138299 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCorrected comment: import_scoped_metagraph does not return a Saver.\n\nPiperOrigin-RevId: 158082288\n\n---\nCommit a58553e4d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd function in shape inference to try to infer output tensor content based on\nthe input shapes of the op. In some cases (E.g: shape), knowing the shapes of\nthe input is all that is necessary to infer the content of the output tensor.\nThis improves shape inference.\n\nPiperOrigin-RevId: 158079306\n\n---\nCommit 0cc851c08 authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCall maxcut algorithm in the model_based_cost_estimator.\n\nPiperOrigin-RevId: 158078511\n\n---\nCommit 7d76a90be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd question marks next to items in the graph legend.\n\nPiperOrigin-RevId: 158076005\n\n---\nCommit 68fdb7628 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158075939\n\n---\nCommit 3d52e4cb9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix create_meta_graph to respect an empty collection_list.\n\nPiperOrigin-RevId: 158073112\n\n---\nCommit 54ccc3e5a authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add module-scoped HLO dataflow analysis.\nThis is the first step to replacing TuplePointsToAnalysis with a global, module-scoped analysis. This dataflow analysis identifies all values and their defs and uses in the XLA graph. The analysis is currently unused. Follow up CLs will add buffer alias analysis using this dataflow analysis, and incrementally switch the transformation passes (for example, CopyInsertion) to use these new module-scoped analyses.\n\nPiperOrigin-RevId: 158067910\n\n---\nCommit 93c57c6e4 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nHandle control flow logic properly:\n * Don't fold enter/exit nodes since that can interact badly with frames\n * Create proper control dependencies on switch nodes\n\nPiperOrigin-RevId: 158066691\n\n---\nCommit 9e6899720 authored by Jingyue Wu<jingyue@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[SE] Add cudnnTransformTensor to StreamExecutor.\n\nPiperOrigin-RevId: 158062553\n\n---\nCommit 827874c30 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW backward input convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 158061669\n\n---\nCommit bee26215c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSpeed up multinomial_op on CPU by using a vectorized Eigen expression and avoiding unnecessary casts.\n\nBenchmark with AVX+FMA enabled:\n\nRun on <redacted> (12 X 3492 MHz CPUs); 2017-06-05T12:54:07.881672447-07:00\nCPU: Intel Haswell with HyperThreading (6 cores) dL1:32KB dL2:256KB dL3:15MB\nBenchmark                          Base (ns)  New (ns) Improvement\n------------------------------------------------------------------\nBM_Multinomial_cpu_1_10000_4          250817    172953    +31.0%\nBM_Multinomial_cpu_1_10000_128        273834    187552    +31.5%\nBM_Multinomial_cpu_1_10000_10000     1174175   1130778     +3.7%\nBM_Multinomial_cpu_1_100000_4        2040741   1276761    +37.4%\nBM_Multinomial_cpu_32_10000_4       10221765   4498666    +56.0%\nBM_Multinomial_cpu_32_10000_128     10638159   4994754    +53.0%\nBM_Multinomial_cpu_32_100000_4      100790019  44193314    +56.2%\nBM_Multinomial_cpu_128_100000_1     431269640  182506078    +57.7%\nPiperOrigin-RevId: 158061480\n\n---\nCommit 515b3ac67 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd Clutz to TensorBoard build\n\nThis is so we can get JavaScript protobufs. This CL also improves the\nweb_aspect and makes some peculiar Closure Compiler errors go away\nrelating to externs.\n\nPiperOrigin-RevId: 158061198\n\n---\nCommit 0df6760fe authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded a test to make sure that graph properties for variables are properly\nreported\n\nPiperOrigin-RevId: 158053084\n\n---\nCommit 2ccfe8e76 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded a new method to extract the graph properties from a cost graph without\nhaving to run the model. This will simplify the process of creating regression\ntests\n\nPiperOrigin-RevId: 158050327\n\n---\nCommit 27f1b80c2 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes memory leak in py_func when functions return unwrapped strings.\n\nPiperOrigin-RevId: 158046530\n\n---\nCommit cf238e1f2 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix memory leak in python caused by @tf_should_use.\n\nThe issue is that python's GC has trouble collecting objects with __del__ methods.\n\nThe solution is two pronged:\n* Keep track of usage state outside of the class, via a dict mapping\n  id(object) => state\n* Remove __del__ (this was the source: python's GC couldn't collect wrapped\n  objects), and instead use weakref.finalize to emit warnings just as the object\n  is being garbage collected.\n* Added tests for garbage collection [they were failing before i fixed the issue]\n\nPiperOrigin-RevId: 158042388\n\n---\nCommit e6f581863 authored by Bo Wang<david.b.wang@gmail.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nNew reader for LMDB databases (#9950)\n\n* Add LMDBReader op and test case\n\n* Add testcase to load LMDB from a folder\n\n* Add tensorflow/core/lib/lmdb/testdata/data.mdb\n\n* Add EOF test\n\n* Add license export\n\n* Blacklist the test data in pip_smoke_test.py\n\n* Address issues with respect to review\n\n* Add LICENSE to BUILD rules\n\n* Remove the prefx of LICENSE\n\n* Wrap key with compat.as_bytes()\n\n* Fixed a compilation flag\n\n* Improve BUILD rules\n\n* Support LMDB build in cmake\n\n* Fix BUILD file format with buildifier\n\n* Add fake unistd.h for lmdb to build on Windows\n\n* Avoid building lmdb tools which depends on unistd.h\n\n* Fix the string encoding issue in Python3\n\n* Update lmdb library name in CMakeList.txt\n\n---\nCommit cc411f938 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWhen converting the layout of Conv2DBackpropInput, we need to permute one of\nits inputs, which is a constant node. We permute a copy of this node, instead of the\noriginal node, because the original node may be used as input to other nodes.\nThis kind of sharing of const node could arise if the graph is pre-optimized by common\nsubexpression elimination, which is part of the L1 optimizations in\nTensorFlow.\n\nPiperOrigin-RevId: 158037552\n\n---\nCommit 88bdb6fca authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove all remaining references to non-public TF modules from TensorBoard.\n\nI deleted the PluginAssetUtil tests because that code is deprecated.\nI'll later add manual testing for backcompat in the text plugin.\n\nPiperOrigin-RevId: 158037466\n\n---\nCommit 6c531eb2f authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd file hash to Keras Boston Housing dataset to force cache update.\n\nPiperOrigin-RevId: 158036587\n\n---\nCommit afdc38cd3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove deprecated resource handle functions in InferenceContext.\n\nPiperOrigin-RevId: 158034419\n\n---\nCommit 9f932e6ce authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid parsing a rendezvous key for Send/Recv ops outside a loop.\n\nFor such ops, the rendezvous key will be constant, because\n`ctx->frame_iter()` will always evaluate to `{0, 0}`. Benchmarking\nreveals that this can save between 1 and 2 microseconds per Send or\nRecv op execution. The optimization applies to all cross-process,\ninter-device, and intra-device (host-to/from-device memory) Send/Recv\nops.\n\nPiperOrigin-RevId: 158032522\n\n---\nCommit cc2dd4ac8 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntfdbg: dump debug data from different devices in separate directories\n\nFixes: #7051\nwherein TFDBG failed to load the data dump from a Session.run() involving multiple GPUs.\n\nThe root cause of the bug was that TFDBG previously assumed that node names are unique across all partition graphs. This is however not the case when multiple GPUs exist. The Send/Recv nodes in the partition graphs of the GPUs can have duplicate names. There will potentially be other cases like this in the future due to other reasons (e.g., distributed sessions and/or graph optimization).\n\nThis CL relaxes this assumption, by dumping the GraphDef and tensor data from different devices into different sub-directories under the dump root directory.\n\nPiperOrigin-RevId: 158029814\n\n---\nCommit a5909d643 authored by Toby Boyd<tobyboyd@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixed triggering create device multiple times\n\nPiperOrigin-RevId: 158025196\n\n---\nCommit 504a307b7 authored by Martin Wicke<wicke@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake sure that Adam colocates ops with a consistent variable across workers.\n\nPiperOrigin-RevId: 158022292\n\n---\nCommit 69ba4d3d4 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix #10371\n\ncpuinfo.get_cpu_info() doesn't seem to include the l2_cache_size key on some\narchitectures.\n\nPiperOrigin-RevId: 158021008\n\n---\nCommit a51a9846c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPerformance-related tweaks: Don't copy loop variables; remove ineffective std::move casts.\n\nPiperOrigin-RevId: 158017670\n\n---\nCommit 009789f74 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Allow 0-sized slices in DynamicSlice and DynamicUpdateSlice; add tests.\n\nPiperOrigin-RevId: 158015870\n\n---\nCommit 48a4853eb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMiscellaneous cleanups\n\nPiperOrigin-RevId: 158012131\n\n---\nCommit 379ddde24 authored by Chris Song<sjhshy@gmail.com>\nCommitted by Chris Song<sjhshy@gmail.com>:\nFix misspells.\n\n---\nCommit a0a76da97 authored by Lakshay Garg<lakshay.garg.1996@gmail.com>\nCommitted by Lakshay Garg<lakshay.garg.1996@gmail.com>:\nFixed typo in code\n\n---\nCommit 7ffc35732 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support for bools in matrix_diag, matrix_diag_part, matrix_set_diag, matrix_band_part.\n\nPiperOrigin-RevId: 157939272\n\n---\nCommit edf3d5dbe authored by Darren Garvey<darren.garvey@gmail.com>\nCommitted by Darren Garvey<darren.garvey@gmail.com>:\nconfigure: Fix default path when enabling MPI.\n\nCorrect showing what the default path is when mpi is installed.\n\n---\nCommit aad2e3daf authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW forward convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 157915637\n\n---\nCommit 5cf08d9cb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDrop blockDim.y for the equivalent in_cols, and slightly improve naming (use 'pixels' instead of 'size' for height*width numbers).\n\nPiperOrigin-RevId: 157906773\n\n---\nCommit 563f05ff6 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf contrib seq2seq] Expand tile_batch to handle nested structures.\n\nThis allows it to properly tile the initial wrapper state when using\nBeamSearchDecoder with AttentionWrapper.  Unit tests updated to show this use.\n\nPiperOrigin-RevId: 157903115\n\n---\nCommit 1234e2dda authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix Plottable definition\n\nOn Mac OS the build directory in the Node package conflicts with BUILD.\n\nPiperOrigin-RevId: 157899970\n\n---\nCommit bb7a8d8e7 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon't use the _output_shape attribute in the op_level_cost_estimator since\nthere is no guaranty that it will be present or accurate.\n\nPiperOrigin-RevId: 157898989\n\n---\nCommit 6f4204c3d authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix TensorBoard SHA256 in cmake\n\nPiperOrigin-RevId: 157897958\n\n---\nCommit c9d2f432b authored by Justine Tunney<jart@google.com>\nCommitted by Justine Tunney<jart@google.com>:\nFix TensorBoard SHA256 in cmake\n\n---\nCommit 1c70fb686 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd training test for multi classes (n>2) linear classifier.\n\nPiperOrigin-RevId: 157896002\n\n---\nCommit 675d36be0 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd fused batch norm to tf.layers.\n\nPiperOrigin-RevId: 157893874\n\n---\nCommit f37d0ea47 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change -- first draft docs\n\nPiperOrigin-RevId: 157891937\n\n---\nCommit 9b8f6113b authored by Zongheng Yang<zongheng@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntensor_bundle: fix that the read path forgets to cache file handles.\n\nIn a case where a reader is geographically far from the file, this change\nachieves a speedup of end-to-end checkpoint restore by 5.8x.\n\nPiperOrigin-RevId: 157889659\n\n---\nCommit 0c92dada6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse inplace Cholesky factorization and solves to speed up and reduce memory usage in matrix_solve_ls.\nCheck succes before copying outputs in cholesky_op.\n\nPiperOrigin-RevId: 157887564\n\n---\nCommit a4caeb2ea authored by William Chargin<wchargin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtract the graphs dashboard to a plugin\n\nThis completes the great plugin migration!\n\nThe graphs plugin is somewhat different from the plugins considered so\nfar. First, it exposes two kinds of data: graph data and run metadata.\nWe elect to put both sources of data under the domain of the graphs\nplugin for now, because it's not clear that the run metadata would be\nuseful for anything else. Second, the graph data really has no use for\n\"tags\": a run either has an associated graph or it does not. Thus, we\nexpose an endpoint /data/plugin/graphs/runs that is different in format\nfrom the /tags routes exposed by other plugins (it returns just a list\ninstead of a run-to-tag mapping).\n\nThis change removes a bunch of tests from application_test.py. The tests\ncover the compresion behavior of the graph endpoint, but the graph\nendpoint doesn't have any special logic in the way of compression. Thus,\nthe tests are, apparently, testing that werkzeug (or whatever is\nrelevant here) provides good compression defaults. This isn't\nnecessarily a bad idea, but it shouldn't be coupled to the graph tests.\n\nTo get test data that includes run metadata, you can run this script:\n\n    https://raw.githubusercontent.com/tensorflow/tensorflow/326942394e69074d50d5889218a24c9371eff259/tensorflow/examples/tutorials/mnist/mnist_with_summaries.py\n\nPiperOrigin-RevId: 157884714\n\n---\nCommit 05a6a13f7 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by gunan<gunan@google.com>:\nMake sure all writer caches are closed before deleting directories in dnn_test.\n\n---\nCommit d0e761f8d authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by gunan<gunan@google.com>:\nDisable another test that uses matrix_set_diag on windows.\n\n---\nCommit 8939b8562 authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Re-implement IteratorGetNext as an AsyncOpKernel.\n\nThis prevents the op from consuming an inter-op thread pool thread\nwhen blocked, and fixes a potential deadlock when many IteratorGetNext\nops are blocked. Fixes #10369.\n\nPiperOrigin-RevId: 157878885\n\n---\nCommit 9e25c68ad authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd loss_only_head to hold additional loss terms for multi_head setup\n\nPiperOrigin-RevId: 157875934\n\n---\nCommit 7cdcd0cca authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFilter more op types that don't benefit from constant folding.\n\nPiperOrigin-RevId: 157875168\n\n---\nCommit 366990d92 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Fix a subtle issue in copy_insertion due the interaction between copy\noverriding logic and RecordIndicesToColocatingBuffers:\n\n- When building instructions ShapeTree to be copy overriden, it is possible\nthat we create a single kCopy for two identical instructions. An example can\nbe:\n\n    %tuple.19 = tuple(%constant.4, %constant.1793, %constant.1793)\n\nwhere it is used in a while.init operand, and constant.1793 is read-only within\nthe loop and also used by another while loop. The copy overriding pass will then\ncreate the following (logical, not finalized) tuple:\n\n    %tuple.19 = tuple(%constant.4, %copy.5, %copy.5)\n\n- In the subsequent pass RecordAmbiguousOrNonDistinctIndices, to add copies to\nensure point_to set is distinct, the duplicate %copy.5 are ignored because they\nare not yet finalized, and these indices (1 and 2 in the example) are still\nmarked as to-be copied.\n\nTherefore distinctiveness is lost.\n\nThis fix applies to the override building stage, to explicitly avoid creating\nshared copies for non-distinct buffers.\n\nPiperOrigin-RevId: 157872231\n\n---\nCommit f4b8d21b8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange function parameters to references to avoid copying, or otherwise move from function parameters when moving reduces the amount of copying.\n\nPiperOrigin-RevId: 157867333\n\n---\nCommit 3eee61caa authored by Drew Hintz<pushespretn@gmail.com>\nCommitted by GitHub<noreply@github.com>:\nfix quotes in example code from ? to \"\n---\nCommit 4905c0eae authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove TODO - the new tolerance is okay to keep.\n\nPiperOrigin-RevId: 157861020\n\n---\nCommit 55f6b6ff1 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd explicit SparseTensor support to SignatureDef.\n\nPiperOrigin-RevId: 157860466\n\n---\nCommit 79099d677 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemoves default thresholds from BinaryLogisticHead and adds predict and evaluate tests for DNNClassifier.\n\nPiperOrigin-RevId: 157856471\n\n---\nCommit 54595f0f3 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds the training test for LinearClassifier with n_classes=2.\n\nPiperOrigin-RevId: 157855473\n\n---\nCommit cd6c02985 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd 'streaming_curve_points' metric which returns curve [ROC, PR] approximation at specified number of points.\n\nPiperOrigin-RevId: 157851535\n\n---\nCommit 0f2db7391 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Split union-find implementation in mark_for_compilation_pass.cc into a separate library, make it more generic.\n\nPiperOrigin-RevId: 157850985\n\n---\nCommit d5421cf58 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd additional concat test.\n\nPiperOrigin-RevId: 157844113\n\n---\nCommit f661128db authored by Geoffrey Irving<geoffreyi@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused overloads of SummarizeGraphDef and EqualGraphDef\n\nPiperOrigin-RevId: 157843404\n\n---\nCommit a56d59a84 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet flow to a value during TensorArray creation,\nRe-enable tensor_array_ops_test in msan.\n\nPiperOrigin-RevId: 157841785\n\n---\nCommit edcc5cc13 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd manual test runner for vz_sorting\n\nPiperOrigin-RevId: 157841098\n\n---\nCommit 3f6404f20 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAssign a max height of 800px to images in the image dashboard.\n\nThe user could always expand to actual dimensions if need be.\n\nPiperOrigin-RevId: 157838046\n\n---\nCommit c6ea6972a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove debugging LOG(INFO) from previous change.\n\nPiperOrigin-RevId: 157837305\n\n---\nCommit 07d39f28e authored by freedom\" Koan-Sin Tan<koansin.tan@gmail.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nmake gcc-5 on Ubuntu 16.04 happy (#10385)\n\ngcc-5 complains of ambiguity and refuses to go when doing something\nlike 'bazel build -c opt tensorflow/...'\n---\nCommit ac66be783 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup: Remove unused BUILD dependencies and unnecessary code.\n\nPiperOrigin-RevId: 157837211\n\n---\nCommit 4161ccc8e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdjust tolerance on dirichlet_multinomial test.\n\nPiperOrigin-RevId: 157834660\n\n---\nCommit 43c0f52f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix off-by-one error in BoolVector(begin, end) constructor.\n\nPiperOrigin-RevId: 157833086\n\n---\nCommit 419d437ba authored by Lakshay Garg<lakshay.garg.1996@gmail.com>\nCommitted by Lakshay Garg<lakshay.garg.1996@gmail.com>:\nFixed typo in code comment\n\n---\nCommit 07710014d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix device colocation for KMeans in case of multiple parameter servers.\n\nPiperOrigin-RevId: 157795360\n\n---\nCommit b659bc39f authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSimplify TensorBoard build\n\n- Remove tensorboard_typescript_genrule\n- Remove tensorboard_typescript_bundle\n- Introduce ts_web_library Skylark rule which supports seamless\n  TypeScript compilation.\n- Use Closure Compiler in semi-advanced mode to compile JavaScript.\n  This is done in a way that preserves <script> tag placement, which\n  causes pages to load faster and avoid FOUC, thereby making it a\n  better solution than the existing vulcanize.\n\nPiperOrigin-RevId: 157794795\n\n---\nCommit 0503ce09c authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWipe out previous shape inference result when importing a grappler item\nRun graph optimizations last: since they can be expensive it's best to filter invalid items first.\n\nPiperOrigin-RevId: 157792834\n\n---\nCommit 9ae941c4a authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTurn reductions along an empty set of dimensions into identity nodes.\n\nPiperOrigin-RevId: 157792209\n\n---\nCommit 69075f354 authored by Yangzihao Wang<yangzihao@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd functional support for cudnnConvolutionBiasActivationForward().\n\nPiperOrigin-RevId: 157788425\n\n---\nCommit 7d7a40309 authored by William Chargin<wchargin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtract the distributions dashboard to a plugin\n\nThis continues the great plugin migration. The distributions plugin was\nsimilar to the histograms plugin, but it also purported to allow CSV\ndownload like the scalars plugin. However, the existing implementation\nof this was flawed, and would always yield a 500 on current prod [1]\n(unless there were actually no data). This indicates that no one is\nactually using it---probably because there isn't a relevant button on\nthe frontend, anyway!---so I just removed it.\n\nThis also changes most frontend occurrences of \"compressedHistograms\"\nto \"distributions\" while we're at it.\n\n[1]: Due to the reference `value.rank_in_bps` in the handler\n`_serve_compressed_histograms`; this field does not exist and throws an\n`AttributeError`.\n\nPiperOrigin-RevId: 157787156\n\n---\nCommit 23cdf96b8 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRe-enable session_test.py\n\nA number of CL's have split up session_test.py to be a bit smaller. As a\nresult, this CL will re-enable the session_test to see if it remains flaky.\n\nPiperOrigin-RevId: 157786407\n\n---\nCommit d741d81c5 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpose tf.test.StubOutForTesting in the tf testing api\n\nAlso redirect TensorBoard usage to use that endpoint.\n\nThis is part of my ongoing effort to have TensorBoard only\ndepend on TensorFlow via its public api, so that it can\nbe split into a project with a fast external build.\n\nPiperOrigin-RevId: 157784552\n\n---\nCommit 40411cd5c authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor projector plugin to only use tf public methods.\n\nRemove all reference to the PluginAsset system, which is deprecated.\n\nPart of an ongoing effort to have TensorBoard only consume the public\nTensorFlow api.\n\nPiperOrigin-RevId: 157784016\n\n---\nCommit a65a70ea5 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix pip tests under contrib/text\n\nPiperOrigin-RevId: 157783952\n\n---\nCommit fb4bc806a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix flakiness in GpuMultiSessionMemoryTest.\n\nPiperOrigin-RevId: 157781368\n\n---\nCommit f7de292df authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate placeholder nodes' shapes in the GraphDef to reflect manually specified values for incomplete placeholder shapes. Previously, these overrides were only specified in the feed nodes, which improves estimates when using dynamic shapes but not when using static shapes. With this change, static shapes also benefit.\n\nPiperOrigin-RevId: 157780800\n\n---\nCommit eebd44123 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a frontend method for retrieving numeric alerts from the debugger plugin.\n\nThis route responds with a list of alerts (occurrences of bad values) in ascending timestamp order.\n\nPiperOrigin-RevId: 157780270\n\n---\nCommit 5bc685d7f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] If an op has a single \"large\" operand, we want to fuse this op into some of its consumers, even if we can't fuse into all of them.\n\nPiperOrigin-RevId: 157779106\n\n---\nCommit 2ee09b873 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Various improvements to ShapeTree.\nAdd support for holding non-copyable types, operator==, and a\nCopySubtreeFrom method for copying a subtree from one ShapeTree to\nanother.\n\nPiperOrigin-RevId: 157777636\n\n---\nCommit 4f3ae7699 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd beam_search kernels used by BeamSearchDecoder to tensorflow.contrib.\n\nPiperOrigin-RevId: 157775011\n\n---\nCommit 6b16c33b3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake audio-related logic use the audio plugin.\n\nPreviously, fetching audio and related data from TensorBoard used handlers within application.py. We now remove those handlers in favor of routes offered by the audio plugin. ML Dash is updated as well.\n\nPiperOrigin-RevId: 157774953\n\n---\nCommit 8032e1f75 authored by Geoffrey Irving<geoffreyi@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake function instantiation use std::vector<NodeDef> instead of GraphDef\n\nIt's about to turn into std::vector<NodeInfoPtr>; this change gets us partway there.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 157771141\n\n---\nCommit 2e44be35d authored by Vinu Rajashekhar<vinuraja@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds a protected DeleteResourceMgr(...) method in Device.\n\nPiperOrigin-RevId: 157770378\n\n---\nCommit cc346e690 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nStrip the :x suffix when generating control inputs from input names\n\nPiperOrigin-RevId: 157770257\n\n---\nCommit d6fe47af5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse tensorflow::StringPiece in literal_util.\nUse template for RepeatedField assignment.\n\nPiperOrigin-RevId: 157765477\n\n---\nCommit 7866fa01b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nThis change significantly reduces time and resources used to load large TensorFlow graphs.\n\nFor a real-world large graph (13k nodes, 20k edges), this change:\n\n* reduces all heap allocations by 19%\n* reduces retained (final) heap allocations by 2.2%\n* reduces CPU time by 11.2%\n\nIn most TF graphs, the set of unique values set to Node::assigned_device_name() is quite small.  This change adds an interning table to the Graph object, which contains all of the unique values used for Node::set_assigned_device_name(), as well as a look-up table.  This is the main source of the reduction in retained heap memory; nearly all nodes are assigned to just one or two unique devices.\n\nThis change removes the \"string assigned_device_name_\" field from the Node class, and replaces it with \"int assigned_device_name_index_\".  However, because you need both the index and the name table to get the actual value, the Node::assigned_device_name() accessor needs access to the parent Graph.  This requires adding a \"Graph* graph_\" field to the Node class.\n\nIn the future, if all users of this property are converted to use Graph::assigned_device_name(Node*), then the Node::graph_ field can be deleted, and the space reclaimed.  However, doing so is out of the scope of this CL, and even with this new pointer field, the Node class is smaller than it was before, so this is still a net win.\n\nThe placement algorithm in simple_placer.cc is one of the main accessors of the Node::assigned_device_name property.  This CL contains significant changes to simple_placer.cc, which directly take advantage of the fact that the property is an index into a name table, rather than treating it simply as a string.  Many temporary allocations are also removed, which is the main source of the reduction in total heap allocations.\n\nThis CL also contains a few changes that remove short-lived allocations in unrelated code, such as the changes in op.cc/h, costmodel.cc, etc.  It is extremely easy in C++ to accidentally allocate memory, especially when implicit conversions and copy constructors allocate memory.\n\nAll of the changes in this CL were motivated by empirical measurement, using CPU profiling and heap profiling.\n\nPiperOrigin-RevId: 157762909\n\n---\nCommit fdffafbc1 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd QueueDequeueUpTo to the list of dequeue ops\n\nPiperOrigin-RevId: 157760201\n\n---\nCommit 7ad0d0698 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd type error to start_queue_runners if given session is not a `tf.Session`. Due to semver, we suppress the error if a MonitoredSession is provided.\n\nPiperOrigin-RevId: 157748375\n\n---\nCommit 7106f9fac authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImplemented an initial version of virtual scheduler unit test.\n\nPiperOrigin-RevId: 157746305\n\n---\nCommit b020db0c6 authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nrevert public visibility\n\n---\nCommit 5b05728c2 authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nvisibility workaround 3\n\n---\nCommit 15a740ebb authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate and Move DNNLinearCombinedRegressor to estimator/canned.\n\nPiperOrigin-RevId: 157744087\n\n---\nCommit d29bbeca3 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix outdated code ref in TensorBoard README, add link to SO question.\n\nPiperOrigin-RevId: 157743374\n\n---\nCommit 9fc164225 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix index_table_from_file to allow vocabulary_file be a Tensor\n\nPiperOrigin-RevId: 157740677\n\n---\nCommit 0aa3e0194 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change\n\nPiperOrigin-RevId: 157740660\n\n---\nCommit 02ac85399 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduce new class Literal to replace protobuf Literal.\n\nThis renames the existing Literal message to LiteralProto and introduces a new\nC++ class named Literal to replace it.\n\nThe LiteralProto is only used at RPC boundaries, or when protobuf-specific\nfunctionality is required.  The Literal class offers a 'ToProto' function to\ngenerate a new LiteralProto message when necessary.\n\nCurrently, all the static functions in class LiteralUtil, just forward to their\ncounterparts in class Literal.  This will change in a future CL.\n\nClass Literal implements all the buffers as std::vectors.  The only exception\nis preds(), which given the std::vector<bool> representation, makes it unusable\nfor the semantics we require (it's not possible to get the address of the\nunderlying vector, for instance).\n\nThe CL adds a BoolVector class to work around that issue.\n\nIn future CLs, the std::vector representation may be changed to something more\nefficient, if needed.\n\nPiperOrigin-RevId: 157739125\n\n---\nCommit 207203253 authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nPython 3.6 support on windows. (#10356)\n\n* Python 3.6 support on windows.\n\n* Fix typo in README.md\n\n* Make environment configurable for windows gpu build.\n\n---\nCommit 2b75a9a6e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 157734029\n\n---\nCommit f60b6bdcb authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a warning to documentation of MonitoredSession.\n\nPiperOrigin-RevId: 157728225\n\n---\nCommit eb10a4c49 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPreallocate vector storage when the ultimate vector size is known in advance\n\nPiperOrigin-RevId: 157724431\n\n---\nCommit ce32228c4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd release notes for Intel MKL integration.\n\nPiperOrigin-RevId: 157722003\n\n---\nCommit a23255bc0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds missing group OP to benchmark\n\nPiperOrigin-RevId: 157716500\n\n---\nCommit d3e840a6c authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDisable writing of compressed checkpoints.\n\nSnappy compression (and decompression) was enabled after the\n1.1 release (in commit 63b2f999d3f22cfe915b89103faa1b0a1b1b7617).\nThis means that checkpoints produced by the 1.2.0 release candidates\nwill cause TensorFlow 1.1 (and prior) binaries to crash as they\nCHECK fail when trying to load snappy-compressed tables.\n\nTo ease transition, disable writing of compressed checkpoints in\n1.2.0 for now.\n\nReconsider this in the next release.\n\nPiperOrigin-RevId: 157675189\n\n---\nCommit 6db400bbc authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactoring Python op code generation.\n\nPiperOrigin-RevId: 157675126\n\n---\nCommit d9620cab8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd flag to determine whether to do L1 optimizations and inline functions. Default is to do them. In tf_optimizer don't inline or do l1 optimizations.\n\nPiperOrigin-RevId: 157673614\n\n---\nCommit 25bb504cc authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake a plugin that serves data for the audio dashboard.\n\nSubsequent changes will make TensorBoard use this audio plugin instead of the previous handlers for audio-related data.\n\nPiperOrigin-RevId: 157673132\n\n---\nCommit 24623653b authored by James Qin<jamesqin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix graph text format serialization\n\nPiperOrigin-RevId: 157669530\n\n---\nCommit 3aed1735c authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nvisibility workaround 2\n\n---\nCommit fea90f89d authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nvisibility workaround\n\n---\nCommit 732a6b1ae authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpgrade TypeScript to v2.3.4\n\nPiperOrigin-RevId: 157667511\n\n---\nCommit 95d90ab2e authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Fixes Split op (#10322)\n\n* [OpenCL] Fixes Split op\n\n  Split should alway go through SYCL device\n\n* [OpenCL] Removes half from registred types\n\n---\nCommit 963441400 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Extends softmax op to cover double (#10323)\n\n---\nCommit a702863e8 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Extends tile ops to int16 and int32 (#10328)\n\n* [OpenCL] Extends tile ops to int16 and int32\n\n* [OpenCL] Extends tile_ops to cover bool, uint8, int16, int64\n\n---\nCommit 75385814f authored by cxx<cxxgtxy@gmail.com>\nCommitted by cxx<cxxgtxy@gmail.com>:\nFix comments error in mnist_replica.py where only one ps is used with two works by default.\n\n---\nCommit 23364e2c6 authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nbuildifier fix\n\n---\nCommit e5088cb82 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix discrepancy between measured and analytical cost graph. Use tf_cuda_library for utils.\n\nPiperOrigin-RevId: 157660745\n\n---\nCommit 787381ca5 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSplit up session_test.py -> session_clusterspec_prop_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157658981\n\n---\nCommit b09932d74 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded PlaceholderWithDefault to the list of known placeholder types\nUse PartialTensorShape instead of TensorShapes to better handle partially known\nshapes\n\nPiperOrigin-RevId: 157657664\n\n---\nCommit 0462416f6 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd make_ndarray, tensor_proto, and MetaGraphDef to tf api.\n\nSince TensorProtos are part of the TensorFlow API, it makes sense\nto also include the methods that generate and parse them.\n\nSimilarly, we write out MetaGraphDef protos in the summary writer,\nso we should provide the proto as well.\n\nThis is part of an ongoing effort to have TensorBoard only consume\nTensorFlow methods through the public api.\n\nPiperOrigin-RevId: 157657564\n\n---\nCommit 458f94c12 authored by Wei Ho<weiho@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nOpen-source skip-gram ops\n\nPiperOrigin-RevId: 157655970\n\n---\nCommit faac0331c authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduce tensorboard_zip_file build rule\n\nThis rule can depend on web_library or tensorboard_html_binary. In\nboth cases it will create a .zip file containing all the transitive\nweb server paths. This can be used to deploy static assets to web\nservers.\n\nA small change was also made to Vulcanize to support path overriding.\n\nPiperOrigin-RevId: 157655047\n\n---\nCommit 7ed44f4c9 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSplit up session_test.py -> session_partial_run_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157651813\n\n---\nCommit 3c7ac46ae authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Teach Executable to do its own profiling (patch 4/4).\n\nThis CL removes the xla::Service stub for ExecuteOnStreamWrapper so the users call the xla::Executable version directly, and simplifies the function API to simply accept \"arguments\" as a parameter (with a templated type) rather than requiring the user to capture it into a lambda around the relevant Executable::ExecuteOnStream method.\n\nPiperOrigin-RevId: 157651740\n\n---\nCommit 626f95ab9 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Don't enforce that all nodes in an encapsulated subgraph are on the same device.\nUse the assigned device rather than the user-requested device when converting a Graph to a FunctionDef.\n\nPiperOrigin-RevId: 157648977\n\n---\nCommit 414470329 authored by Jacques Pienaar<jpienaar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Guard stream pool with mutex.\n\nA data race can occur while populating the map.\n\nPiperOrigin-RevId: 157647183\n\n---\nCommit ccdb30763 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdditional colocation options and bugfixes for TensorArray\n\n* colocate_with is now set properly when a TensorArray is passed through a\n  while_loop\n* added a new argument, \"colocate_with_first_write\" (default: True; this is\n  the current behavior).  If False, the TensorArray is simply placed on the\n  device from the context it's constructed in, and no colocation constraints\n  are added.\n\nPiperOrigin-RevId: 157643133\n\n---\nCommit 03fc7022b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157642677\n\n---\nCommit 41b87d6ce authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a new attribute narrow_range to FakeQuant* operations.  It quantizes into range [1; 255] instead of [0; 255].\n\nPiperOrigin-RevId: 157641054\n\n---\nCommit c048e2938 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds support to non-placeholder inputs in _graph_to_function_def.\n\nSpecifically, supports input ops with more than one output tensor.\n\nPiperOrigin-RevId: 157640908\n\n---\nCommit d310de4fa authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSplit up session_test.py -> session_list_devices_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157640788\n\n---\nCommit 8e868cf6a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused arguments to call_cpp_shape_fn.\n\nPiperOrigin-RevId: 157640125\n\n---\nCommit 9ddbf31fe authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse unnamed namespace to effect internal linkage, replace string constructors with array-deducing helper function\n\nPiperOrigin-RevId: 157636308\n\n---\nCommit 88ffe6276 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIncrease cholesky_op_test to medium, bump shard_count 1 more.\n\nPiperOrigin-RevId: 157635774\n\n---\nCommit bef563dc8 authored by Benjamin Kramer<kramerb@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Don't add constraints for computations we're not currently looking at.\n\nTuplePointsToAnalysis is computed globally per module, so we add all\nunconstrained buffers in that module, even if it's outside of the computation\nwe're currently running on. Then we proceed to propagate default layouts to all\nthose buffers and then throw the constraints away because they don't affect any\ninstruction in the current computation.\n\nPiperOrigin-RevId: 157635564\n\n---\nCommit a980aead8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse test_adjusted_name when making the mangled_test_name in\nrun_and_gather_logs_lib.py, to avoid duplicate file names when the same test is\nrun on multiple GPUs.\n\nPiperOrigin-RevId: 157630193\n\n---\nCommit 0a84cfd58 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157629497\n\n---\nCommit 6882effb8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake single-parameter constructors explicit\n\nPiperOrigin-RevId: 157628970\n\n---\nCommit 0b8070253 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport negative axis for Split op\n\nPiperOrigin-RevId: 157628162\n\n---\nCommit 289e7bf5b authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nFixes and improvements to cmake windows build. (#10354)\n\n* Disable linalg ops tests on windows.\n\n* Do not print the full source code path for logs on windows.\n\n---\nCommit bc236cfc3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPasses classification head to LinearClassifier.\n\nPiperOrigin-RevId: 157624020\n\n---\nCommit cebd7e246 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Shanqing Cai<cais@google.com>:\n[OpenCL] Cleans debug ops (#10334)\n\n* [OpenCL] Cleans debug ops\n\n* Acts on feedback from #10334#discussion_r119452513\n\n* Acts on #10334#discussion_r119459463\n\n---\nCommit fd6c3c4f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes flaky test in dnn_linear_combined_test.\n\nPiperOrigin-RevId: 157622951\n\n---\nCommit c9cc388dc authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid CHECKs in BundleReader, propagate errors instead.\n\nMotivation:\nWe'd like to evolve the checkpoint format over time (e.g., enable\ndifferent types of compression). Without this change, a TensorFlow\nversion that encounters a format that it doesn't understand would CHECK fail\nwith an unhelpful error message.\n\nWith this, it propagates a clearer error message up, giving the user some\nhints about what could be wrong.\n\nI don't have a unittest for this - I thought about writing a bundle and\nthen strategically corrupting the bytes on disk before reading it back,\nbut that seems a bit much. The intention of this change is to enable\ngraceful reporting of forward compatibility breakages. Ideas for an\nappropriate unittest are appreciated.\n\nPiperOrigin-RevId: 157620358\n\n---\nCommit ee05b8b69 authored by Wei Ho<weiho@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix to remove TF op usage outside of the initializer fn (due to deferred execution of initializer fn, this prevent issues with graph mismatch).\n\nPiperOrigin-RevId: 157620177\n\n---\nCommit e8d17ea8c authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMaterialize shapes that are known at graph construction time into constants\nthat can be folded\n\nPiperOrigin-RevId: 157619380\n\n---\nCommit dc0427d48 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDirectly depend on the used libraries\n\nDo not rely on transitive dependencies.\n\nPiperOrigin-RevId: 157618184\n\n---\nCommit 964d1a509 authored by Yuan Yu<yuanbyu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix a bug that an erroneous control edge can be introduced when loops are nested in control dependency context.\n\nPiperOrigin-RevId: 157616919\n\n---\nCommit 2de94bbb8 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add an option to set the \"generate HLO graph\" regex without a flag.\n\nPipes the option through xla.proto ExecutionOptions, to HloModuleConfig, which\ncan then be accessed throughout the compiler.\n\nPiperOrigin-RevId: 157615458\n\n---\nCommit d3c0482e6 authored by My name is<raviqqe@gmail.com>\nCommitted by gunan<gunan@google.com>:\nFix a typo in export_output.py (#9975)\n\n---\nCommit 0c75d9f52 authored by ddurham2<ddurham@davyandbeth.com>\nCommitted by gunan<gunan@google.com>:\nAdding lost documentation to tf.abs from the old tf.complex_abs when it learned how to work on complex data. (#9954)\n\n---\nCommit 84661fa73 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPropagate control dependencies during constant folding\n\nPiperOrigin-RevId: 157610040\n\n---\nCommit a3520340e authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nImprove windows bazel python test suite. (#10305)\n\n* Improve windows bazel python test suite.\n\n- Create new tags, no_windows and no_windows_gpu\n- Instead of a separate maintained list, use bazel tags to exclude tests.\n- Tag all the python tests that are known to have issues in windows.\n\n* Also blacklist neon_depthwise_conv_ops_test in windows.\n\n* Only build tests in CPU windows tests.\n\n* Only build tests in GPU windows tests.\n\n* Also disable session_test on windows.\n\n* Only run py tests on windows, and only build tests that are not\ndisabled.\n\n---\nCommit a6f284ca4 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds integration tests for LinearRegressor.\n\nPiperOrigin-RevId: 157604107\n\n---\nCommit d21bf7d75 authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBackport changes from Github master.\n\nPiperOrigin-RevId: 157603238\n\n---\nCommit 43bfc138c authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix OSS compilation error in tfprof_main.cc\n\nPiperOrigin-RevId: 157602449\n\n---\nCommit 904a3d075 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixing issue with cuda compilation related to missing include (exception is only thrown when running with sandboxing on)\n\nPiperOrigin-RevId: 157602401\n\n---\nCommit f59203c98 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nShard cholesky_op_test.\n\nPiperOrigin-RevId: 157601172\n\n---\nCommit 3fdbb5579 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nMerging rc1 back into master.\n\n---\nCommit be5d98a8b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds integration tests for DNNClassifier.\n\nPiperOrigin-RevId: 157592010\n\n---\nCommit a05de6cd2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange reporting feature importances in RandomForestEstimator to run at the end of training, instead of part of the inference graph.\n\nPiperOrigin-RevId: 157591575\n\n---\nCommit e96f1142f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unnecessary casts\n\nPiperOrigin-RevId: 157591439\n\n---\nCommit 5f8571a6b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix missing namespace comments\n\nPiperOrigin-RevId: 157591364\n\n---\nCommit eeb0b4067 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 157573997\n\n---\nCommit 7f9674217 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157573723\n\n---\nCommit 473a590c9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllow complex valued input for Cholesky decomposition.\n\nPiperOrigin-RevId: 157572536\n\n---\nCommit 2d1860859 authored by Blake Hechtman<blakehechtman@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix test name in array_elementwise_ops_test.\n\nPiperOrigin-RevId: 157552402\n\n---\nCommit a7fff05e0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntfprof multi-step profiling.\n\nThis allows users to fill in RunMetadata across different steps.\n1. It is useful for RL model which runs a subset of graph each step.\n2. It also gets averages of multi-step stats.\n\nPiperOrigin-RevId: 157552388\n\n---\nCommit fe589d9e7 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Implementation improvements (#9117)\n\n* OpenCL Improvements\n\n* Registers Scatter and ScatterNd Ops for SYCL\n\n* Registers Stack op for SYCL\n\n* Fixes No sycl buffer found error for debug ops\n\n* Registers MatMul and Transpose Ops to SYCL device for double\n\n* Extends analyzer_cli_test.py test to cover SYCL\n\n* Fixes Transpose Op for double when on SYCL\n\n* Bumps Eigen version to fix double precision issue on SYCL\n\n* Extends SessionDebugTestBase to cover SYCL\n\n* Register SYCL implementations for random ops\n\n* Avoid functions that might not be defined on SYCL device (#51)\n\n* Avoid functions that might not be defined on SYCL device\n\n* Simplify by using Eigen math functions\n\n* OpenCL improvements\n\n - Bumps Eigen Version\n - Refactors Ops registration\n - Introduces workaround for Const Op related to the difference between\n   CUDA which uses pointers and OpenCL that uses buffers/accessors\n - Extends memory types to cover DEVICE_SYCL as well\n - Introduces  GetSYCLDevice() method that returns list of supported devices\n   with GPU device having the highest priority ( doesn't include blacklisted devices )\n - ::internal::Transpose -> tensorflow::internal::Transpose in order to\n   avoid compilation reported error\n - re-introduces fix for bugged string replacement causing a lot of compilation\n   warnings -c -> --include\n - Adds sycl_runtime to bazels ARRAY_DEPS\n - Replicates TF_CALL_GPU_PROXY_TYPES for SYCL\n\n* [OpenCL] Fixes an issue caused by switch to aligned allocator for sycl buffer (#53)\n\n* [Build] Use gcc/g++ as a host compiler to avoid #8394 (#54)\n\n* [OpenCL] Fixes Scatter Op\n\n* Fix testSimple and testConst in stack_op_test (#3)\n\n* Fix testSimple and testConst in stack_op_test\n\n* Create a specialisation of DoParallelConcatUpdate for SyclDevice and\nregister it\n\n* Guard all code in TENSORFLOW_USE_SYCL\n\n* Do not use sycl device for int32\n\n* Registration of the Sycl version is now looking like the one for the GPU\n\n* Remove added empty line\n\n* Register batch normalization kernels for OpenCL (#61)\n\n* [OpenCL] RandomGamma has no GPU friendly implementation (#57)\n\n* [OpenCL] Compatibility fixes for TensorFlow 1.1.0-rc1\n\n* [OpenCL] Implements BatchMatmul Op for SYCL\n\n* Lowercase the device name when GPU or SYCL returned\n\n* [OpenCL] kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point representation on the device\n\n* [Eigen] Version bump\n\n* GPU device name string manipulation is not needed anymore\n\n* [OpenCL] Adds SYCL to device backwards compatibility\n\n* [OpenCL] Extends core_rnn_test.py to run for SYCL device\n\n* [OpenCL] Minor optimizations for build script\n\n* [OpenCL] Enables skip folder list in build script\n\n* [OpenCL] Fixes ApplyAdamOp for Sycl device\n\n* [OpenCL] SYCL device improvements\n\n* [OpenCL] Fixes debug_ops's SEGFAULT for SYCL device\n\n* [Build] Adds hexagon to skipped folders list\n\n* [OpenCL] Removes EnterLameDuckMode from SYCL device and allocator\n\n* [OpenCL] Registers Unique Op for SYCL device\n\n* [OpenCL][Temporary] Disables tests for SYCL target due to features not being implemented yet\n\n  Tests affected:\n    - tensorflow/contrib/memory_stats/python/kernel_tests/memory_stats_ops_test.py\n    - tensorflow/contrib/rnn/python/kernel_tests/core_rnn_test.py\n    - tensorflow/python/kernel_tests/conv_ops_test.py\n    - tensorflow/python/kernel_tests/depthwise_conv_op_test.py\n    - tensorflow/python/kernel_tests/pooling_ops_3d_test.py\n    - tensorflow/python/kernel_tests/pooling_ops_test.py\n    - tensorflow/python/kernel_tests/scatter_nd_ops_test.py\n    - tensorflow/python/training/adam_test.py\n    - tensorflow/python/training/localhost_cluster_performance_test.py\n    - tensorflow/python/training/training_ops_test.py\n\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\n\n  Tests affected:\n    - tensorflow/python/debug/cli/analyzer_cli_test.py\n    - tensorflow/python/debug/lib/session_debug_testlib.py\n    - tensorflow/python/debug/lib/stepper_test.py\n    - tensorflow/python/kernel_tests/unstack_op_test.py\n    - tensorflow/python/ops/image_ops_test.py\n\n* [OpenCL] Take options.config.device_count() into consideration\n\n* [OpenCL] Fixes compilation warning\n\n* [OpenCL] device:SYCL:0 -> sycl:0\n\n* [OpenCL] Removes unwanted flags in building script\n\nRemoves flags given to computecpp that enable SIMD instructions\nRemoves duplicate flags\n\n* bool -> const bool\n\n* [OpenCL] sycl in test_util.gpu_device_name() -> is_sycl_enabled()\n\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\n\n  Test affected:\n    - tensorflow/contrib/stateless/python/kernel_tests/stateless_random_ops_test.py\n\n* Imports test_util from tensorflow.python.framework\n\n* [OpenCL] Fixes formatting in Python code\n\n* [OpenCL] Extends session_test.py to cover SYCL device\n\n* [OpenCL] Cleans singleton class\n\n* [OpenCL] Keeping CUDA happy\n\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\n\n  Test affected:\n   - tensorflow/contrib/rnn/python/kernel_tests/core_rnn_cell_test.py\n   - tensorflow/contrib/seq2seq/python/kernel_tests/beam_search_ops_test.py\n\n* Added support for building with SYCL on ARM.\n\n* Acts on the review feedback from:\n - #9117#discussion_r113608975\n - #9117#discussion_r113609173\n\n* [OpenCL] Fixes scatter_nd_op_test\n\n* Fixes auto-merge mistake\n\n* [OpenCL] struct SyclDevice -> class SyclDevice\n\n* Revert \"[OpenCL] struct SyclDevice -> class SyclDevice\"\n\nThis reverts commit addd43348c374a5379f67bb1e5ad084715722fc2.\n\n* [OpenCL] Reverting refactoring commit.\n\n  As requested in the review #9117#issuecomment-298454466\n  This change set will be re-introduced in smaller chunks.\n\n* Revert \"[OpenCL] device:SYCL:0 -> sycl:0\"\n\nThis reverts commit cf16e60340b62d16c3764d71b716fe03d35f87a9.\n\n* Revert \"[OpenCL] Adds SYCL to device backwards compatibility\"\n\nThis reverts commit b8401b5164199b7a169be1c1d8dea5001195c390.\n\n* Acts on the feedback from #9117#discussion_r115036905\n\n* control_flow_ops_py_test.py expects device name to be lower cased\n\n* Acts on the feedback from #9117#discussion_r115037222\n\n* Removes debug print\n\n* Removes not needed partial specialisation\n\n* [OpenCL] Registers ScatterNdFunctor for SYCL device\n\n* [OpenCL] Make it compile\n\n* [OpenCL] Follow gpu_device changes\n\n* [OpenCL] Adds cxx_builtin_include_directory for python lib\n\n  Fixes bazels missing undeclared inclusions that appeared after\n  merge with TensorFlow upstream\n\n* [OpenCL] Fixes Constant Op\n\n* [OpenCL] gXX-4.8 -> gXX\n\n* [OpenCL] Removes -D_GLIBCXX_USE_CXX11_ABI=0 as it breaks default compiler setup for Ubuntu 16.04\n\n* Revert \"[OpenCL] kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point representation on the device\"\n\nThis reverts commit 06c50c0a485f40c30a436f02c3fa7794e370c49d.\n\n* [OpenCL] CPU allocator is a singleton we should not delete it\n\n---\nCommit 7aac2395c authored by Blake Hechtman<blakehechtman@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMerge a copies of copies.\n\nPiperOrigin-RevId: 157549434\n\n---\nCommit 37d9d5f0e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd some routines for managing summaries to slim.\n\nPiperOrigin-RevId: 157541902\n\n---\nCommit d58cd2962 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix weblas license mirror URL\n\nPiperOrigin-RevId: 157537115\n\n---\nCommit 5c13ee13b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake images-related logic use the images plugin.\n\nPreviously, fetching images and related data from TensorBoard used handlers within application.py. We now remove those handlers in favor of routes offered by the images plugin. ML Dash is updated as well.\n\nPiperOrigin-RevId: 157536471\n\n---\nCommit 60394a3d1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReduce size of the no-winograd tests, but still large enough that\nShouldIncludeWinogradNonfusedAlgo returns true.\n\nPiperOrigin-RevId: 157535386\n\n---\nCommit 9501c4104 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReplace protobuf CopyFrom with assignment\n\nPiperOrigin-RevId: 157534272\n\n---\nCommit 96698f7fd authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf contrib seq2seq] Improve BeamSearchDecoder's ability to handle unknown shapes.\n\nUpdated unit tests to contain inputs of unknown shape (at graph build time).\nFound an issue in the gather helper that stops it from properly propagating\nthe batch size of the output shape.  This caused problems with tf.while_loop.\nFixed.\n\nPiperOrigin-RevId: 157533937\n\n---\nCommit 5c73d0102 authored by Neal Wu<wun@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBatch norm docs fix applied to _fused_batch_norm as well\n\nPiperOrigin-RevId: 157530527\n\n---\nCommit abd4aa49a authored by Jonathan Hseu<jhseu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix docs for tf.abs() and tf.pow().\n\nPiperOrigin-RevId: 157528475\n\n---\nCommit dd5ad6917 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDeclarations of operators to support batch norm in xla\n\nPiperOrigin-RevId: 157527596\n\n---\nCommit bbeaa1307 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix the expand_dim for label and weight for classifier heads.\n\nPiperOrigin-RevId: 157524909\n\n---\nCommit 346021ab4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCleanup: Use C++ casts, remove redundant casts, use CHECK_OK\n\nPiperOrigin-RevId: 157522142\n\n---\nCommit e405b0f6b authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactoring of layer name autogeneration, to remove a graph serialization warning.\n\nPiperOrigin-RevId: 157520123\n\n---\nCommit 5784e1e35 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd HasOutputProperties to check for pruned ops; Return\ndevice name instead of casting it to a short name (GPU:0/CPU:0); VLOG(2) when printing op device placement since it is a lot of output.\n\nPiperOrigin-RevId: 157519077\n\n---\nCommit 2994444bf authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIssue a more user-friendly error message if a variable's initializer is from inside a control-flow scope, such as tf.cond() or tf.while_loop().\n\nFixes #8604.\n\nPiperOrigin-RevId: 157516279\n\n---\nCommit da2daf068 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused using declarations\n\nPiperOrigin-RevId: 157513772\n\n---\nCommit 8b2e8b566 authored by Derek Murray<derek.murray@gmail.com>\nCommitted by gunan<gunan@google.com>:\nExclude Python test files from CMake PIP package. (#10302)\n\n* Exclude *_test.py files from the CMake-built PIP package.\n\n* Add stray _test.py file to the PIP package.\n\n* Nit. Convert tabs to spaces in tf_python.cmake\n\n---\nCommit 2249a4ea8 authored by Dan Ringwalt<ringwalt@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix control reaching the end of ProjectiveGenerator.\n\nPiperOrigin-RevId: 157510013\n\n---\nCommit 040e2e20f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unneeded check for has properties in grappler.\n\nPiperOrigin-RevId: 157507665\n\n---\nCommit 684006955 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nWindows: Remove session_test from bazel_test_lib.sh (#10274)\n\nIt was disabled in 49b17146d2e4f04192d16ed67574142de167f3a1\n---\nCommit 890a0a407 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by Gunhan Gulsoy<gunan@google.com>:\nUpgrade TF ci build and docker files to use bazel 0.5.0\n\n---\nCommit 46db634e5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nOnly run the no-winograd tests once each.\nOnly run the no-winograd tests on GPU; this also fixes\ntimeouts in asan and msan.\n\nPiperOrigin-RevId: 157505317\n\n---\nCommit a6cd4e735 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove all TB build references that circumvent TF's public API.\n\nThis doesn't actually remove all the code references, lots of code references continue to work despite the BUILD references being removed. I think this is because depending on the public api transitively makes all of TensorFlow's guts available too.\n\nPiperOrigin-RevId: 157502987\n\n---\nCommit dcc3cdce8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove redundant get() calls and string conversions\n\nPiperOrigin-RevId: 157497932\n\n---\nCommit af2b9d875 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix the trace inputs functionality of the graph explorer.\n\nAfter migrating to d3 v4, the graph can no longer directly index into d3.Selections to obtain elements. Instead, we must use the nodes method of d3.Selection to generate an array of selected elements.\n\nPiperOrigin-RevId: 157493509\n\n---\nCommit 5cf484584 authored by Jacques Pienaar<jpienaar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Small test that performs A*B+A and A*B+B.\n\nPiperOrigin-RevId: 157492992\n\n---\nCommit b2355913b authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nremove some invalid entries (#10294)\n\nI noticed that some entries don't exist (anymore).\nThis seems to be some kind of a consistency issue.\n\nMore specifically:\n`tensorflow/contrib/ios_examples/camera/data`\n`tensorflow/contrib/session_bundle/testdata/saved_model_half_plus_two`\n`tensorflow/contrib/session_bundle/testdata/saved_model_half_plus_two/variables`\n\nThis is the continuation of PR #10264\n---\nCommit 367ec84f8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd SampleEmbeddingHelper to do sampling at inference time\n\nPiperOrigin-RevId: 157487623\n\n---\nCommit a3ba225d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd BatchMatMul execution cost prediction\n\nPiperOrigin-RevId: 157487507\n\n---\nCommit 34a29fc3b authored by Eric Liu<ioeric@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] preserve metadata when replacing HLO instructions.\n\nThe motivation is to add metadata for HLO instructions that are created to replace existing HLO instructions during optimizations. The assumption is that the old instruction and the new instruction would perform the same function, and that they would be correlated to the same TF op. This might not always be correct since HLO optimizations can cross TF op boundaries. But still this seems to be better than nothing.\n\nNote that this still doesn't fully resolve missing OpMetadata after HLO optimizations; new instructions might be added without using ReplaceInstruction.\n\nPiperOrigin-RevId: 157484394\n\n---\nCommit 092a7b6e6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDisable keras lstm test in tsan.\n\nPiperOrigin-RevId: 157484268\n\n---\nCommit 7280dafca authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse \"empty\" member function to test for emptiness\n\nPiperOrigin-RevId: 157483181\n\n---\nCommit 6c3b15915 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpands integration tests in dnn_test.\n\nPiperOrigin-RevId: 157476608\n\n---\nCommit 727193b1f authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nadd missing import for `signal` package (#10264)\n\n* add missing import for `signal` package\n\n* add missing dependency for `signal` package\n\n* Update tf_python.cmake\n\n---\nCommit 21461213d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused BUILD dependencies\n\nPiperOrigin-RevId: 157473460\n\n---\nCommit 4788ca2be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix handling of Infinity/NaN in line chart domain\n\nTest Plan:\n  - Use the script listed below to generate data that has enough\n    infinities for these values to not be treated as outliers.\n  - Load the data into TensorBoard (`--logdir /tmp/infbug`) and look at\n    the scalars plot; also look at the console.\n  - Before this change, the chart is completely blank, and there is a\n    console warning: \"QuantitativeScales cannot take NaN or Infinity as\n    a domain value. Ignoring.\"\n  - After this change, there is no console output, and the chart appears\n    as intended: a reasonable domain is shown, and the infinities just\n    shoot off the chart.\n\nGenerating script:\n```py\nimport tensorflow as tf\n\nLOGDIR = '/tmp/infbug'\nSTEPS = 134\n\ndef main():\n  x = tf.Variable(3.1415)\n  y = x.assign_add(x)\n  tf.summary.scalar('y', y)\n  summ = tf.summary.merge_all()\n\n  sess = tf.Session()\n  writer = tf.summary.FileWriter(LOGDIR)\n  writer.add_graph(sess.graph)\n  sess.run(tf.global_variables_initializer())\n  for step in xrange(STEPS):\n    writer.add_summary(sess.run(summ), step)\n  writer.close()\n\nif __name__ == '__main__':\n  main()\n```\n\nPiperOrigin-RevId: 157472340\n\n---\nCommit 49476a62c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused namespace aliases\n\nPiperOrigin-RevId: 157468609\n\n---\nCommit d83074847 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse \"nullptr\" for null pointer values\n\nPiperOrigin-RevId: 157468186\n\n---\nCommit b73fea6e2 authored by Tim Harley<tharley@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor `tf.Operation.traceback` implementation in to methods of tf.Graph.\n\nAdds an `_extract_frame_info` method to allow derived classes to extend the\ninformation available in each op traceback, if desired. The default result of\n`tf.Operation.traceback` is unchanged.\n\nAlso fixes a poorly scoped `pylint disable=line-too-long`, so adds the necessary\nenable/disable blocks to silence pylint for the offending docstrings.\n\nPiperOrigin-RevId: 157466174\n\n---\nCommit f7ca8db7d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Improve shape inference error messages for DynamicSlice/DynamicUpdateSlice.\n\nPiperOrigin-RevId: 157461335\n\n---\nCommit 8c2a079ec authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdding a slot / accumulator warmstart initializer that overrides the provided partitioner at call time with one passed at construction time.  This is intended to be used for slot Variables (such as accumulators) associated with Optimizers, since these Variables are created in a fashion that relies on replicating the exact shape of the associated primary variables (see slot_creator).\n\nPiperOrigin-RevId: 157453498\n\n---\nCommit 73d10599f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDefault CUDNN_HOME to CUDA_TOOLKIT_TARGET_DIR. The cuDNN distro is most naturally installed in the same directory as the CUDA SDK, so try to find it there if the user doesn't specify any other directory.\n\nPiperOrigin-RevId: 157436253\n\n---\nCommit eb7cf9331 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 157429266\n\n---\nCommit 346dcc0a4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157429078\n\n---\nCommit 3d5ede131 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate documentation for sparse_matmul op to reflect gradient calculation.\n\nPiperOrigin-RevId: 157428135\n\n---\nCommit 822d64f0c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix embedding_lookup() bug where normalization did not work with ids of rank != 1.\n\nPiperOrigin-RevId: 157422220\n\n---\nCommit 8cad6b824 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImprove the error message for live set memory check.\n\nPiperOrigin-RevId: 157415647\n\n---\nCommit 34dcd5b49 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf contrib seq2seq] Bugfixes to BeamSearchDecoder\n\nImplementation by Cinjon Resnick.  He can't push this since he's traveling.\nI just copied the fix and added some small syntax tweaks to make the unit\ntests pass.  More comprehensive unit tests will come in the near future.\n\nFixes at least part of #9904.\n\nBeamSearchDecoder:\n1. Fix the bug where we don't pass the next cell state through.\n2. Gather the cell state (and attention if that's a part of the model\n   as an AttentionWrapper on the cell) according to the next_beam_ids.\nPiperOrigin-RevId: 157415564\n\n---\nCommit f7ae1461c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix oversampling in the GPU version of multinomial due to an error in generating\ngumbel noise.  -log(-log(U)) gives infinity if U draws a hard 0.  Adds a tiny\noffset to U (2e-30) to avoid log(U) = -inf.\n\nThe CPU sampling algorithm depends on the order of the logits which is\nundesirable and can also oversample the first logit if it is smaller than the\nsmallest random float larger than 0 (~1e-7).  Switching to double precision\ninternally mitigates these problems, although it doesn't fix them.  Slowdown\nis ~35% in the worst case.\n\nAlso adds various tests that we would like the sampling to pass.\n\nCPU Benchmark before:\n\n32 10000 1 0.060 0.069 0.87\n32 10000 4 0.229 0.074 3.10\n32 10000 32 2.180 0.059 37.09\n32 100000 1 0.430 0.480 0.90\n32 100000 4 2.322 0.449 5.17\n32 100000 32 31.508 0.471 66.96\n128 10000 1 0.168 0.235 0.71\n128 10000 4 0.965 0.246 3.93\n128 10000 32 7.989 0.225 35.51\n128 100000 1 1.681 1.539 1.09\n128 100000 4 9.012 1.57 35.73\n128 100000 32 126.222 1.626 77.60\n\nCPU Benchmark after:\n\n32 10000 1 0.054 0.112 0.48\n32 10000 4 0.206 0.093 2.21\n32 10000 32 1.826 0.091 20.12\n32 100000 1 0.292 0.636 0.46\n32 100000 4 2.086 0.606 3.44\n32 100000 32 28.496 0.633 45.03\n128 10000 1 0.125 0.266 0.47\n128 10000 4 0.759 0.258 2.94\n128 10000 32 7.362 0.254 29.03\n128 100000 1 1.550 2.18 10.71\n128 100000 4 8.712 2.22 23.92\n128 100000 32 122.585 2.213 55.39\n\nPiperOrigin-RevId: 157414849\n\n---\nCommit 62cf561f1 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd numpy_input_fn integration for LinearRegressor and fix the expand_dim for label and weight.\n\nPiperOrigin-RevId: 157405237\n\n---\nCommit 40c7e0dd7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 157402364\n\n---\nCommit 2726c00ce authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157402063\n\n---\nCommit e9d2fba8f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix comment describing ignore_longer_outputs_than_inputs.\n\nPiperOrigin-RevId: 157400110\n\n---\nCommit 5f097217f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAn initial step of eliminating all implicit broadcast at the HLO level.\nGuard the shape inference for binary ops behind a flag.\n\nPiperOrigin-RevId: 157373647\n\n---\nCommit e78e5ec8a authored by Yangzihao Wang<yangzihao@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet winograd nofused flag to be true by default.\n\nDisable winograd nonfused conv for certain input params to avoid a known bug in cuDNNv5 and cuDNNv6.\n\nPiperOrigin-RevId: 157352847\n\n---\nCommit 3f9b69a50 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast variant for forward convolution when the input images are smaller than 16x16.\n\nPiperOrigin-RevId: 157347823\n\n---\nCommit 848123e61 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix incorrect condition to instantiate depthwise_ops introduced in commit 15d9f00fa. The change should have excluded depthwise_conv2d for doubles on windows debug builds, but it excluded it for all windows and all debug builds.\n\nPiperOrigin-RevId: 157345929\n\n---\nCommit 060d67b34 authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by Taehoon Lee<taehoonlee@snu.ac.kr>:\nFix typos\n\n---\nCommit 409419bcc authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nadd closing code quotes\n\nPiperOrigin-RevId: 157339360\n\n---\nCommit d20d0a623 authored by Jonathan Hseu<jhseu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix the contrib estimator_test by updating the global step in all the appropriate spots.\n\nPiperOrigin-RevId: 157328239\n\n---\nCommit d1144d3a9 authored by Juang, Yi-Lin<b02901026@ntu.edu.tw>\nCommitted by Juang, Yi-Lin<b02901026@ntu.edu.tw>:\nFix typos\n\n---\nCommit fa8bb43b1 authored by lanhin<lanhin1@gmail.com>\nCommitted by lanhin<lanhin1@gmail.com>:\nFixed a comment typo in GraphView:InitializeNode(), executor.cc.\n\n---\nCommit 9f13ae93f authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nJava: Update Maven release to 1.2.0-rc1\n\nPiperOrigin-RevId: 157294719\n\n---\nCommit c8256769c authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by Gunhan Gulsoy<gunan@google.com>:\nAddress comments and sanity check failures.\n\n---\nCommit 344225a60 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157292254\n\n---\nCommit eb2f6d041 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nVLOG(2) instead of VLOG(1) for detailed op printouts.\n\nPiperOrigin-RevId: 157291238\n\n---\nCommit b4466279a authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntfdbg: add runtime shape and dtype info to DebugNumericSummary\n\nPiperOrigin-RevId: 157291215\n\n---\nCommit 4fb2425f8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd GraphOptimizer to Grappler item builder to do L1 optimizations and\ninlining.\n\nOp Counts Comparison (BNMT)\nCounts: Profile vs Grappler\nOp: Add, 968 vs 965\nOp: AddN, 2228 vs 2228\nOp: ApplyGradientDescent, 84 vs 84\nOp: BatchMatMul, 998 vs 998\nOp: Identity, 142 vs 105\nOp: MatMul, 63 vs 63\nOp: Mul, 10318 vs 10306\nOp: OneHot, 1 vs 1\nOp: Reshape, 8421 vs 8422\nOp: Select, 488 vs 488\nOp: Shape, 8132 vs 8131\nOp: Sigmoid, 942 vs 942\nOp: Softmax, 19 vs 19\nOp: StridedSlice, 58 vs 74\nOp: Sub, 1398 vs 1394\nOp: Tanh, 333 vs 333\nOp: Tile, 21 vs 21\nOp: Transpose, 39 vs 39\nPiperOrigin-RevId: 157288420\n\n---\nCommit 8918fa9ef authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 157272843\n\nPiperOrigin-RevId: 158534336\n", "change_type": "removed", "type": ""}, {"name": "vulcanize", "commit_message": "Merge changes from github.\nEND_PUBLIC\n\n---\nCommit f0e185d1f authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBetter handle nodes with a variable number of outputs\n\nPiperOrigin-RevId: 158435028\n\n---\nCommit bc3e20807 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused BUILD dependencies\n\nPiperOrigin-RevId: 158431059\n\n---\nCommit a0c80e4d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDelete unnecessary (mistakenly duplicated) logging message.\n\nPiperOrigin-RevId: 158428506\n\n---\nCommit b6ad1d747 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds DNN-only tests for DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158423119\n\n---\nCommit ddbb58034 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unnecessary pylint disable\n\nPiperOrigin-RevId: 158416140\n\n---\nCommit fcaa724e2 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans pack and unpack ops (#10336)\n\n* [OpenCL] Cleans pack op\n\n* [OpenCL] Cleans unpack op\n\n---\nCommit 2f53cacb2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix a test failure of quantization_utils_test on ASAN\n\nPiperOrigin-RevId: 158414538\n\n---\nCommit 50b2f951c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158413455\n\n---\nCommit 1e90b78e9 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd CacheDataset ops.\n\nSome input pipelines may pull down data from remote webservers or perform\nexpensive processing. In order to avoid extraneous work, we now support\ncaching the dataset (e.g. on disk).\n\nPiperOrigin-RevId: 158411901\n\n---\nCommit e16cd2ede authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by gunan<gunan@google.com>:\nFix typos (#10533)\n\n---\nCommit 50d80ddf9 authored by Jonathan Hseu<jhseu@google.com>\nCommitted by Jonathan Hseu<jhseu@google.com>:\nFix fft_ops_test.py for CPU\n\n---\nCommit d35cbbb44 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd weight-column support to the heads.\n\nPiperOrigin-RevId: 158409180\n\n---\nCommit 7fb52cd54 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon't crash when displaying XLA metrics if they happen to be negative.\n\nPiperOrigin-RevId: 158407664\n\n---\nCommit 12a7a752a authored by Jianfei Wang<me@thinxer.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nAdd a tip for tf.train.LoggingTensorHook (#10237)\n\n`INFO` logs are not printed by default unless in IPython. Add a friendly tip for newcomers.\n---\nCommit 216dcbf1e authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reduction ops (#10340)\n\n* [OpenCL] Cleans reduction_ops_max.cc\n\n* [OpenCL] Cleans reduction_ops_mean.cc\n\n* [OpenCL] Cleans reduction_ops_min.cc\n\n* [OpenCL] Cleans reduction_ops_prod.cc\n\n* [OpenCL] Cleans reduction_ops_sum.cc\n\n---\nCommit 2b351062a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nImprove docs for selective registration headers (#10351)\n\n* Improve docs for selective registration headers\n\nprogressing #10299\n\n* Update print_selective_registration_header.py\n\n* Mention both flags\n\n-DSELECTIVE_REGISTRATION and -DSUPPORT_SELECTIVE_REGISTRATION\n\n---\nCommit ee919510f authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nRe-enable some python tests in Windows Bazel build (#10526)\n\n---\nCommit b0e881457 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Declare and assign separately (#10509)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2155\n---\nCommit 284901b08 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Remove unquoting quotes (#10506)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2027\n---\nCommit 2a1f11556 authored by ksellesk<zhengdachuan200305@gmail.com>\nCommitted by ksellesk<zhengdachuan200305@gmail.com>:\nFix AttributeError in resnet.py\n\nThere is no function tf.softmax() in Tensorflow 1.x.\n\nWhen running the old code, Python interpreter complains:\n\nFile \"resnet.py\", line 152, in res_net_model\nprediction, loss = res_net(x, y)\nFile \"resnet.py\", line 148, in res_net\nreturn tf.softmax(logits), loss\nAttributeError: 'module' object has no attribute 'softmax'\n\n---\nCommit 1d68f729b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unneeded BUILD dependency\n\nPiperOrigin-RevId: 158391996\n\n---\nCommit 08ed32dbb authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nWindows: Make TensorFlow build without --cpu=x64_windows_msvc (#10466)\n\n* Windows: Make TensorFlow build without --cpu=x64_windows_msvc\n\nSince from Bazel 0.5.0, MSVC toolchain became the default toolchain on\nWindows. So --cpu=x64_windows_msvc is not required as long as we adjust\nthe BUILD files in TensorFlow.\n\n--cpu=x64_windows_msvc is also supported for now, but is depracated.\nThe configuration for cpu value x64_windows_msvc is a duplicate of\nx64_windows, which should be removed in the future.\n\n* Fix breakage on macOS\n\n---\nCommit 02dbe153a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Simplify Conditional (#10503)\n\n---\nCommit c07bc581f authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Prefer read -a to split path (#10508)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2207\n---\nCommit 0a389674d authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\n[Bash] Prefer [ p ] && [ q ] over [ p -a q ] (#10507)\n\nAs proposed by static analysis tool:\nhttps://github.com/koalaman/shellcheck/wiki/SC2166\n---\nCommit 87a008ec3 authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by gunan<gunan@google.com>:\nDelete non-deterministic testEmpty() test (#10512)\n\n---\nCommit 3a2971bd8 authored by Frank Chen<frankchn@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds the base for ClusterResolvers, a new way of communicating with and retrieving cluster information for running distributed TensorFlow.\n\nImplementations of this class would eventually allow users to simply point TensorFlow at a cluster management endpoint, and TensorFlow will automatically retrieve the host names/IPs and port numbers of TensorFlow workers from the cluster management service.\n\nPiperOrigin-RevId: 158358761\n\n---\nCommit 28b4e7f04 authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by gunan<gunan@google.com>:\nDisable stage_op_test and map_stage_op_test (#10516)\n\n---\nCommit 390e57a75 authored by Yan (Asta) Li<yanastali@users.noreply.github.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nCheck EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0 (#10380)\n\n* Check EIGEN_MAX_ALIGN_BYTES to prevent mod-by-0\n\nIf EIGEN_MAX_ALIGN_BYTES is set to 0, alignment checks that mod by EIGEN_MAX_ALIGN_BYTES fail at runtime.\n\n* Returns true, as in tensorflow/core/framework/tensor.h\n* Update unit tests\n\n* Enable tests only if EIGEN_MAX_ALIGN_BYTES > 0\n\n---\nCommit cd5ac40b3 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Update LLVM to upstream revision r304927.\nAdd LLVM build rules for the LLVM AMDGPU backend, commented out by default. Fixes issue #10437.\n\nPiperOrigin-RevId: 158351480\n\n---\nCommit 91cb809bd authored by David Norman<DavidNorman@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[XLA] Add ability to run the XLA unit tests against a different device (#9759)\n\n* Add ability to run the XLA unit tests against a different device\n\n* Allow for multiple extra backend devices\n\n* Correct merge error\n\n* Include options for additional tags\n\n---\nCommit aff4d124b authored by Yuxin Wu<ppwwyyxxc@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nCompare base_dtype instead of dtype in piecewise_constant (#10280)\n\n* Compare base_dtype instead of dtype in piecewise_constant\n\nCompare base_dtype instead of dtype in piecewise_constant. Fix #10086\n\n* add unit test\n\n* Small lint fix and comment\n\n---\nCommit 845539f98 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd evaluation test for linear classifier (n==2 or n >2).\n\nPiperOrigin-RevId: 158340296\n\n---\nCommit 7c46214ab authored by Jonathan Hseu<vomjom@vomjom.net>\nCommitted by GitHub<noreply@github.com>:\nFix numpy 1.13 incompatibilities (#10501)\n\n* Fix numpy 1.13 incompatibilities\n\n* Skip tests with numpy 1.13.0\n\n---\nCommit 4572c41df authored by gunan<gunan@google.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nA few changes to kernel_tests. (#10502)\n\n* Disable reader_ops_test on windows.\n\n* Run buildifier on kernel_tests/BUILD\n\n* Mark map_stage_op_test as large.\n\n* Set the size of stage_op_test to large\n\n---\nCommit 892293d98 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet a default for datasets end_of_sequence.\n\nWhile all datasets carefully set the end_of_sequence to true at the\nappropriate time, some datasets might forget to set it to false in the normal\ncase. In order to avoid potential undefined behavior, we set the\nend_of_sequence variable to be false by default.\n\nPiperOrigin-RevId: 158337799\n\n---\nCommit 187404eac authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSetup the env to since ops such as MatchFileOp rely on it.\n\nPiperOrigin-RevId: 158336344\n\n---\nCommit 2741561c8 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix up vz_projector script structure\n\nWe now make sure scripts and HTML imports are declared in the correct\nplaces. In the future, pedantically listing script tags should not be\nnecessary.\n\nPiperOrigin-RevId: 158334306\n\n---\nCommit beeaade46 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nResubmit a reverted change. Original description:\n\n[XLA] Enable HloEvaluator for constant folding, also merged a few operations\nfrom hlo_constant_folding to hlo_evaluator.\n\nAdditionally:\n- In ShapeUtil::ForEachIndex:\n    * fix a bug where visitor is called when the shape has zero elements (e.g., F32{1,0})\n    * added test case for ForEachIndex.\n\n- In HloEvaluator:\n    * Instead of copying and caching a Constant instruction, return the literal directly if the instruction is constant.\n    * Fix an issue where TUPLE and OPAQUE primitives are not keyed in the templated typed_visitor.\n    * Use (fixed) LiteralUtil::Populate to populate resulting literal, fixes the preexisting bug in the evaluator where R0 and shape with zero size dimensions are not handled.\n    * Refactor ElementWiseUnaryOp and HandleCompare to be templatized on the operand's type.\n    * Refactor IsFinite to be top level since it is only applicable to floats and the return type is always boolean.\n    * Change from std::remainder to std::fmod for kRemainder to be compliant with existing XLA behavior.\n    * Change from std::max and std::min to std::fmax and std::fmin to handle NaNs.\n    * Minor comments fix.\n\nPiperOrigin-RevId: 158330052\n\n---\nCommit b94540e6f authored by Toby Boyd<tobyboyd@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntf.layers.conv2d use_bias=True to use nn.bias_add\n\nPiperOrigin-RevId: 158326493\n\n---\nCommit 379aa9911 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 158325855\n\n---\nCommit 4e529f0f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158325293\n\n---\nCommit 0a9d2dac0 authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a util function in virtual placer to return canonicalized device string, which can be used to fix the node's device field before passing them to the maxcut algorithm.\n\nPiperOrigin-RevId: 158322753\n\n---\nCommit 2d8da1d9b authored by Daniel Ylitalo<daniel@blodan.se>\nCommitted by gunan<gunan@google.com>:\nRecognize CPU core count in FreeBSD (#10490)\n\n---\nCommit c19e6cac0 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Initial implementation of TensorArray ops.\n\nThe XLA implementation of TensorArrays is more restrictive than regular TensorArrays:\n* XLA TensorArrays must have dynamic_size=False.\n* all elements in an XLA TensorArray must have the same shape.\n* writes always add their values to any existing values; neither reads nor writes ever issue errors. Out-of-bounds writes currently wrap.\n\nRefactor Variable handling in the TF/XLA bridge. Use a XlaVariable* to refer to variables inside compilation rather than a numerical ID. Allow for variables that don't correspond to variables known to the user. Also use XlaVariable to handle TensorArrays.\n\nPiperOrigin-RevId: 158322041\n\n---\nCommit b5e8d3086 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Refactor randomized tests to allow testing of larger inputs without running out of memory.\n\nPiperOrigin-RevId: 158321431\n\n---\nCommit 5d90bbaac authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Disable constant_folding in test base, so that intended test code paths\nwould not be elided by constant_folding pass.\n\nPiperOrigin-RevId: 158317641\n\n---\nCommit 036ce8ba6 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans dense_update_ops (#10335)\n\n* [OpenCL] Cleans dense_update_ops\n\n* Acts on feedback from: #10335#discussion_r120536460\n\n---\nCommit 85f968125 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans cast operation (#10330)\n\n* [OpenCL] Removes not needed typedef for SYCLDevice\n\n* [OpenCL] Fixes formatting\n\n* [OpenCL] use SYCLDevice for int32 cast case\n\n---\nCommit bff5e72da authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix typo.\n\nPiperOrigin-RevId: 158310742\n\n---\nCommit 38249d6be authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwap the order of NanTensorHook and custom hooks\n\nto ensure that when the training encounteres NaN's in the loss function, user-supplied hooks such as tf_debug.LocalCLIDebugHook can still be used to debug the root cause of the numeric issues.\n\nPiperOrigin-RevId: 158310249\n\n---\nCommit 599727c65 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Propagate debug option flags to hlo_test_base.\n\nSpecific HLO tests have to replace the generic test_main target with a manual\nmain() that invokes RUN_ALL_TESTS.\n\nTo get access to a module with debug options set up, a new convenience method\nis created on HloTestBase.\n\nInitially algebraic_simplifier_test is modified as a canary; in a followup\nwe'll convert all HLO tests to this approach.\n\nPiperOrigin-RevId: 158309488\n\n---\nCommit 0770393e9 authored by Eric Liu<ioeric@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[Tensorboard] Add a trace viewer component to TensorBoard.\n\nWe make the trace viewer a separate app; otherwise, there would be dependency\nconflicts (e.g. Polymer) between the trace viewer app and the tensorboard app.\nThe trace viewer app would be served by a plugin, and Tensorboard dashboard will integrate trace viewer app using iframe in the\nfuture.\n\nThis CL also added \"mominify\" support for link import HTML tags in the\ntensorboard home-grown java vulnizer; otherwise, the vulcanized trace viewer code\nwould crash the java vulcanizer.\n\nFor open-source build, we add a denpendency on the Catapult github repository\n(https://github.com/catapult-project/catapult/tree/master/tracing). We use a bazel genrule to vulcanize a trace viewer binary which is then used in the\ntf-trace-viewer component.\n\nPiperOrigin-RevId: 158309408\n\n---\nCommit 85e832201 authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport unknown emit shapes in tf.nn.raw_rnn.\n\nPiperOrigin-RevId: 158308002\n\n---\nCommit edb5fed7f authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd label-vocab support to binary logistic head.\nAdd assertion that binary classifier label is in range [0., 1.]\nFixed Classifier Integration tests.\n\nPiperOrigin-RevId: 158307521\n\n---\nCommit f8e1cf8fa authored by Justine Tunney<jart@google.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nOpen up visibility of tf_imports (#10500)\n\nThis also fixes the definition of Clutz.\n---\nCommit 9fd7cf054 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans relu ops (#10343)\n\n* [OpenCL] register relu ops to gpu types (no half)\n\n* [OpenCL] Removes #undef EIGEN_USE_SYCL\n\n---\nCommit 09c1455e3 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reverse_op.cc (#10346)\n\n---\nCommit b7892a30f authored by orome<royl@aldaron.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nClarify tf.matmul documentation (#10381)\n\n* Update math_ops.py\n\n* Fix non-ascii character\n\n---\nCommit 9786b7062 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Cleans StridedSlice Op (#10314)\n\n* [OpenCL] Cleans StridedSlice Op\n\n* [OpenCL] Removes half from registred types\n\n---\nCommit f105df047 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, optimize backward filter convolution for images 2 or 4 times smaller than 16x16. Also initialize in_cols from blockDim, to fix the regression caused in CL 157906773.\n\nPiperOrigin-RevId: 158296136\n\n---\nCommit 492afc2e3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 158295169\n\n---\nCommit abe0877ef authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd bazel version check to .configure\n\nPiperOrigin-RevId: 158294569\n\n---\nCommit b702e7e79 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158294289\n\n---\nCommit 94085bee7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReplace std::function object with regular function.\n\nThe function is called recursively, and the std::function object had only existed to allow recursion from within a lambda expression. A regular function should be cheaper than a polymorphic function wrapper.\n\nPiperOrigin-RevId: 158292415\n\n---\nCommit ba656b261 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse template specialization instead of overloaded methods. This is a more appropriate tool here. NFC\n\nPiperOrigin-RevId: 158292035\n\n---\nCommit 55f987692 authored by Yutaka Leon<yleon@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n  Make tf.contrib.lookup  python functions use the kernels v2 that uses the resource tensor as handler.\n\nPiperOrigin-RevId: 158291836\n\n---\nCommit ebae3deba authored by Wei Ho<weiho@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSwitch back to max_num_rows_to_load instead of reading slice by slice due to performance regression from network overhead.\n\nAdd check when using initializing values to avoid seg fault\n\nPiperOrigin-RevId: 158291218\n\n---\nCommit 7b4c01794 authored by RJ Ryan<rjryan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport numpy-style padding and slicing of tf.spectral.rfft/irfft to match the desired FFT length.\n\nFixes incorrect RFFT/IRFFT results when fft_length does not match the input dimension.\n\nPiperOrigin-RevId: 158289991\n\n---\nCommit fdb8e2935 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate iOS examples to use CocoaPods, and moved to tensorflow/examples/ios\n\nPiperOrigin-RevId: 158289285\n\n---\nCommit d86167b5f authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nMerging rc2 back into master.\n\n---\nCommit dffea202a authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nClean up some code after previous CL\n\nPiperOrigin-RevId: 158282834\n\n---\nCommit 7b5302af0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds ability to set a \"family\" attribute in Tensorflow summaries, which\ncontrols the \"tab name\" of the summary that is displayed.\n\nThis solution keeps using name_scope to keep names unique, but then prefixes the tag with the family name if provided.\n\nPiperOrigin-RevId: 158278922\n\n---\nCommit 611c82b5b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds integration test for DNNLinearCombined((Classifier)|(Regressor)).\n\nPiperOrigin-RevId: 158278512\n\n---\nCommit cc6c91a9a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove a further unused proto header inclusion\n\nPiperOrigin-RevId: 158278026\n\n---\nCommit 9f17c26ca authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add HloLocation to dataflow analysis.\nAdd an HloLocation abstraction to dataflow analysis which indicates where (in the output of what instruction and at which index) an HloValue may appear. Previously only uses were stored with an HLO value where a use is an edge in the HLO graph (instruction, operand number and ShapeIndex).\n\nAlso, change the handling of tuple-shaped kSelect instructions when ssa_form is true. Previously a phi value would be created. With this change the the value set instead contains the union of it's inputs identical to the ssa_form=false case.\n\nPiperOrigin-RevId: 158276598\n\n---\nCommit b9d5e1441 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Start collecting flags for debug options in a single place.\n\nClientLibraryTestBase will now parse command-line flags for debug options\nautomatically, permitting subclasses to override certain options by using\nmutable_debug_options.\n\nmain() still has to call AppendDebugOptionsFlags() explicitly before running\nthe TF flag parser. In the mean-time, this CL leaves flag handling to the\ncurrent \"legacy\" approach. However, this is part of a larger plan to move *all*\ndebugging flags for XLA into the DebugOptions message and expose them as flags\nfrom a single place. The other flags (which are not controlling debugging\noptions) will have to be propagated more explicitly.\n\nPiperOrigin-RevId: 158276294\n\n---\nCommit 3b6fe94bb authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nProperly handle shape nodes that have a preexisting control dependency\n\nPiperOrigin-RevId: 158274845\n\n---\nCommit 1d67379d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup\n\nPiperOrigin-RevId: 158268933\n\n---\nCommit 41997756c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSort header inclusions; define EIGEN_USE_THREADS where headers depend on it.\n\nPiperOrigin-RevId: 158267803\n\n---\nCommit 85355f015 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd missing header inclusion\n\nPiperOrigin-RevId: 158265934\n\n---\nCommit 3cf88d390 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWhen GPU is configured, do not require --config=cuda.\nAlso fix indentation in configure.\n\nPiperOrigin-RevId: 158232959\n\n---\nCommit f48673b50 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Removes ReductionFunctor for SYCLDevice (#10326)\n\nWe are using Eigen implementation\n---\nCommit 1b6453bec authored by Joan Puigcerver<joapuipe@gmail.com>\nCommitted by gunan<gunan@google.com>:\nFixes issue #10258 (#10366)\n\nOn CUDA versions previous to 8.0, only __shared__ variables could be declared as static in the device code.\n---\nCommit cd56a638d authored by Beomsu Kim<123bskim@naver.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed wrong range in docstring (#10272)\n\n---\nCommit d13ae380c authored by Micha? Jastrz?bski<michal.jastrzebski@intel.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix CMD in Dockerfile (#10444)\n\nCurrently Notebook fails execution because default user for this container is root, and unless explicitly allowed, jupyter notebook will not start.\n---\nCommit 8118ab4ec authored by Simon Perkins<simon.perkins@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nSupport partial gets in MapStagingArea (#10276)\n\n* Modify map staging area tests\n\n- size from `small` to `medium`\n- introduce 2 shards\n\n* Add partial get support in MapStagingArea\n\nA partial list of tensors in a (key, value) map entry can now be\nrequested. Once all tensors associated with the entry are removed,\nit is removed from the map.\n\n* Correct output/indices mismatch errors\n\n* Rename IncompleteTuple to OptionalTuple\n\n* Add partial get test with indices\n\n* Add some more index checks\n\n* Improve stage test case graph creation\n\nTest sessions (and default graphs) are reused by default.\nCreate explicit, finalized graphs in each test to prevent\npossible interactions between stateful Staging Areas and\nothers ops created in separate tests.\n\n* Make staging area tests small and remove shards\n\nThey were originally made 'medium' to ameliorate timeouts in the test\ncase, but they usually run in ~1s so they should be small.\n\n* Improve imports\n\nAvoid importing base tensorflow package\n\n* Support both python 2 and python 3 range.\n\n* Set map_stage_op_test to size=large\n\n* Convert the tests to size=medium\n\n---\nCommit 0df102b0a authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nUpdate `configure` script sample (#10455)\n\nThe `configure` script was changed regularly since the generation of the sample.\nThis PR updates the sample to reflect those changes.\n---\nCommit f6dc1ac61 authored by Earthson Lu<Earthson.Lu@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nMKL_INSTALL_PATH should not be ignore when given (#10180)\n\n* MKL_INSTALL_PATH should not be clear when given\n\n* fix overwrite by default\n\n---\nCommit 8ad6a036e authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nJava: Update Maven release to 1.2.0-rc2\n\nPiperOrigin-RevId: 158212897\n\n---\nCommit 15eddf035 authored by Fritz Obermeyer<fritz.obermeyer@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nExport C API symbols in _pywrap_tensorflow_internal.so (#10469)\n\n* Export C API symbols\n\n* Export C API symbols under config:default\n\n---\nCommit 754e12668 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Removes half concat op registration (#10331)\n\n---\nCommit cfdc22dee authored by Peng Yu<yupbank@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nfix the error (#10293)\n\n---\nCommit 58747e357 authored by Joel Hestness<jthestness@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nPhiloxRandom: Fix race in GPU fill function (#10298)\n\n* PhiloxRandom: Fix race in GPU fill function\n\nThe PhiloxRandom fill kernel for the GPU had race conditions that caused the\noutputs to be non-deterministic. In particular, the code previously executed\nwith N GPU threads (# thread contexts per GPU), but it would only advance the\nfill addresses by N-1 stride in each step. This incorrect stride caused the\n0th and N-1st threads to write to the same memory locations, racing for which\nwas last to write their common locations. Make the stride equal to the number\nof threads to eliminate the race.\n\nBONUS: By fixing this race, PhiloxRandom constant-sized GPU initializers now\nmatch CPU initializers.\n\n* Update random_ops_test.py to find race conditions\n\nIncreasing the size of arrays in the random_ops_test.py test to manifest\nthe race conditions to be resolved.\n\n---\nCommit 2cbcda08f authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed formatting in Linux install guide (#10353)\n\nFormatting issues were introduced in PR #8825, commit f30918b3694afe844990cbddc82e27e023d88856\n---\nCommit ab5f38560 authored by Lakshay Garg<lakshayg@outlook.in>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFixed typos in documentation & READMEs (#10365)\n\n---\nCommit 94dc1dbfa authored by Christos Nikolaou<cNikolaou@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nEnable figures in the tfprof README.md (#10372)\n\n---\nCommit 3018d4678 authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix typos (#10386)\n\n---\nCommit c5f3c6171 authored by Daniel Rasmussen<drasmuss@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix unbatch for Datasets with multiple elements (#10401)\n\n* Fix unbatch for datasets with multiple elements\n\n* fixup! pylint (indent two spaces instead of four)\n\n---\nCommit 8b065bc10 authored by Yong Tang<yong.tang.github@outlook.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nFix unaligned args in api_docs/python/tf/contrib/learn/Evaluable (#10423)\n\nThis commit fixes unaligned args in api_docs/python/tf/contrib/learn/Evaluable\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n---\nCommit 8f89b654f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nProfile memory usage in VirtualScheduler and report peak memory usage.\nTo do so, NodeState now handles different output ports of a node (in case\na node has multiple outputs).\n\nAlso, VirtualScheduler code is cleaned up with more comments.\n\nPiperOrigin-RevId: 158209068\n\n---\nCommit 0ea0bf5aa authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a frontend for viewing the first ops that exhibit bad values (NaN, +/- Inf).\n\nThis helps the user identify problematic ops. Also moved the debugger data logic within tf-graph-info into a new tf-graph-debugger-data-card component.\n\nPiperOrigin-RevId: 158208679\n\n---\nCommit ed47ecf2d authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Cleans variable op (#10333)\n\n* [OpenCL] Cleans variable op\n\n* Fixes formatting and float / double -> GPU_NUMBER_TYPES_NO_HALF\n\n---\nCommit 9b2c1af63 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Improves device reporting (#10462)\n\nPrints: id, type, name, vendor and profile of the device\n---\nCommit 7f5384dcc authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMaking load() work for resource variables.\n\nPiperOrigin-RevId: 158205361\n\n---\nCommit 05412bd36 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Simplify Shape traversal visitors.\nSimplify shape traversal visitors in ShapeUtil and ShapeTree. Add a non-Status form because most uses of the traversal methods do not use it, and remove is_leaf parameter from ShapeTree.ForEach* as it is not frequently used.\n\nPiperOrigin-RevId: 158201574\n\n---\nCommit 69c9365b4 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtracted linear estimator testing utils to be reused by dnn-linear-combined.\nAdded tests for linear part of dnn-linear-combined estimator.\n\nPiperOrigin-RevId: 158200827\n\n---\nCommit 65ce8c723 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd arrowheads to dataflow edges.\nMake reference edges orange.\nRemove animations from tooltips in the graph documentation.\n\nPreviously, arrowheads were only added to reference edges (because we assumed users knew about the convention that arrowless edges flow upwards). That decision nicely reduces clutter. However, recently, some internal and external folks have expressed confusion, and so I want to try adding arrowheads to all data flow edges. And make the reference edges starkly different.\n\nSee #10428\n\nPiperOrigin-RevId: 158195388\n\n---\nCommit bf4c3dd6b authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nRevert \"Fix patching issue on Windows\" (#10472)\n\nThis reverts commit 47e6785646a1266f01a1a570bd799f8518ee2997.\n\n---\nCommit b49515539 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd only string constants to ASSET_FILEPATHS collection.\n\nPiperOrigin-RevId: 158192152\n\n---\nCommit 51acad09c authored by Sergio Guadarrama<sguada@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd tests with different delta to huber_loss.\n\nPiperOrigin-RevId: 158191361\n\n---\nCommit a4e7b7add authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes a bug in setting default optimizers for DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158190192\n\n---\nCommit ddd67e333 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\n[OpenCL] Cleans reshape.cc (#10347)\n\n* [OpenCL] Cleans reshape.cc\n\n* Removes half and complex numbers.\n\n Half is extension and complex numbers needs implementation in Eigen first\n\n---\nCommit 3ca653304 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 158186454\n\n---\nCommit 8cda8660e authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans sendrecv_ops.cc (#10345)\n\n---\nCommit 6915bb919 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans Slice op (#10341)\n\n---\nCommit 54998b45d authored by Michele Colombo<m-colombo@users.noreply.github.com>\nCommitted by Jonathan Hseu<vomjom@vomjom.net>:\nBasicRNNCell comment fix (#10467)\n\n---\nCommit df5906fb7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMark saver/restore ops that depend on filesystem as stateful to disable them\nfrom being folded into a constant by graph optimizer.\n\nPiperOrigin-RevId: 158182282\n\n---\nCommit 96cb4d182 authored by Sergio Guadarrama<sguada@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support of scale_l1 == 0. or scale_l2 == 0 to l1_l2_regularizer.\nAdded tests.\n\nPiperOrigin-RevId: 158179790\n\n---\nCommit b65eb3f9b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSpeed up atrous_convolution_test by combining evaluations.\n\nTo make this test run faster (and prevent it from timing out under\ncertain circumstances), this change combines all evaluations for each\ntest method into a single call to Session.run, to eliminate overhead.\n\nThis reduces the test time from about 40 seconds to 10 seconds.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 158175227\n\n---\nCommit b440abce7 authored by Gao, Xiang<qasdfgtyuiop@gmail.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nadd Cuda{2D,3D}LaunchConfig that maximizes occupancy (#10032)\n\n* add Cuda{2D,3D}LaunchConfig that max occupancy\n\n* remove default val, check input<=0\n\n* add max size check\n\n* fix typo\n\n* tests, docs, and related changes\n\n* build the test\n\n* buildify\n\n* cudaOccupancy... call check success, and style fix\n\n---\nCommit 81cf61fdb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInitialize tensor in graph_properties_test, to avoid msan complaint.\n\nPiperOrigin-RevId: 158169374\n\n---\nCommit cabc5c35c authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add xla_disable_hlo_passes to DebugOptions\n\nAlso add a SetDebugOptions method to ClientLibraryTestBas; this lets us set\ndebug options in tests by calling it.\n\nAs an example, this CL removes the current way of passing\nxla_disable_hlo_passes programmatically in tests - it used to employ a special\nconstructor parameter which is no longer required.\n\nPiperOrigin-RevId: 158169006\n\n---\nCommit 187d23337 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by gunan<gunan@google.com>:\n[OpenCL] Cleans Pad op (#10339)\n\n---\nCommit e8bc38ef6 authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nFix test failures on windows. (#10470)\n\n---\nCommit 2b3535c64 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor docstring fix for build_parsing_serving_input_receiver_fn\n\nPiperOrigin-RevId: 158163615\n\n---\nCommit e55f2e036 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPropagates constants through switch nodes.\n\nPiperOrigin-RevId: 158163537\n\n---\nCommit b01d4b905 authored by Jacques Pienaar<jpienaar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Remove outdated todo.\n\nPiperOrigin-RevId: 158161411\n\n---\nCommit 7125733d7 authored by William Chargin<wchargin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCreate a set of sample data for the audio plugin\n\nThis implements a simple tone generator, with sine waves, square waves,\nand triangle waves, plus two simple combinations of sine waves. The step\nvalue is used to control the frequency.\n\nPiperOrigin-RevId: 158160889\n\n---\nCommit dc81a2420 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdates to the WALSMatrixFactorization estimator:\n- Add a completed_sweeps variable to keep track of sweeps that have been completed during training.\n- Add a StopAtSweepHook, which can request a stop after completing a specified number of sweeps.\n\nPiperOrigin-RevId: 158156347\n\n---\nCommit 74220616c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet device cores and frequency in op_level_cost_estimator_test,\nto avoid asan error about assigning inf to int64 (this comes\nin from a divide-by-0).\n\nPiperOrigin-RevId: 158155488\n\n---\nCommit 47e678564 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nFix patching issue on Windows (#10452)\n\n---\nCommit 6d54f09d9 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nFix linking errors of lmdb on Windows (#10457)\n\n---\nCommit 61c8a745b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup: Add braces around if statement arms; remove redundant \"return\" and \"static\".\n\nPiperOrigin-RevId: 158143418\n\n---\nCommit e9a889c5e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPass int parameter by value, not by const reference\n\nPiperOrigin-RevId: 158142102\n\n---\nCommit 9184726ed authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid unnecessary copying of map data during visitation\n\nPiperOrigin-RevId: 158141962\n\n---\nCommit 2e7e1d57b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSmall fix for how std::move is used in constructors\n\nPiperOrigin-RevId: 158141564\n\n---\nCommit 2a61c1652 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn cpu compiler's CompileAheadOfTime, pass ordering when compiling entry computation.\n\nPiperOrigin-RevId: 158140349\n\n---\nCommit f3f53e8b3 authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Add support for dicts and remove lists from nested structures.\n\nThis changes the behavior of constructors like\n`tf.contrib.data.Dataset.from_tensors()` when passed a list. Previously, the\n`nest` utility would recurse into each element of such a list and create a\nseparate Dataset component. Now the list will be converted to a tensor, allowing code like:\n\n```python\ndataset = tf.contrib.data.Dataset.from_tensor_slices(([1, 2, 3], [4, 5, 6]))\n```\n\n...to define a dataset with two components (each of shape `()`).\n\nThis change also adds support for dictionaries as nested structures, which\nsimplifies integration with dictionary-returning ops like `tf.parse_example()`.\n\nFixes #10151.\n\nRELNOTES: Breaking change to `tf.contrib.data.Dataset` APIs that expect a\nnested structure. Lists are now converted to tf.Tensor implicitly. You may need\nto change uses of lists to tuples in existing code. In addition, dicts are now\nsupported as a nested structure.\nPiperOrigin-RevId: 158139467\n\n---\nCommit b6a8848c1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nEnabling python configuration to use a remotely generated configuration that is located inside of the org_tensorflow repo (previously it *had* to be a remote repo declared in workspace file).\n\nPiperOrigin-RevId: 158138601\n\n---\nCommit 0fe0bfcc3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused protobuf header inclusions\n\nPiperOrigin-RevId: 158120864\n\n---\nCommit f0c4c6c3f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW backward filter convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 158111294\n\n---\nCommit 8dcf37b47 authored by Jon Malmaud<malmaud@gmail.com>\nCommitted by gunan<gunan@google.com>:\nFix typo (#10379)\n\n---\nCommit 3039d7da2 authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by gunan<gunan@google.com>:\nRemove \"bazel clean\" (#10318)\n\nReverting #8880 (see #10236)\nunnecessary since bazelbuild/bazel#2759 was merged\n---\nCommit ae1c16ae8 authored by Yifei Feng<fengyifei2026@gmail.com>\nCommitted by gunan<gunan@google.com>:\nUpdate docker to cudnn6. (#10307)\n\n* Update docker to cudnn6.\n\n* Update Dockerfile.gpu\n\n* Add --expunge to bazel clean to make cuda_configure run again and update TF_CUDNN_VERSION.\n\n* Remove expunge and set CUDA and CUDNN version default in configure.\n\n* Update configure\n\n* Only set --action_env once\n\n* Update prints for default version.\n\n---\nCommit 232e9d86d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntf_workspace() claims that the tf_repo_name argument is unused.\ntemp_workaround_http_archive still requires it.\nThis change silences the spurious message.\n\nPiperOrigin-RevId: 158089834\n\n---\nCommit cc1a02d37 authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd fp16 support to convolutional layers that support it.\n\nPiperOrigin-RevId: 158086284\n\n---\nCommit 7d3fbba48 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtracted dnn estimator testing utils to be reused by dnn-linear-combined.\nAdded tests for dnn part of dnn-linear-combined estimator.\n\nPiperOrigin-RevId: 158084898\n\n---\nCommit 9d12c629c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor the document and some polishment\n\nPiperOrigin-RevId: 158083952\n\n---\nCommit 134138299 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCorrected comment: import_scoped_metagraph does not return a Saver.\n\nPiperOrigin-RevId: 158082288\n\n---\nCommit a58553e4d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd function in shape inference to try to infer output tensor content based on\nthe input shapes of the op. In some cases (E.g: shape), knowing the shapes of\nthe input is all that is necessary to infer the content of the output tensor.\nThis improves shape inference.\n\nPiperOrigin-RevId: 158079306\n\n---\nCommit 0cc851c08 authored by Yuefeng Zhou<yuefengz@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCall maxcut algorithm in the model_based_cost_estimator.\n\nPiperOrigin-RevId: 158078511\n\n---\nCommit 7d76a90be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd question marks next to items in the graph legend.\n\nPiperOrigin-RevId: 158076005\n\n---\nCommit 68fdb7628 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd DNNLinearCombinedClassifier.\n\nPiperOrigin-RevId: 158075939\n\n---\nCommit 3d52e4cb9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix create_meta_graph to respect an empty collection_list.\n\nPiperOrigin-RevId: 158073112\n\n---\nCommit 54ccc3e5a authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add module-scoped HLO dataflow analysis.\nThis is the first step to replacing TuplePointsToAnalysis with a global, module-scoped analysis. This dataflow analysis identifies all values and their defs and uses in the XLA graph. The analysis is currently unused. Follow up CLs will add buffer alias analysis using this dataflow analysis, and incrementally switch the transformation passes (for example, CopyInsertion) to use these new module-scoped analyses.\n\nPiperOrigin-RevId: 158067910\n\n---\nCommit 93c57c6e4 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nHandle control flow logic properly:\n * Don't fold enter/exit nodes since that can interact badly with frames\n * Create proper control dependencies on switch nodes\n\nPiperOrigin-RevId: 158066691\n\n---\nCommit 9e6899720 authored by Jingyue Wu<jingyue@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[SE] Add cudnnTransformTensor to StreamExecutor.\n\nPiperOrigin-RevId: 158062553\n\n---\nCommit 827874c30 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW backward input convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 158061669\n\n---\nCommit bee26215c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSpeed up multinomial_op on CPU by using a vectorized Eigen expression and avoiding unnecessary casts.\n\nBenchmark with AVX+FMA enabled:\n\nRun on <redacted> (12 X 3492 MHz CPUs); 2017-06-05T12:54:07.881672447-07:00\nCPU: Intel Haswell with HyperThreading (6 cores) dL1:32KB dL2:256KB dL3:15MB\nBenchmark                          Base (ns)  New (ns) Improvement\n------------------------------------------------------------------\nBM_Multinomial_cpu_1_10000_4          250817    172953    +31.0%\nBM_Multinomial_cpu_1_10000_128        273834    187552    +31.5%\nBM_Multinomial_cpu_1_10000_10000     1174175   1130778     +3.7%\nBM_Multinomial_cpu_1_100000_4        2040741   1276761    +37.4%\nBM_Multinomial_cpu_32_10000_4       10221765   4498666    +56.0%\nBM_Multinomial_cpu_32_10000_128     10638159   4994754    +53.0%\nBM_Multinomial_cpu_32_100000_4      100790019  44193314    +56.2%\nBM_Multinomial_cpu_128_100000_1     431269640  182506078    +57.7%\nPiperOrigin-RevId: 158061480\n\n---\nCommit 515b3ac67 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd Clutz to TensorBoard build\n\nThis is so we can get JavaScript protobufs. This CL also improves the\nweb_aspect and makes some peculiar Closure Compiler errors go away\nrelating to externs.\n\nPiperOrigin-RevId: 158061198\n\n---\nCommit 0df6760fe authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded a test to make sure that graph properties for variables are properly\nreported\n\nPiperOrigin-RevId: 158053084\n\n---\nCommit 2ccfe8e76 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded a new method to extract the graph properties from a cost graph without\nhaving to run the model. This will simplify the process of creating regression\ntests\n\nPiperOrigin-RevId: 158050327\n\n---\nCommit 27f1b80c2 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes memory leak in py_func when functions return unwrapped strings.\n\nPiperOrigin-RevId: 158046530\n\n---\nCommit cf238e1f2 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix memory leak in python caused by @tf_should_use.\n\nThe issue is that python's GC has trouble collecting objects with __del__ methods.\n\nThe solution is two pronged:\n* Keep track of usage state outside of the class, via a dict mapping\n  id(object) => state\n* Remove __del__ (this was the source: python's GC couldn't collect wrapped\n  objects), and instead use weakref.finalize to emit warnings just as the object\n  is being garbage collected.\n* Added tests for garbage collection [they were failing before i fixed the issue]\n\nPiperOrigin-RevId: 158042388\n\n---\nCommit e6f581863 authored by Bo Wang<david.b.wang@gmail.com>\nCommitted by Rasmus Munk Larsen<rmlarsen@google.com>:\nNew reader for LMDB databases (#9950)\n\n* Add LMDBReader op and test case\n\n* Add testcase to load LMDB from a folder\n\n* Add tensorflow/core/lib/lmdb/testdata/data.mdb\n\n* Add EOF test\n\n* Add license export\n\n* Blacklist the test data in pip_smoke_test.py\n\n* Address issues with respect to review\n\n* Add LICENSE to BUILD rules\n\n* Remove the prefx of LICENSE\n\n* Wrap key with compat.as_bytes()\n\n* Fixed a compilation flag\n\n* Improve BUILD rules\n\n* Support LMDB build in cmake\n\n* Fix BUILD file format with buildifier\n\n* Add fake unistd.h for lmdb to build on Windows\n\n* Avoid building lmdb tools which depends on unistd.h\n\n* Fix the string encoding issue in Python3\n\n* Update lmdb library name in CMakeList.txt\n\n---\nCommit cc411f938 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWhen converting the layout of Conv2DBackpropInput, we need to permute one of\nits inputs, which is a constant node. We permute a copy of this node, instead of the\noriginal node, because the original node may be used as input to other nodes.\nThis kind of sharing of const node could arise if the graph is pre-optimized by common\nsubexpression elimination, which is part of the L1 optimizations in\nTensorFlow.\n\nPiperOrigin-RevId: 158037552\n\n---\nCommit 88bdb6fca authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove all remaining references to non-public TF modules from TensorBoard.\n\nI deleted the PluginAssetUtil tests because that code is deprecated.\nI'll later add manual testing for backcompat in the text plugin.\n\nPiperOrigin-RevId: 158037466\n\n---\nCommit 6c531eb2f authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd file hash to Keras Boston Housing dataset to force cache update.\n\nPiperOrigin-RevId: 158036587\n\n---\nCommit afdc38cd3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove deprecated resource handle functions in InferenceContext.\n\nPiperOrigin-RevId: 158034419\n\n---\nCommit 9f932e6ce authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid parsing a rendezvous key for Send/Recv ops outside a loop.\n\nFor such ops, the rendezvous key will be constant, because\n`ctx->frame_iter()` will always evaluate to `{0, 0}`. Benchmarking\nreveals that this can save between 1 and 2 microseconds per Send or\nRecv op execution. The optimization applies to all cross-process,\ninter-device, and intra-device (host-to/from-device memory) Send/Recv\nops.\n\nPiperOrigin-RevId: 158032522\n\n---\nCommit cc2dd4ac8 authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntfdbg: dump debug data from different devices in separate directories\n\nFixes: #7051\nwherein TFDBG failed to load the data dump from a Session.run() involving multiple GPUs.\n\nThe root cause of the bug was that TFDBG previously assumed that node names are unique across all partition graphs. This is however not the case when multiple GPUs exist. The Send/Recv nodes in the partition graphs of the GPUs can have duplicate names. There will potentially be other cases like this in the future due to other reasons (e.g., distributed sessions and/or graph optimization).\n\nThis CL relaxes this assumption, by dumping the GraphDef and tensor data from different devices into different sub-directories under the dump root directory.\n\nPiperOrigin-RevId: 158029814\n\n---\nCommit a5909d643 authored by Toby Boyd<tobyboyd@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixed triggering create device multiple times\n\nPiperOrigin-RevId: 158025196\n\n---\nCommit 504a307b7 authored by Martin Wicke<wicke@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake sure that Adam colocates ops with a consistent variable across workers.\n\nPiperOrigin-RevId: 158022292\n\n---\nCommit 69ba4d3d4 authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix #10371\n\ncpuinfo.get_cpu_info() doesn't seem to include the l2_cache_size key on some\narchitectures.\n\nPiperOrigin-RevId: 158021008\n\n---\nCommit a51a9846c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPerformance-related tweaks: Don't copy loop variables; remove ineffective std::move casts.\n\nPiperOrigin-RevId: 158017670\n\n---\nCommit 009789f74 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Allow 0-sized slices in DynamicSlice and DynamicUpdateSlice; add tests.\n\nPiperOrigin-RevId: 158015870\n\n---\nCommit 48a4853eb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMiscellaneous cleanups\n\nPiperOrigin-RevId: 158012131\n\n---\nCommit 379ddde24 authored by Chris Song<sjhshy@gmail.com>\nCommitted by Chris Song<sjhshy@gmail.com>:\nFix misspells.\n\n---\nCommit a0a76da97 authored by Lakshay Garg<lakshay.garg.1996@gmail.com>\nCommitted by Lakshay Garg<lakshay.garg.1996@gmail.com>:\nFixed typo in code\n\n---\nCommit 7ffc35732 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd support for bools in matrix_diag, matrix_diag_part, matrix_set_diag, matrix_band_part.\n\nPiperOrigin-RevId: 157939272\n\n---\nCommit edf3d5dbe authored by Darren Garvey<darren.garvey@gmail.com>\nCommitted by Darren Garvey<darren.garvey@gmail.com>:\nconfigure: Fix default path when enabling MPI.\n\nCorrect showing what the default path is when mpi is installed.\n\n---\nCommit aad2e3daf authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast NCHW forward convolution for images smaller than 16x16.\n\nPiperOrigin-RevId: 157915637\n\n---\nCommit 5cf08d9cb authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDrop blockDim.y for the equivalent in_cols, and slightly improve naming (use 'pixels' instead of 'size' for height*width numbers).\n\nPiperOrigin-RevId: 157906773\n\n---\nCommit 563f05ff6 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf contrib seq2seq] Expand tile_batch to handle nested structures.\n\nThis allows it to properly tile the initial wrapper state when using\nBeamSearchDecoder with AttentionWrapper.  Unit tests updated to show this use.\n\nPiperOrigin-RevId: 157903115\n\n---\nCommit 1234e2dda authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix Plottable definition\n\nOn Mac OS the build directory in the Node package conflicts with BUILD.\n\nPiperOrigin-RevId: 157899970\n\n---\nCommit bb7a8d8e7 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDon't use the _output_shape attribute in the op_level_cost_estimator since\nthere is no guaranty that it will be present or accurate.\n\nPiperOrigin-RevId: 157898989\n\n---\nCommit 6f4204c3d authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix TensorBoard SHA256 in cmake\n\nPiperOrigin-RevId: 157897958\n\n---\nCommit c9d2f432b authored by Justine Tunney<jart@google.com>\nCommitted by Justine Tunney<jart@google.com>:\nFix TensorBoard SHA256 in cmake\n\n---\nCommit 1c70fb686 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd training test for multi classes (n>2) linear classifier.\n\nPiperOrigin-RevId: 157896002\n\n---\nCommit 675d36be0 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd fused batch norm to tf.layers.\n\nPiperOrigin-RevId: 157893874\n\n---\nCommit f37d0ea47 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change -- first draft docs\n\nPiperOrigin-RevId: 157891937\n\n---\nCommit 9b8f6113b authored by Zongheng Yang<zongheng@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntensor_bundle: fix that the read path forgets to cache file handles.\n\nIn a case where a reader is geographically far from the file, this change\nachieves a speedup of end-to-end checkpoint restore by 5.8x.\n\nPiperOrigin-RevId: 157889659\n\n---\nCommit 0c92dada6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse inplace Cholesky factorization and solves to speed up and reduce memory usage in matrix_solve_ls.\nCheck succes before copying outputs in cholesky_op.\n\nPiperOrigin-RevId: 157887564\n\n---\nCommit a4caeb2ea authored by William Chargin<wchargin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtract the graphs dashboard to a plugin\n\nThis completes the great plugin migration!\n\nThe graphs plugin is somewhat different from the plugins considered so\nfar. First, it exposes two kinds of data: graph data and run metadata.\nWe elect to put both sources of data under the domain of the graphs\nplugin for now, because it's not clear that the run metadata would be\nuseful for anything else. Second, the graph data really has no use for\n\"tags\": a run either has an associated graph or it does not. Thus, we\nexpose an endpoint /data/plugin/graphs/runs that is different in format\nfrom the /tags routes exposed by other plugins (it returns just a list\ninstead of a run-to-tag mapping).\n\nThis change removes a bunch of tests from application_test.py. The tests\ncover the compresion behavior of the graph endpoint, but the graph\nendpoint doesn't have any special logic in the way of compression. Thus,\nthe tests are, apparently, testing that werkzeug (or whatever is\nrelevant here) provides good compression defaults. This isn't\nnecessarily a bad idea, but it shouldn't be coupled to the graph tests.\n\nTo get test data that includes run metadata, you can run this script:\n\n    https://raw.githubusercontent.com/tensorflow/tensorflow/326942394e69074d50d5889218a24c9371eff259/tensorflow/examples/tutorials/mnist/mnist_with_summaries.py\n\nPiperOrigin-RevId: 157884714\n\n---\nCommit 05a6a13f7 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by gunan<gunan@google.com>:\nMake sure all writer caches are closed before deleting directories in dnn_test.\n\n---\nCommit d0e761f8d authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by gunan<gunan@google.com>:\nDisable another test that uses matrix_set_diag on windows.\n\n---\nCommit 8939b8562 authored by Derek Murray<mrry@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf.contrib.data] Re-implement IteratorGetNext as an AsyncOpKernel.\n\nThis prevents the op from consuming an inter-op thread pool thread\nwhen blocked, and fixes a potential deadlock when many IteratorGetNext\nops are blocked. Fixes #10369.\n\nPiperOrigin-RevId: 157878885\n\n---\nCommit 9e25c68ad authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd loss_only_head to hold additional loss terms for multi_head setup\n\nPiperOrigin-RevId: 157875934\n\n---\nCommit 7cdcd0cca authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFilter more op types that don't benefit from constant folding.\n\nPiperOrigin-RevId: 157875168\n\n---\nCommit 366990d92 authored by Kay Zhu<kayzhu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Fix a subtle issue in copy_insertion due the interaction between copy\noverriding logic and RecordIndicesToColocatingBuffers:\n\n- When building instructions ShapeTree to be copy overriden, it is possible\nthat we create a single kCopy for two identical instructions. An example can\nbe:\n\n    %tuple.19 = tuple(%constant.4, %constant.1793, %constant.1793)\n\nwhere it is used in a while.init operand, and constant.1793 is read-only within\nthe loop and also used by another while loop. The copy overriding pass will then\ncreate the following (logical, not finalized) tuple:\n\n    %tuple.19 = tuple(%constant.4, %copy.5, %copy.5)\n\n- In the subsequent pass RecordAmbiguousOrNonDistinctIndices, to add copies to\nensure point_to set is distinct, the duplicate %copy.5 are ignored because they\nare not yet finalized, and these indices (1 and 2 in the example) are still\nmarked as to-be copied.\n\nTherefore distinctiveness is lost.\n\nThis fix applies to the override building stage, to explicitly avoid creating\nshared copies for non-distinct buffers.\n\nPiperOrigin-RevId: 157872231\n\n---\nCommit f4b8d21b8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange function parameters to references to avoid copying, or otherwise move from function parameters when moving reduces the amount of copying.\n\nPiperOrigin-RevId: 157867333\n\n---\nCommit 3eee61caa authored by Drew Hintz<pushespretn@gmail.com>\nCommitted by GitHub<noreply@github.com>:\nfix quotes in example code from ? to \"\n---\nCommit 4905c0eae authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove TODO - the new tolerance is okay to keep.\n\nPiperOrigin-RevId: 157861020\n\n---\nCommit 55f6b6ff1 authored by David Soergel<soergel@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd explicit SparseTensor support to SignatureDef.\n\nPiperOrigin-RevId: 157860466\n\n---\nCommit 79099d677 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemoves default thresholds from BinaryLogisticHead and adds predict and evaluate tests for DNNClassifier.\n\nPiperOrigin-RevId: 157856471\n\n---\nCommit 54595f0f3 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds the training test for LinearClassifier with n_classes=2.\n\nPiperOrigin-RevId: 157855473\n\n---\nCommit cd6c02985 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd 'streaming_curve_points' metric which returns curve [ROC, PR] approximation at specified number of points.\n\nPiperOrigin-RevId: 157851535\n\n---\nCommit 0f2db7391 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Split union-find implementation in mark_for_compilation_pass.cc into a separate library, make it more generic.\n\nPiperOrigin-RevId: 157850985\n\n---\nCommit d5421cf58 authored by Justin Lebar<jlebar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd additional concat test.\n\nPiperOrigin-RevId: 157844113\n\n---\nCommit f661128db authored by Geoffrey Irving<geoffreyi@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused overloads of SummarizeGraphDef and EqualGraphDef\n\nPiperOrigin-RevId: 157843404\n\n---\nCommit a56d59a84 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet flow to a value during TensorArray creation,\nRe-enable tensor_array_ops_test in msan.\n\nPiperOrigin-RevId: 157841785\n\n---\nCommit edcc5cc13 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd manual test runner for vz_sorting\n\nPiperOrigin-RevId: 157841098\n\n---\nCommit 3f6404f20 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAssign a max height of 800px to images in the image dashboard.\n\nThe user could always expand to actual dimensions if need be.\n\nPiperOrigin-RevId: 157838046\n\n---\nCommit c6ea6972a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove debugging LOG(INFO) from previous change.\n\nPiperOrigin-RevId: 157837305\n\n---\nCommit 07d39f28e authored by freedom\" Koan-Sin Tan<koansin.tan@gmail.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\nmake gcc-5 on Ubuntu 16.04 happy (#10385)\n\ngcc-5 complains of ambiguity and refuses to go when doing something\nlike 'bazel build -c opt tensorflow/...'\n---\nCommit ac66be783 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMinor cleanup: Remove unused BUILD dependencies and unnecessary code.\n\nPiperOrigin-RevId: 157837211\n\n---\nCommit 4161ccc8e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdjust tolerance on dirichlet_multinomial test.\n\nPiperOrigin-RevId: 157834660\n\n---\nCommit 43c0f52f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix off-by-one error in BoolVector(begin, end) constructor.\n\nPiperOrigin-RevId: 157833086\n\n---\nCommit 419d437ba authored by Lakshay Garg<lakshay.garg.1996@gmail.com>\nCommitted by Lakshay Garg<lakshay.garg.1996@gmail.com>:\nFixed typo in code comment\n\n---\nCommit 07710014d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix device colocation for KMeans in case of multiple parameter servers.\n\nPiperOrigin-RevId: 157795360\n\n---\nCommit b659bc39f authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSimplify TensorBoard build\n\n- Remove tensorboard_typescript_genrule\n- Remove tensorboard_typescript_bundle\n- Introduce ts_web_library Skylark rule which supports seamless\n  TypeScript compilation.\n- Use Closure Compiler in semi-advanced mode to compile JavaScript.\n  This is done in a way that preserves <script> tag placement, which\n  causes pages to load faster and avoid FOUC, thereby making it a\n  better solution than the existing vulcanize.\n\nPiperOrigin-RevId: 157794795\n\n---\nCommit 0503ce09c authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nWipe out previous shape inference result when importing a grappler item\nRun graph optimizations last: since they can be expensive it's best to filter invalid items first.\n\nPiperOrigin-RevId: 157792834\n\n---\nCommit 9ae941c4a authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nTurn reductions along an empty set of dimensions into identity nodes.\n\nPiperOrigin-RevId: 157792209\n\n---\nCommit 69075f354 authored by Yangzihao Wang<yangzihao@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd functional support for cudnnConvolutionBiasActivationForward().\n\nPiperOrigin-RevId: 157788425\n\n---\nCommit 7d7a40309 authored by William Chargin<wchargin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExtract the distributions dashboard to a plugin\n\nThis continues the great plugin migration. The distributions plugin was\nsimilar to the histograms plugin, but it also purported to allow CSV\ndownload like the scalars plugin. However, the existing implementation\nof this was flawed, and would always yield a 500 on current prod [1]\n(unless there were actually no data). This indicates that no one is\nactually using it---probably because there isn't a relevant button on\nthe frontend, anyway!---so I just removed it.\n\nThis also changes most frontend occurrences of \"compressedHistograms\"\nto \"distributions\" while we're at it.\n\n[1]: Due to the reference `value.rank_in_bps` in the handler\n`_serve_compressed_histograms`; this field does not exist and throws an\n`AttributeError`.\n\nPiperOrigin-RevId: 157787156\n\n---\nCommit 23cdf96b8 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRe-enable session_test.py\n\nA number of CL's have split up session_test.py to be a bit smaller. As a\nresult, this CL will re-enable the session_test to see if it remains flaky.\n\nPiperOrigin-RevId: 157786407\n\n---\nCommit d741d81c5 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpose tf.test.StubOutForTesting in the tf testing api\n\nAlso redirect TensorBoard usage to use that endpoint.\n\nThis is part of my ongoing effort to have TensorBoard only\ndepend on TensorFlow via its public api, so that it can\nbe split into a project with a fast external build.\n\nPiperOrigin-RevId: 157784552\n\n---\nCommit 40411cd5c authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor projector plugin to only use tf public methods.\n\nRemove all reference to the PluginAsset system, which is deprecated.\n\nPart of an ongoing effort to have TensorBoard only consume the public\nTensorFlow api.\n\nPiperOrigin-RevId: 157784016\n\n---\nCommit a65a70ea5 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix pip tests under contrib/text\n\nPiperOrigin-RevId: 157783952\n\n---\nCommit fb4bc806a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix flakiness in GpuMultiSessionMemoryTest.\n\nPiperOrigin-RevId: 157781368\n\n---\nCommit f7de292df authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate placeholder nodes' shapes in the GraphDef to reflect manually specified values for incomplete placeholder shapes. Previously, these overrides were only specified in the feed nodes, which improves estimates when using dynamic shapes but not when using static shapes. With this change, static shapes also benefit.\n\nPiperOrigin-RevId: 157780800\n\n---\nCommit eebd44123 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a frontend method for retrieving numeric alerts from the debugger plugin.\n\nThis route responds with a list of alerts (occurrences of bad values) in ascending timestamp order.\n\nPiperOrigin-RevId: 157780270\n\n---\nCommit 5bc685d7f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] If an op has a single \"large\" operand, we want to fuse this op into some of its consumers, even if we can't fuse into all of them.\n\nPiperOrigin-RevId: 157779106\n\n---\nCommit 2ee09b873 authored by Mark Heffernan<meheff@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Various improvements to ShapeTree.\nAdd support for holding non-copyable types, operator==, and a\nCopySubtreeFrom method for copying a subtree from one ShapeTree to\nanother.\n\nPiperOrigin-RevId: 157777636\n\n---\nCommit 4f3ae7699 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd beam_search kernels used by BeamSearchDecoder to tensorflow.contrib.\n\nPiperOrigin-RevId: 157775011\n\n---\nCommit 6b16c33b3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake audio-related logic use the audio plugin.\n\nPreviously, fetching audio and related data from TensorBoard used handlers within application.py. We now remove those handlers in favor of routes offered by the audio plugin. ML Dash is updated as well.\n\nPiperOrigin-RevId: 157774953\n\n---\nCommit 8032e1f75 authored by Geoffrey Irving<geoffreyi@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake function instantiation use std::vector<NodeDef> instead of GraphDef\n\nIt's about to turn into std::vector<NodeInfoPtr>; this change gets us partway there.\n\nRELNOTES: n/a\nPiperOrigin-RevId: 157771141\n\n---\nCommit 2e44be35d authored by Vinu Rajashekhar<vinuraja@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds a protected DeleteResourceMgr(...) method in Device.\n\nPiperOrigin-RevId: 157770378\n\n---\nCommit cc346e690 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nStrip the :x suffix when generating control inputs from input names\n\nPiperOrigin-RevId: 157770257\n\n---\nCommit d6fe47af5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse tensorflow::StringPiece in literal_util.\nUse template for RepeatedField assignment.\n\nPiperOrigin-RevId: 157765477\n\n---\nCommit 7866fa01b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nThis change significantly reduces time and resources used to load large TensorFlow graphs.\n\nFor a real-world large graph (13k nodes, 20k edges), this change:\n\n* reduces all heap allocations by 19%\n* reduces retained (final) heap allocations by 2.2%\n* reduces CPU time by 11.2%\n\nIn most TF graphs, the set of unique values set to Node::assigned_device_name() is quite small.  This change adds an interning table to the Graph object, which contains all of the unique values used for Node::set_assigned_device_name(), as well as a look-up table.  This is the main source of the reduction in retained heap memory; nearly all nodes are assigned to just one or two unique devices.\n\nThis change removes the \"string assigned_device_name_\" field from the Node class, and replaces it with \"int assigned_device_name_index_\".  However, because you need both the index and the name table to get the actual value, the Node::assigned_device_name() accessor needs access to the parent Graph.  This requires adding a \"Graph* graph_\" field to the Node class.\n\nIn the future, if all users of this property are converted to use Graph::assigned_device_name(Node*), then the Node::graph_ field can be deleted, and the space reclaimed.  However, doing so is out of the scope of this CL, and even with this new pointer field, the Node class is smaller than it was before, so this is still a net win.\n\nThe placement algorithm in simple_placer.cc is one of the main accessors of the Node::assigned_device_name property.  This CL contains significant changes to simple_placer.cc, which directly take advantage of the fact that the property is an index into a name table, rather than treating it simply as a string.  Many temporary allocations are also removed, which is the main source of the reduction in total heap allocations.\n\nThis CL also contains a few changes that remove short-lived allocations in unrelated code, such as the changes in op.cc/h, costmodel.cc, etc.  It is extremely easy in C++ to accidentally allocate memory, especially when implicit conversions and copy constructors allocate memory.\n\nAll of the changes in this CL were motivated by empirical measurement, using CPU profiling and heap profiling.\n\nPiperOrigin-RevId: 157762909\n\n---\nCommit fdffafbc1 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd QueueDequeueUpTo to the list of dequeue ops\n\nPiperOrigin-RevId: 157760201\n\n---\nCommit 7ad0d0698 authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd type error to start_queue_runners if given session is not a `tf.Session`. Due to semver, we suppress the error if a MonitoredSession is provided.\n\nPiperOrigin-RevId: 157748375\n\n---\nCommit 7106f9fac authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImplemented an initial version of virtual scheduler unit test.\n\nPiperOrigin-RevId: 157746305\n\n---\nCommit b020db0c6 authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nrevert public visibility\n\n---\nCommit 5b05728c2 authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nvisibility workaround 3\n\n---\nCommit 15a740ebb authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate and Move DNNLinearCombinedRegressor to estimator/canned.\n\nPiperOrigin-RevId: 157744087\n\n---\nCommit d29bbeca3 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix outdated code ref in TensorBoard README, add link to SO question.\n\nPiperOrigin-RevId: 157743374\n\n---\nCommit 9fc164225 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix index_table_from_file to allow vocabulary_file be a Tensor\n\nPiperOrigin-RevId: 157740677\n\n---\nCommit 0aa3e0194 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nInternal change\n\nPiperOrigin-RevId: 157740660\n\n---\nCommit 02ac85399 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduce new class Literal to replace protobuf Literal.\n\nThis renames the existing Literal message to LiteralProto and introduces a new\nC++ class named Literal to replace it.\n\nThe LiteralProto is only used at RPC boundaries, or when protobuf-specific\nfunctionality is required.  The Literal class offers a 'ToProto' function to\ngenerate a new LiteralProto message when necessary.\n\nCurrently, all the static functions in class LiteralUtil, just forward to their\ncounterparts in class Literal.  This will change in a future CL.\n\nClass Literal implements all the buffers as std::vectors.  The only exception\nis preds(), which given the std::vector<bool> representation, makes it unusable\nfor the semantics we require (it's not possible to get the address of the\nunderlying vector, for instance).\n\nThe CL adds a BoolVector class to work around that issue.\n\nIn future CLs, the std::vector representation may be changed to something more\nefficient, if needed.\n\nPiperOrigin-RevId: 157739125\n\n---\nCommit 207203253 authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nPython 3.6 support on windows. (#10356)\n\n* Python 3.6 support on windows.\n\n* Fix typo in README.md\n\n* Make environment configurable for windows gpu build.\n\n---\nCommit 2b75a9a6e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 157734029\n\n---\nCommit f60b6bdcb authored by Mustafa Ispir<ispir@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a warning to documentation of MonitoredSession.\n\nPiperOrigin-RevId: 157728225\n\n---\nCommit eb10a4c49 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPreallocate vector storage when the ultimate vector size is known in advance\n\nPiperOrigin-RevId: 157724431\n\n---\nCommit ce32228c4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd release notes for Intel MKL integration.\n\nPiperOrigin-RevId: 157722003\n\n---\nCommit a23255bc0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds missing group OP to benchmark\n\nPiperOrigin-RevId: 157716500\n\n---\nCommit d3e840a6c authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDisable writing of compressed checkpoints.\n\nSnappy compression (and decompression) was enabled after the\n1.1 release (in commit 63b2f999d3f22cfe915b89103faa1b0a1b1b7617).\nThis means that checkpoints produced by the 1.2.0 release candidates\nwill cause TensorFlow 1.1 (and prior) binaries to crash as they\nCHECK fail when trying to load snappy-compressed tables.\n\nTo ease transition, disable writing of compressed checkpoints in\n1.2.0 for now.\n\nReconsider this in the next release.\n\nPiperOrigin-RevId: 157675189\n\n---\nCommit 6db400bbc authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactoring Python op code generation.\n\nPiperOrigin-RevId: 157675126\n\n---\nCommit d9620cab8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd flag to determine whether to do L1 optimizations and inline functions. Default is to do them. In tf_optimizer don't inline or do l1 optimizations.\n\nPiperOrigin-RevId: 157673614\n\n---\nCommit 25bb504cc authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake a plugin that serves data for the audio dashboard.\n\nSubsequent changes will make TensorBoard use this audio plugin instead of the previous handlers for audio-related data.\n\nPiperOrigin-RevId: 157673132\n\n---\nCommit 24623653b authored by James Qin<jamesqin@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix graph text format serialization\n\nPiperOrigin-RevId: 157669530\n\n---\nCommit 3aed1735c authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nvisibility workaround 2\n\n---\nCommit fea90f89d authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nvisibility workaround\n\n---\nCommit 732a6b1ae authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpgrade TypeScript to v2.3.4\n\nPiperOrigin-RevId: 157667511\n\n---\nCommit 95d90ab2e authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Fixes Split op (#10322)\n\n* [OpenCL] Fixes Split op\n\n  Split should alway go through SYCL device\n\n* [OpenCL] Removes half from registred types\n\n---\nCommit 963441400 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Extends softmax op to cover double (#10323)\n\n---\nCommit a702863e8 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Extends tile ops to int16 and int32 (#10328)\n\n* [OpenCL] Extends tile ops to int16 and int32\n\n* [OpenCL] Extends tile_ops to cover bool, uint8, int16, int64\n\n---\nCommit 75385814f authored by cxx<cxxgtxy@gmail.com>\nCommitted by cxx<cxxgtxy@gmail.com>:\nFix comments error in mnist_replica.py where only one ps is used with two works by default.\n\n---\nCommit 23364e2c6 authored by Andrew Harp<andrewharp@google.com>\nCommitted by Andrew Harp<andrewharp@google.com>:\nbuildifier fix\n\n---\nCommit e5088cb82 authored by Yao Zhang<yaozhang@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix discrepancy between measured and analytical cost graph. Use tf_cuda_library for utils.\n\nPiperOrigin-RevId: 157660745\n\n---\nCommit 787381ca5 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSplit up session_test.py -> session_clusterspec_prop_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157658981\n\n---\nCommit b09932d74 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdded PlaceholderWithDefault to the list of known placeholder types\nUse PartialTensorShape instead of TensorShapes to better handle partially known\nshapes\n\nPiperOrigin-RevId: 157657664\n\n---\nCommit 0462416f6 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd make_ndarray, tensor_proto, and MetaGraphDef to tf api.\n\nSince TensorProtos are part of the TensorFlow API, it makes sense\nto also include the methods that generate and parse them.\n\nSimilarly, we write out MetaGraphDef protos in the summary writer,\nso we should provide the proto as well.\n\nThis is part of an ongoing effort to have TensorBoard only consume\nTensorFlow methods through the public api.\n\nPiperOrigin-RevId: 157657564\n\n---\nCommit 458f94c12 authored by Wei Ho<weiho@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nOpen-source skip-gram ops\n\nPiperOrigin-RevId: 157655970\n\n---\nCommit faac0331c authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIntroduce tensorboard_zip_file build rule\n\nThis rule can depend on web_library or tensorboard_html_binary. In\nboth cases it will create a .zip file containing all the transitive\nweb server paths. This can be used to deploy static assets to web\nservers.\n\nA small change was also made to Vulcanize to support path overriding.\n\nPiperOrigin-RevId: 157655047\n\n---\nCommit 7ed44f4c9 authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSplit up session_test.py -> session_partial_run_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157651813\n\n---\nCommit 3c7ac46ae authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Teach Executable to do its own profiling (patch 4/4).\n\nThis CL removes the xla::Service stub for ExecuteOnStreamWrapper so the users call the xla::Executable version directly, and simplifies the function API to simply accept \"arguments\" as a parameter (with a templated type) rather than requiring the user to capture it into a lambda around the relevant Executable::ExecuteOnStream method.\n\nPiperOrigin-RevId: 157651740\n\n---\nCommit 626f95ab9 authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] Don't enforce that all nodes in an encapsulated subgraph are on the same device.\nUse the assigned device rather than the user-requested device when converting a Graph to a FunctionDef.\n\nPiperOrigin-RevId: 157648977\n\n---\nCommit 414470329 authored by Jacques Pienaar<jpienaar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Guard stream pool with mutex.\n\nA data race can occur while populating the map.\n\nPiperOrigin-RevId: 157647183\n\n---\nCommit ccdb30763 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdditional colocation options and bugfixes for TensorArray\n\n* colocate_with is now set properly when a TensorArray is passed through a\n  while_loop\n* added a new argument, \"colocate_with_first_write\" (default: True; this is\n  the current behavior).  If False, the TensorArray is simply placed on the\n  device from the context it's constructed in, and no colocation constraints\n  are added.\n\nPiperOrigin-RevId: 157643133\n\n---\nCommit 03fc7022b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157642677\n\n---\nCommit 41b87d6ce authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd a new attribute narrow_range to FakeQuant* operations.  It quantizes into range [1; 255] instead of [0; 255].\n\nPiperOrigin-RevId: 157641054\n\n---\nCommit c048e2938 authored by Alexandre Passos<apassos@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds support to non-placeholder inputs in _graph_to_function_def.\n\nSpecifically, supports input ops with more than one output tensor.\n\nPiperOrigin-RevId: 157640908\n\n---\nCommit d310de4fa authored by Brennan Saeta<saeta@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSplit up session_test.py -> session_list_devices_test.py\n\nsession_test.py has gotten very large. Additionally, recently it has become\nflaky. In order to both (1) improve overall code health, and (2) to facilitate\nroot-causing the test flakiness, this CL begins to split apart session_test\ninto focused subsets.\n\nI've suffixed the scoping of the session_test in order to preserve filesystem\nsort-order grouping.\n\nPiperOrigin-RevId: 157640788\n\n---\nCommit 8e868cf6a authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused arguments to call_cpp_shape_fn.\n\nPiperOrigin-RevId: 157640125\n\n---\nCommit 9ddbf31fe authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse unnamed namespace to effect internal linkage, replace string constructors with array-deducing helper function\n\nPiperOrigin-RevId: 157636308\n\n---\nCommit 88ffe6276 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIncrease cholesky_op_test to medium, bump shard_count 1 more.\n\nPiperOrigin-RevId: 157635774\n\n---\nCommit bef563dc8 authored by Benjamin Kramer<kramerb@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Don't add constraints for computations we're not currently looking at.\n\nTuplePointsToAnalysis is computed globally per module, so we add all\nunconstrained buffers in that module, even if it's outside of the computation\nwe're currently running on. Then we proceed to propagate default layouts to all\nthose buffers and then throw the constraints away because they don't affect any\ninstruction in the current computation.\n\nPiperOrigin-RevId: 157635564\n\n---\nCommit a980aead8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse test_adjusted_name when making the mangled_test_name in\nrun_and_gather_logs_lib.py, to avoid duplicate file names when the same test is\nrun on multiple GPUs.\n\nPiperOrigin-RevId: 157630193\n\n---\nCommit 0a84cfd58 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157629497\n\n---\nCommit 6882effb8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake single-parameter constructors explicit\n\nPiperOrigin-RevId: 157628970\n\n---\nCommit 0b8070253 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSupport negative axis for Split op\n\nPiperOrigin-RevId: 157628162\n\n---\nCommit 289e7bf5b authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nFixes and improvements to cmake windows build. (#10354)\n\n* Disable linalg ops tests on windows.\n\n* Do not print the full source code path for logs on windows.\n\n---\nCommit bc236cfc3 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPasses classification head to LinearClassifier.\n\nPiperOrigin-RevId: 157624020\n\n---\nCommit cebd7e246 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Shanqing Cai<cais@google.com>:\n[OpenCL] Cleans debug ops (#10334)\n\n* [OpenCL] Cleans debug ops\n\n* Acts on feedback from #10334#discussion_r119452513\n\n* Acts on #10334#discussion_r119459463\n\n---\nCommit fd6c3c4f1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixes flaky test in dnn_linear_combined_test.\n\nPiperOrigin-RevId: 157622951\n\n---\nCommit c9cc388dc authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAvoid CHECKs in BundleReader, propagate errors instead.\n\nMotivation:\nWe'd like to evolve the checkpoint format over time (e.g., enable\ndifferent types of compression). Without this change, a TensorFlow\nversion that encounters a format that it doesn't understand would CHECK fail\nwith an unhelpful error message.\n\nWith this, it propagates a clearer error message up, giving the user some\nhints about what could be wrong.\n\nI don't have a unittest for this - I thought about writing a bundle and\nthen strategically corrupting the bytes on disk before reading it back,\nbut that seems a bit much. The intention of this change is to enable\ngraceful reporting of forward compatibility breakages. Ideas for an\nappropriate unittest are appreciated.\n\nPiperOrigin-RevId: 157620358\n\n---\nCommit ee05b8b69 authored by Wei Ho<weiho@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix to remove TF op usage outside of the initializer fn (due to deferred execution of initializer fn, this prevent issues with graph mismatch).\n\nPiperOrigin-RevId: 157620177\n\n---\nCommit e8d17ea8c authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMaterialize shapes that are known at graph construction time into constants\nthat can be folded\n\nPiperOrigin-RevId: 157619380\n\n---\nCommit dc0427d48 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDirectly depend on the used libraries\n\nDo not rely on transitive dependencies.\n\nPiperOrigin-RevId: 157618184\n\n---\nCommit 964d1a509 authored by Yuan Yu<yuanbyu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix a bug that an erroneous control edge can be introduced when loops are nested in control dependency context.\n\nPiperOrigin-RevId: 157616919\n\n---\nCommit 2de94bbb8 authored by Eli Bendersky<eliben@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Add an option to set the \"generate HLO graph\" regex without a flag.\n\nPipes the option through xla.proto ExecutionOptions, to HloModuleConfig, which\ncan then be accessed throughout the compiler.\n\nPiperOrigin-RevId: 157615458\n\n---\nCommit d3c0482e6 authored by My name is<raviqqe@gmail.com>\nCommitted by gunan<gunan@google.com>:\nFix a typo in export_output.py (#9975)\n\n---\nCommit 0c75d9f52 authored by ddurham2<ddurham@davyandbeth.com>\nCommitted by gunan<gunan@google.com>:\nAdding lost documentation to tf.abs from the old tf.complex_abs when it learned how to work on complex data. (#9954)\n\n---\nCommit 84661fa73 authored by Benoit Steiner<bsteiner@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nPropagate control dependencies during constant folding\n\nPiperOrigin-RevId: 157610040\n\n---\nCommit a3520340e authored by gunan<gunan@google.com>\nCommitted by GitHub<noreply@github.com>:\nImprove windows bazel python test suite. (#10305)\n\n* Improve windows bazel python test suite.\n\n- Create new tags, no_windows and no_windows_gpu\n- Instead of a separate maintained list, use bazel tags to exclude tests.\n- Tag all the python tests that are known to have issues in windows.\n\n* Also blacklist neon_depthwise_conv_ops_test in windows.\n\n* Only build tests in CPU windows tests.\n\n* Only build tests in GPU windows tests.\n\n* Also disable session_test on windows.\n\n* Only run py tests on windows, and only build tests that are not\ndisabled.\n\n---\nCommit a6f284ca4 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds integration tests for LinearRegressor.\n\nPiperOrigin-RevId: 157604107\n\n---\nCommit d21bf7d75 authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBackport changes from Github master.\n\nPiperOrigin-RevId: 157603238\n\n---\nCommit 43bfc138c authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix OSS compilation error in tfprof_main.cc\n\nPiperOrigin-RevId: 157602449\n\n---\nCommit 904a3d075 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFixing issue with cuda compilation related to missing include (exception is only thrown when running with sandboxing on)\n\nPiperOrigin-RevId: 157602401\n\n---\nCommit f59203c98 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nShard cholesky_op_test.\n\nPiperOrigin-RevId: 157601172\n\n---\nCommit 3fdbb5579 authored by Amit Patankar<amitpatankar@google.com>\nCommitted by Amit Patankar<amitpatankar@google.com>:\nMerging rc1 back into master.\n\n---\nCommit be5d98a8b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdds integration tests for DNNClassifier.\n\nPiperOrigin-RevId: 157592010\n\n---\nCommit a05de6cd2 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nChange reporting feature importances in RandomForestEstimator to run at the end of training, instead of part of the inference graph.\n\nPiperOrigin-RevId: 157591575\n\n---\nCommit e96f1142f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unnecessary casts\n\nPiperOrigin-RevId: 157591439\n\n---\nCommit 5f8571a6b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix missing namespace comments\n\nPiperOrigin-RevId: 157591364\n\n---\nCommit eeb0b4067 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 157573997\n\n---\nCommit 7f9674217 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157573723\n\n---\nCommit 473a590c9 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAllow complex valued input for Cholesky decomposition.\n\nPiperOrigin-RevId: 157572536\n\n---\nCommit 2d1860859 authored by Blake Hechtman<blakehechtman@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix test name in array_elementwise_ops_test.\n\nPiperOrigin-RevId: 157552402\n\n---\nCommit a7fff05e0 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntfprof multi-step profiling.\n\nThis allows users to fill in RunMetadata across different steps.\n1. It is useful for RL model which runs a subset of graph each step.\n2. It also gets averages of multi-step stats.\n\nPiperOrigin-RevId: 157552388\n\n---\nCommit fe589d9e7 authored by Luke Iwanski<luke@codeplay.com>\nCommitted by Benoit Steiner<benoitsteiner@users.noreply.github.com>:\n[OpenCL] Implementation improvements (#9117)\n\n* OpenCL Improvements\n\n* Registers Scatter and ScatterNd Ops for SYCL\n\n* Registers Stack op for SYCL\n\n* Fixes No sycl buffer found error for debug ops\n\n* Registers MatMul and Transpose Ops to SYCL device for double\n\n* Extends analyzer_cli_test.py test to cover SYCL\n\n* Fixes Transpose Op for double when on SYCL\n\n* Bumps Eigen version to fix double precision issue on SYCL\n\n* Extends SessionDebugTestBase to cover SYCL\n\n* Register SYCL implementations for random ops\n\n* Avoid functions that might not be defined on SYCL device (#51)\n\n* Avoid functions that might not be defined on SYCL device\n\n* Simplify by using Eigen math functions\n\n* OpenCL improvements\n\n - Bumps Eigen Version\n - Refactors Ops registration\n - Introduces workaround for Const Op related to the difference between\n   CUDA which uses pointers and OpenCL that uses buffers/accessors\n - Extends memory types to cover DEVICE_SYCL as well\n - Introduces  GetSYCLDevice() method that returns list of supported devices\n   with GPU device having the highest priority ( doesn't include blacklisted devices )\n - ::internal::Transpose -> tensorflow::internal::Transpose in order to\n   avoid compilation reported error\n - re-introduces fix for bugged string replacement causing a lot of compilation\n   warnings -c -> --include\n - Adds sycl_runtime to bazels ARRAY_DEPS\n - Replicates TF_CALL_GPU_PROXY_TYPES for SYCL\n\n* [OpenCL] Fixes an issue caused by switch to aligned allocator for sycl buffer (#53)\n\n* [Build] Use gcc/g++ as a host compiler to avoid #8394 (#54)\n\n* [OpenCL] Fixes Scatter Op\n\n* Fix testSimple and testConst in stack_op_test (#3)\n\n* Fix testSimple and testConst in stack_op_test\n\n* Create a specialisation of DoParallelConcatUpdate for SyclDevice and\nregister it\n\n* Guard all code in TENSORFLOW_USE_SYCL\n\n* Do not use sycl device for int32\n\n* Registration of the Sycl version is now looking like the one for the GPU\n\n* Remove added empty line\n\n* Register batch normalization kernels for OpenCL (#61)\n\n* [OpenCL] RandomGamma has no GPU friendly implementation (#57)\n\n* [OpenCL] Compatibility fixes for TensorFlow 1.1.0-rc1\n\n* [OpenCL] Implements BatchMatmul Op for SYCL\n\n* Lowercase the device name when GPU or SYCL returned\n\n* [OpenCL] kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point representation on the device\n\n* [Eigen] Version bump\n\n* GPU device name string manipulation is not needed anymore\n\n* [OpenCL] Adds SYCL to device backwards compatibility\n\n* [OpenCL] Extends core_rnn_test.py to run for SYCL device\n\n* [OpenCL] Minor optimizations for build script\n\n* [OpenCL] Enables skip folder list in build script\n\n* [OpenCL] Fixes ApplyAdamOp for Sycl device\n\n* [OpenCL] SYCL device improvements\n\n* [OpenCL] Fixes debug_ops's SEGFAULT for SYCL device\n\n* [Build] Adds hexagon to skipped folders list\n\n* [OpenCL] Removes EnterLameDuckMode from SYCL device and allocator\n\n* [OpenCL] Registers Unique Op for SYCL device\n\n* [OpenCL][Temporary] Disables tests for SYCL target due to features not being implemented yet\n\n  Tests affected:\n    - tensorflow/contrib/memory_stats/python/kernel_tests/memory_stats_ops_test.py\n    - tensorflow/contrib/rnn/python/kernel_tests/core_rnn_test.py\n    - tensorflow/python/kernel_tests/conv_ops_test.py\n    - tensorflow/python/kernel_tests/depthwise_conv_op_test.py\n    - tensorflow/python/kernel_tests/pooling_ops_3d_test.py\n    - tensorflow/python/kernel_tests/pooling_ops_test.py\n    - tensorflow/python/kernel_tests/scatter_nd_ops_test.py\n    - tensorflow/python/training/adam_test.py\n    - tensorflow/python/training/localhost_cluster_performance_test.py\n    - tensorflow/python/training/training_ops_test.py\n\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\n\n  Tests affected:\n    - tensorflow/python/debug/cli/analyzer_cli_test.py\n    - tensorflow/python/debug/lib/session_debug_testlib.py\n    - tensorflow/python/debug/lib/stepper_test.py\n    - tensorflow/python/kernel_tests/unstack_op_test.py\n    - tensorflow/python/ops/image_ops_test.py\n\n* [OpenCL] Take options.config.device_count() into consideration\n\n* [OpenCL] Fixes compilation warning\n\n* [OpenCL] device:SYCL:0 -> sycl:0\n\n* [OpenCL] Removes unwanted flags in building script\n\nRemoves flags given to computecpp that enable SIMD instructions\nRemoves duplicate flags\n\n* bool -> const bool\n\n* [OpenCL] sycl in test_util.gpu_device_name() -> is_sycl_enabled()\n\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\n\n  Test affected:\n    - tensorflow/contrib/stateless/python/kernel_tests/stateless_random_ops_test.py\n\n* Imports test_util from tensorflow.python.framework\n\n* [OpenCL] Fixes formatting in Python code\n\n* [OpenCL] Extends session_test.py to cover SYCL device\n\n* [OpenCL] Cleans singleton class\n\n* [OpenCL] Keeping CUDA happy\n\n* [OpenCL][Temporary] Disables failing tests for SYCL in order to establish regression baseline\n\n  Test affected:\n   - tensorflow/contrib/rnn/python/kernel_tests/core_rnn_cell_test.py\n   - tensorflow/contrib/seq2seq/python/kernel_tests/beam_search_ops_test.py\n\n* Added support for building with SYCL on ARM.\n\n* Acts on the review feedback from:\n - #9117#discussion_r113608975\n - #9117#discussion_r113609173\n\n* [OpenCL] Fixes scatter_nd_op_test\n\n* Fixes auto-merge mistake\n\n* [OpenCL] struct SyclDevice -> class SyclDevice\n\n* Revert \"[OpenCL] struct SyclDevice -> class SyclDevice\"\n\nThis reverts commit addd43348c374a5379f67bb1e5ad084715722fc2.\n\n* [OpenCL] Reverting refactoring commit.\n\n  As requested in the review #9117#issuecomment-298454466\n  This change set will be re-introduced in smaller chunks.\n\n* Revert \"[OpenCL] device:SYCL:0 -> sycl:0\"\n\nThis reverts commit cf16e60340b62d16c3764d71b716fe03d35f87a9.\n\n* Revert \"[OpenCL] Adds SYCL to device backwards compatibility\"\n\nThis reverts commit b8401b5164199b7a169be1c1d8dea5001195c390.\n\n* Acts on the feedback from #9117#discussion_r115036905\n\n* control_flow_ops_py_test.py expects device name to be lower cased\n\n* Acts on the feedback from #9117#discussion_r115037222\n\n* Removes debug print\n\n* Removes not needed partial specialisation\n\n* [OpenCL] Registers ScatterNdFunctor for SYCL device\n\n* [OpenCL] Make it compile\n\n* [OpenCL] Follow gpu_device changes\n\n* [OpenCL] Adds cxx_builtin_include_directory for python lib\n\n  Fixes bazels missing undeclared inclusions that appeared after\n  merge with TensorFlow upstream\n\n* [OpenCL] Fixes Constant Op\n\n* [OpenCL] gXX-4.8 -> gXX\n\n* [OpenCL] Removes -D_GLIBCXX_USE_CXX11_ABI=0 as it breaks default compiler setup for Ubuntu 16.04\n\n* Revert \"[OpenCL] kernel_estimator_test.py assertEqual-> assertAlmostEqual due to floating point representation on the device\"\n\nThis reverts commit 06c50c0a485f40c30a436f02c3fa7794e370c49d.\n\n* [OpenCL] CPU allocator is a singleton we should not delete it\n\n---\nCommit 7aac2395c authored by Blake Hechtman<blakehechtman@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMerge a copies of copies.\n\nPiperOrigin-RevId: 157549434\n\n---\nCommit 37d9d5f0e authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd some routines for managing summaries to slim.\n\nPiperOrigin-RevId: 157541902\n\n---\nCommit d58cd2962 authored by Justine Tunney<jart@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix weblas license mirror URL\n\nPiperOrigin-RevId: 157537115\n\n---\nCommit 5c13ee13b authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nMake images-related logic use the images plugin.\n\nPreviously, fetching images and related data from TensorBoard used handlers within application.py. We now remove those handlers in favor of routes offered by the images plugin. ML Dash is updated as well.\n\nPiperOrigin-RevId: 157536471\n\n---\nCommit 60394a3d1 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReduce size of the no-winograd tests, but still large enough that\nShouldIncludeWinogradNonfusedAlgo returns true.\n\nPiperOrigin-RevId: 157535386\n\n---\nCommit 9501c4104 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nReplace protobuf CopyFrom with assignment\n\nPiperOrigin-RevId: 157534272\n\n---\nCommit 96698f7fd authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf contrib seq2seq] Improve BeamSearchDecoder's ability to handle unknown shapes.\n\nUpdated unit tests to contain inputs of unknown shape (at graph build time).\nFound an issue in the gather helper that stops it from properly propagating\nthe batch size of the output shape.  This caused problems with tf.while_loop.\nFixed.\n\nPiperOrigin-RevId: 157533937\n\n---\nCommit 5c73d0102 authored by Neal Wu<wun@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBatch norm docs fix applied to _fused_batch_norm as well\n\nPiperOrigin-RevId: 157530527\n\n---\nCommit abd4aa49a authored by Jonathan Hseu<jhseu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix docs for tf.abs() and tf.pow().\n\nPiperOrigin-RevId: 157528475\n\n---\nCommit dd5ad6917 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDeclarations of operators to support batch norm in xla\n\nPiperOrigin-RevId: 157527596\n\n---\nCommit bbeaa1307 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix the expand_dim for label and weight for classifier heads.\n\nPiperOrigin-RevId: 157524909\n\n---\nCommit 346021ab4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nCleanup: Use C++ casts, remove redundant casts, use CHECK_OK\n\nPiperOrigin-RevId: 157522142\n\n---\nCommit e405b0f6b authored by Francois Chollet<fchollet@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactoring of layer name autogeneration, to remove a graph serialization warning.\n\nPiperOrigin-RevId: 157520123\n\n---\nCommit 5784e1e35 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd HasOutputProperties to check for pruned ops; Return\ndevice name instead of casting it to a short name (GPU:0/CPU:0); VLOG(2) when printing op device placement since it is a lot of output.\n\nPiperOrigin-RevId: 157519077\n\n---\nCommit 2994444bf authored by Peter Hawkins<phawkins@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIssue a more user-friendly error message if a variable's initializer is from inside a control-flow scope, such as tf.cond() or tf.while_loop().\n\nFixes #8604.\n\nPiperOrigin-RevId: 157516279\n\n---\nCommit da2daf068 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused using declarations\n\nPiperOrigin-RevId: 157513772\n\n---\nCommit 8b2e8b566 authored by Derek Murray<derek.murray@gmail.com>\nCommitted by gunan<gunan@google.com>:\nExclude Python test files from CMake PIP package. (#10302)\n\n* Exclude *_test.py files from the CMake-built PIP package.\n\n* Add stray _test.py file to the PIP package.\n\n* Nit. Convert tabs to spaces in tf_python.cmake\n\n---\nCommit 2249a4ea8 authored by Dan Ringwalt<ringwalt@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix control reaching the end of ProjectiveGenerator.\n\nPiperOrigin-RevId: 157510013\n\n---\nCommit 040e2e20f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unneeded check for has properties in grappler.\n\nPiperOrigin-RevId: 157507665\n\n---\nCommit 684006955 authored by Yun Peng<pcloudy@google.com>\nCommitted by gunan<gunan@google.com>:\nWindows: Remove session_test from bazel_test_lib.sh (#10274)\n\nIt was disabled in 49b17146d2e4f04192d16ed67574142de167f3a1\n---\nCommit 890a0a407 authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by Gunhan Gulsoy<gunan@google.com>:\nUpgrade TF ci build and docker files to use bazel 0.5.0\n\n---\nCommit 46db634e5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nOnly run the no-winograd tests once each.\nOnly run the no-winograd tests on GPU; this also fixes\ntimeouts in asan and msan.\n\nPiperOrigin-RevId: 157505317\n\n---\nCommit a6cd4e735 authored by Dandelion Man?<dandelion@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove all TB build references that circumvent TF's public API.\n\nThis doesn't actually remove all the code references, lots of code references continue to work despite the BUILD references being removed. I think this is because depending on the public api transitively makes all of TensorFlow's guts available too.\n\nPiperOrigin-RevId: 157502987\n\n---\nCommit dcc3cdce8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove redundant get() calls and string conversions\n\nPiperOrigin-RevId: 157497932\n\n---\nCommit af2b9d875 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix the trace inputs functionality of the graph explorer.\n\nAfter migrating to d3 v4, the graph can no longer directly index into d3.Selections to obtain elements. Instead, we must use the nodes method of d3.Selection to generate an array of selected elements.\n\nPiperOrigin-RevId: 157493509\n\n---\nCommit 5cf484584 authored by Jacques Pienaar<jpienaar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Small test that performs A*B+A and A*B+B.\n\nPiperOrigin-RevId: 157492992\n\n---\nCommit b2355913b authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nremove some invalid entries (#10294)\n\nI noticed that some entries don't exist (anymore).\nThis seems to be some kind of a consistency issue.\n\nMore specifically:\n`tensorflow/contrib/ios_examples/camera/data`\n`tensorflow/contrib/session_bundle/testdata/saved_model_half_plus_two`\n`tensorflow/contrib/session_bundle/testdata/saved_model_half_plus_two/variables`\n\nThis is the continuation of PR #10264\n---\nCommit 367ec84f8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd SampleEmbeddingHelper to do sampling at inference time\n\nPiperOrigin-RevId: 157487623\n\n---\nCommit a3ba225d5 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd BatchMatMul execution cost prediction\n\nPiperOrigin-RevId: 157487507\n\n---\nCommit 34a29fc3b authored by Eric Liu<ioeric@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[TF:XLA] preserve metadata when replacing HLO instructions.\n\nThe motivation is to add metadata for HLO instructions that are created to replace existing HLO instructions during optimizations. The assumption is that the old instruction and the new instruction would perform the same function, and that they would be correlated to the same TF op. This might not always be correct since HLO optimizations can cross TF op boundaries. But still this seems to be better than nothing.\n\nNote that this still doesn't fully resolve missing OpMetadata after HLO optimizations; new instructions might be added without using ReplaceInstruction.\n\nPiperOrigin-RevId: 157484394\n\n---\nCommit 092a7b6e6 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDisable keras lstm test in tsan.\n\nPiperOrigin-RevId: 157484268\n\n---\nCommit 7280dafca authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse \"empty\" member function to test for emptiness\n\nPiperOrigin-RevId: 157483181\n\n---\nCommit 6c3b15915 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nExpands integration tests in dnn_test.\n\nPiperOrigin-RevId: 157476608\n\n---\nCommit 727193b1f authored by Androbin<robin.richtsfeld@gmail.com>\nCommitted by drpngx<drpngx@users.noreply.github.com>:\nadd missing import for `signal` package (#10264)\n\n* add missing import for `signal` package\n\n* add missing dependency for `signal` package\n\n* Update tf_python.cmake\n\n---\nCommit 21461213d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused BUILD dependencies\n\nPiperOrigin-RevId: 157473460\n\n---\nCommit 4788ca2be authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix handling of Infinity/NaN in line chart domain\n\nTest Plan:\n  - Use the script listed below to generate data that has enough\n    infinities for these values to not be treated as outliers.\n  - Load the data into TensorBoard (`--logdir /tmp/infbug`) and look at\n    the scalars plot; also look at the console.\n  - Before this change, the chart is completely blank, and there is a\n    console warning: \"QuantitativeScales cannot take NaN or Infinity as\n    a domain value. Ignoring.\"\n  - After this change, there is no console output, and the chart appears\n    as intended: a reasonable domain is shown, and the infinities just\n    shoot off the chart.\n\nGenerating script:\n```py\nimport tensorflow as tf\n\nLOGDIR = '/tmp/infbug'\nSTEPS = 134\n\ndef main():\n  x = tf.Variable(3.1415)\n  y = x.assign_add(x)\n  tf.summary.scalar('y', y)\n  summ = tf.summary.merge_all()\n\n  sess = tf.Session()\n  writer = tf.summary.FileWriter(LOGDIR)\n  writer.add_graph(sess.graph)\n  sess.run(tf.global_variables_initializer())\n  for step in xrange(STEPS):\n    writer.add_summary(sess.run(summ), step)\n  writer.close()\n\nif __name__ == '__main__':\n  main()\n```\n\nPiperOrigin-RevId: 157472340\n\n---\nCommit 49476a62c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRemove unused namespace aliases\n\nPiperOrigin-RevId: 157468609\n\n---\nCommit d83074847 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUse \"nullptr\" for null pointer values\n\nPiperOrigin-RevId: 157468186\n\n---\nCommit b73fea6e2 authored by Tim Harley<tharley@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nRefactor `tf.Operation.traceback` implementation in to methods of tf.Graph.\n\nAdds an `_extract_frame_info` method to allow derived classes to extend the\ninformation available in each op traceback, if desired. The default result of\n`tf.Operation.traceback` is unchanged.\n\nAlso fixes a poorly scoped `pylint disable=line-too-long`, so adds the necessary\nenable/disable blocks to silence pylint for the offending docstrings.\n\nPiperOrigin-RevId: 157466174\n\n---\nCommit f7ca8db7d authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[XLA] Improve shape inference error messages for DynamicSlice/DynamicUpdateSlice.\n\nPiperOrigin-RevId: 157461335\n\n---\nCommit 8c2a079ec authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdding a slot / accumulator warmstart initializer that overrides the provided partitioner at call time with one passed at construction time.  This is intended to be used for slot Variables (such as accumulators) associated with Optimizers, since these Variables are created in a fashion that relies on replicating the exact shape of the associated primary variables (see slot_creator).\n\nPiperOrigin-RevId: 157453498\n\n---\nCommit 73d10599f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nDefault CUDNN_HOME to CUDA_TOOLKIT_TARGET_DIR. The cuDNN distro is most naturally installed in the same directory as the CUDA SDK, so try to find it there if the user doesn't specify any other directory.\n\nPiperOrigin-RevId: 157436253\n\n---\nCommit eb7cf9331 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 157429266\n\n---\nCommit 346dcc0a4 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157429078\n\n---\nCommit 3d5ede131 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate documentation for sparse_matmul op to reflect gradient calculation.\n\nPiperOrigin-RevId: 157428135\n\n---\nCommit 822d64f0c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix embedding_lookup() bug where normalization did not work with ids of rank != 1.\n\nPiperOrigin-RevId: 157422220\n\n---\nCommit 8cad6b824 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nImprove the error message for live set memory check.\n\nPiperOrigin-RevId: 157415647\n\n---\nCommit 34dcd5b49 authored by Eugene Brevdo<ebrevdo@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\n[tf contrib seq2seq] Bugfixes to BeamSearchDecoder\n\nImplementation by Cinjon Resnick.  He can't push this since he's traveling.\nI just copied the fix and added some small syntax tweaks to make the unit\ntests pass.  More comprehensive unit tests will come in the near future.\n\nFixes at least part of #9904.\n\nBeamSearchDecoder:\n1. Fix the bug where we don't pass the next cell state through.\n2. Gather the cell state (and attention if that's a part of the model\n   as an AttentionWrapper on the cell) according to the next_beam_ids.\nPiperOrigin-RevId: 157415564\n\n---\nCommit f7ae1461c authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix oversampling in the GPU version of multinomial due to an error in generating\ngumbel noise.  -log(-log(U)) gives infinity if U draws a hard 0.  Adds a tiny\noffset to U (2e-30) to avoid log(U) = -inf.\n\nThe CPU sampling algorithm depends on the order of the logits which is\nundesirable and can also oversample the first logit if it is smaller than the\nsmallest random float larger than 0 (~1e-7).  Switching to double precision\ninternally mitigates these problems, although it doesn't fix them.  Slowdown\nis ~35% in the worst case.\n\nAlso adds various tests that we would like the sampling to pass.\n\nCPU Benchmark before:\n\n32 10000 1 0.060 0.069 0.87\n32 10000 4 0.229 0.074 3.10\n32 10000 32 2.180 0.059 37.09\n32 100000 1 0.430 0.480 0.90\n32 100000 4 2.322 0.449 5.17\n32 100000 32 31.508 0.471 66.96\n128 10000 1 0.168 0.235 0.71\n128 10000 4 0.965 0.246 3.93\n128 10000 32 7.989 0.225 35.51\n128 100000 1 1.681 1.539 1.09\n128 100000 4 9.012 1.57 35.73\n128 100000 32 126.222 1.626 77.60\n\nCPU Benchmark after:\n\n32 10000 1 0.054 0.112 0.48\n32 10000 4 0.206 0.093 2.21\n32 10000 32 1.826 0.091 20.12\n32 100000 1 0.292 0.636 0.46\n32 100000 4 2.086 0.606 3.44\n32 100000 32 28.496 0.633 45.03\n128 10000 1 0.125 0.266 0.47\n128 10000 4 0.759 0.258 2.94\n128 10000 32 7.362 0.254 29.03\n128 100000 1 1.550 2.18 10.71\n128 100000 4 8.712 2.22 23.92\n128 100000 32 122.585 2.213 55.39\n\nPiperOrigin-RevId: 157414849\n\n---\nCommit 62cf561f1 authored by Jianwei Xie<xiejw@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd numpy_input_fn integration for LinearRegressor and fix the expand_dim for label and weight.\n\nPiperOrigin-RevId: 157405237\n\n---\nCommit 40c7e0dd7 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nGo: Update generated wrapper functions for TensorFlow ops.\n\nPiperOrigin-RevId: 157402364\n\n---\nCommit 2726c00ce authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157402063\n\n---\nCommit e9d2fba8f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix comment describing ignore_longer_outputs_than_inputs.\n\nPiperOrigin-RevId: 157400110\n\n---\nCommit 5f097217f authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAn initial step of eliminating all implicit broadcast at the HLO level.\nGuard the shape inference for binary ops behind a flag.\n\nPiperOrigin-RevId: 157373647\n\n---\nCommit e78e5ec8a authored by Yangzihao Wang<yangzihao@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nSet winograd nofused flag to be true by default.\n\nDisable winograd nonfused conv for certain input params to avoid a known bug in cuDNNv5 and cuDNNv6.\n\nPiperOrigin-RevId: 157352847\n\n---\nCommit 3f9b69a50 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nIn the CUDA path of depthwise_conv2d, add a fast variant for forward convolution when the input images are smaller than 16x16.\n\nPiperOrigin-RevId: 157347823\n\n---\nCommit 848123e61 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix incorrect condition to instantiate depthwise_ops introduced in commit 15d9f00fa. The change should have excluded depthwise_conv2d for doubles on windows debug builds, but it excluded it for all windows and all debug builds.\n\nPiperOrigin-RevId: 157345929\n\n---\nCommit 060d67b34 authored by Taehoon Lee<taehoonlee@snu.ac.kr>\nCommitted by Taehoon Lee<taehoonlee@snu.ac.kr>:\nFix typos\n\n---\nCommit 409419bcc authored by Mark Daoust<markdaoust@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nadd closing code quotes\n\nPiperOrigin-RevId: 157339360\n\n---\nCommit d20d0a623 authored by Jonathan Hseu<jhseu@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nFix the contrib estimator_test by updating the global step in all the appropriate spots.\n\nPiperOrigin-RevId: 157328239\n\n---\nCommit d1144d3a9 authored by Juang, Yi-Lin<b02901026@ntu.edu.tw>\nCommitted by Juang, Yi-Lin<b02901026@ntu.edu.tw>:\nFix typos\n\n---\nCommit fa8bb43b1 authored by lanhin<lanhin1@gmail.com>\nCommitted by lanhin<lanhin1@gmail.com>:\nFixed a comment typo in GraphView:InitializeNode(), executor.cc.\n\n---\nCommit 9f13ae93f authored by Asim Shankar<ashankar@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nJava: Update Maven release to 1.2.0-rc1\n\nPiperOrigin-RevId: 157294719\n\n---\nCommit c8256769c authored by Gunhan Gulsoy<gunan@google.com>\nCommitted by Gunhan Gulsoy<gunan@google.com>:\nAddress comments and sanity check failures.\n\n---\nCommit 344225a60 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nUpdate ops-related pbtxt files.\n\nPiperOrigin-RevId: 157292254\n\n---\nCommit eb2f6d041 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nVLOG(2) instead of VLOG(1) for detailed op printouts.\n\nPiperOrigin-RevId: 157291238\n\n---\nCommit b4466279a authored by Shanqing Cai<cais@google.com>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\ntfdbg: add runtime shape and dtype info to DebugNumericSummary\n\nPiperOrigin-RevId: 157291215\n\n---\nCommit 4fb2425f8 authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nAdd GraphOptimizer to Grappler item builder to do L1 optimizations and\ninlining.\n\nOp Counts Comparison (BNMT)\nCounts: Profile vs Grappler\nOp: Add, 968 vs 965\nOp: AddN, 2228 vs 2228\nOp: ApplyGradientDescent, 84 vs 84\nOp: BatchMatMul, 998 vs 998\nOp: Identity, 142 vs 105\nOp: MatMul, 63 vs 63\nOp: Mul, 10318 vs 10306\nOp: OneHot, 1 vs 1\nOp: Reshape, 8421 vs 8422\nOp: Select, 488 vs 488\nOp: Shape, 8132 vs 8131\nOp: Sigmoid, 942 vs 942\nOp: Softmax, 19 vs 19\nOp: StridedSlice, 58 vs 74\nOp: Sub, 1398 vs 1394\nOp: Tanh, 333 vs 333\nOp: Tile, 21 vs 21\nOp: Transpose, 39 vs 39\nPiperOrigin-RevId: 157288420\n\n---\nCommit 8918fa9ef authored by A. Unique TensorFlower<gardener@tensorflow.org>\nCommitted by TensorFlower Gardener<gardener@tensorflow.org>:\nBEGIN_PUBLIC\nAutomated g4 rollback of changelist 157272843\n\nPiperOrigin-RevId: 158534336\n", "change_type": "removed", "type": ""}, {"name": "protobuf", "commit_message": "Update all protobuf versions\n", "change_type": "updated", "type": ""}, {"name": "backports.weakref", "commit_message": "Merge pull request #11174 from mdeff/backports-weakref\n\nOnly use weakref.finalize from backports in Python < 3.4", "change_type": "removed", "type": ""}, {"name": "protobuf", "commit_message": "Bump the required protobuf version (#11728)\n\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Bump the required protobuf version (#11728)\n\n", "change_type": "updated", "type": ""}, {"name": "tensorflow-tensorboard", "commit_message": "Pin tensorflow to tensorflow-tensorboard 0.1.x\n\nThis change will be cherry-picked into the 1.3.0 release.\n\nPiperOrigin-RevId: 163742463\n", "change_type": "updated", "type": ""}, {"name": "autograd", "commit_message": "Add dependency on autograd.\n\nPiperOrigin-RevId: 164494301\n", "change_type": "added", "type": ""}, {"name": "tensorflow", "commit_message": "[OpenCL] Fixes linking issue\n\nc13cb2e5777852c6a498410669b24ac346114eba introduced linking issue that caused\n\nlogging.cc:(.text+0xa64): undefined reference to\n`tensorflow::StringPiece::Hasher::operator()(tensorflow::StringPiece) const'\n", "change_type": "added", "type": ""}, {"name": "numpy", "commit_message": "Update requirement for numpy.\n\nAutograd requires numpy >= 1.12.1. If numpy 1.11.0 is already installed on the system, pip will not upgrade numpy when installing tensorflow. Fix #12185", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Merge pull request #12272 from tensorflow/yifeif-patch-1\n\nUpdate requirement for numpy.", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Padding queue support for tf.estimator generator input pipeline (#10732)\n\n* add padding queues support for tf.estimator generator input pipeline\r\n\r\n* simplified version\r\n\r\n* now with six zip\r\n\r\n* add first docs and test\r\n\r\n* typos and code style fix\r\n\r\n* updated test: bug found\r\n\r\n* now with specified padding value\r\n\r\n* non numberic tests added\r\n\r\n* pylint\r\n\r\n* typo&!\r\n\r\n* still hate typos\r\n\r\n* additional exceptions\r\n\r\n* indentation fix\r\n\r\n* generator io updated for new feeding functions\r\n\r\n* test updated, numpy corrected\r\n\r\n* numpy error fix 2\r\n", "change_type": "updated", "type": ""}, {"name": "enum34", "commit_message": "Declare enum34 as dependency of pip package\n\nenum34 is a small package, with a size of 12 kB.\n\nPiperOrigin-RevId: 165949993\n", "change_type": "added", "type": ""}, {"name": "autograd", "commit_message": "Remove dependency on autograd from tf.\n\nPiperOrigin-RevId: 168707063\n", "change_type": "removed", "type": ""}, {"name": "protobuf", "commit_message": "Branch 172647355 (#13819)\n\n* Update inception score to match the openAI version from https://github.com/openai/improved-gan/tree/master/inception_score.\r\n\r\nPiperOrigin-RevId: 172562573\r\n\r\n* Stub support for retrieving LossFunction by name.\r\n\r\nPiperOrigin-RevId: 172588516\r\n\r\n* Don't emit fusion computations separately in HloModule::ToString. These computations are emitted with their fusion instruction and therefore don't need to be emitted as a separate comptutation in the module.\r\n\r\nPiperOrigin-RevId: 172612725\r\n\r\n* Make `tf.contrib.distributions` quadrature family parameterized by\r\n`quadrature_grid_and_prob` vs `quadrature_degree`. Enables support of\r\nquadrature methods other than Gauss-Hermite.\r\n\r\nPiperOrigin-RevId: 172622919\r\n\r\n* Fixes test breakage.\r\n\r\nPiperOrigin-RevId: 172626499\r\n\r\n* Remove global step read dependency from model_fn. Estimator behavior still will be deterministic since the step checking logic in session_run_hooks was changed as follows:\r\n* assume stale step\r\n* before using the step, check for the current value by session.run\r\n\r\nPiperOrigin-RevId: 172629797\r\n\r\n* More changs to avoid flakes in random_shuffle_queue_test\r\n\r\nPiperOrigin-RevId: 172630989\r\n\r\n* Add expected keys to predictor exception if unexpected key detected.\r\n\r\nPiperOrigin-RevId: 172634275\r\n\r\n* Add TF_GraphGetOpDef() to C API and use in Operation.op_def()\r\n\r\nNote that this creates a small change in behavior with the C API\r\nenabled, since previously not all Python Operations had an OpDef\r\n(op_def() returns None). With the C API enabled, op_def() always\r\nreturns an OpDef.\r\n\r\nPiperOrigin-RevId: 172634411\r\n\r\n* Implement ZlibInputStream::Tell() by keeping track of the number of bytes\r\nconsumed by the reader.\r\n\r\nPiperOrigin-RevId: 172634455\r\n\r\n* Upgrade tensorflow pip dependency version to 3.4.0+\r\n\r\nPiperOrigin-RevId: 172635727\r\n\r\n* [XLA] Deterministically dump an executable.\r\n\r\nPreviously, dumping a executable is nondeterministic as a map in protobuf is serialized in random order.\r\n\r\nThis CL enables \"Deterministic dump\" mode of protobuf, which sorts the map first before dumping them. This is helpful in comparing if two dumps are the same in XLA determinism test.\r\n\r\nPiperOrigin-RevId: 172637100\r\n\r\n* Fixed work size computation in Split and SplitV ops to avoid integer overflow.\r\n\r\nPiperOrigin-RevId: 172637818\r\n\r\n* Internal change.\r\n\r\nPiperOrigin-RevId: 172641543\r\n\r\n* Bug fixes for fold_constants_lib.\r\n\r\n1. Tensor names in TF may be in the form of \"a:0\", \"a:1\", or \"a\" as a shorthand\r\nnotation of \"a:0\". FoldConstant library always expected the shorthand notation,\r\nand did not handle the cases where explicit notation was passed to input or\r\noutput list. This means that this library could not handle the case when input\r\nor output were not the first output of a node.\r\n\r\n2. To match the input nodes in the original graph and the added Recv nodes in\r\nrewritten graph, FoldConstant library used prefix matching. Unfortunately, this\r\nmeans that when a input name is a prefix of another input name, there is\r\npossibility that wrong Recv node gets matched. For example, if input names were\r\n\"placeholder\" and \"placeholder_1\", then it did not handle the case very well.\r\n\r\n3. RemoveUnusedNodes() in FoldConstants lib could remove nodes which output\r\ndepended on. This happened when an input name points to a node with multiple\r\noutputs and not all outputs of that node were included in the input names.\r\n\r\n4. ReplaceSendRecvs() in FoldConstants lib assumed that all input nodes are\r\nremoved during rewriting the graph. This assumption is not necessarily true,\r\nand it could add a duplicate node in the graph.\r\n\r\nPiperOrigin-RevId: 172641947\r\n\r\n* Adds visibility to sgdr_learning_rate_decay.\r\n\r\nCurrently SGD with warm restarts is siloed in\r\ntensorflow/contrib/training/python/training/sgdr_learning_rate_decay.py, since\r\nit is not listed in the 'training_py' build filegroup. This change simply adds\r\nsgdr_learning_rate_decay to this filegroup so that other projects can use warm\r\nrestarts during optimization.\r\n\r\nPiperOrigin-RevId: 172643218\r\n\r\n* Add logging verbosity to mnist.py\r\n\r\nPiperOrigin-RevId: 172643922\r\n\r\n* Automated g4 rollback of changelist 172336111\r\n\r\nPiperOrigin-RevId: 172645893\r\n\r\n* Correct the docstring to reflect that the values of cols_to_vars are always lists of Variable's (never single Variable's or PartitionedVariables), and make this true for bias.\r\n\r\nPiperOrigin-RevId: 172646456\r\n\r\n* Changes MultiLabelHead.create_loss to return a Tensor of size [batch_size, 1], to be consistent with other heads.\r\n\r\nPiperOrigin-RevId: 172647355\r\n\r\n* Disabling failing contrib tests.\r\n", "change_type": "updated", "type": ""}, {"name": "enum34", "commit_message": "Only install enum34 on Python <3.4 versions\n\nPython 3.6 sometimes has issues with enum34 because the standard library\nrelies on enum features not in enum34 (see\nhttps://bitbucket.org/stoneleaf/enum34/issues/19/enum34-isnt-compatible-with-python-36\nfor more details).\n", "change_type": "removed", "type": ""}, {"name": "enum34", "commit_message": "Only install enum34 on Python <3.4 versions (#15042)\n\nPython 3.6 sometimes has issues with enum34 because the standard library\r\nrelies on enum features not in enum34 (see\r\nhttps://bitbucket.org/stoneleaf/enum34/issues/19/enum34-isnt-compatible-with-python-36\r\nfor more details).", "change_type": "removed", "type": ""}, {"name": "absl-py", "commit_message": "Only parse known flags in tf.app.run().\n\nThis requires absl-py 0.1.6.\n\nAlso remove the manual tag on //tensorflow/python:app_test.\n\nPiperOrigin-RevId: 177986813\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "Add dependency on gast.\n\nPiperOrigin-RevId: 180354109\n", "change_type": "added", "type": ""}, {"name": "astor", "commit_message": "Additional dependencies: astor and termcolor\n\nPiperOrigin-RevId: 180580013\n", "change_type": "added", "type": ""}, {"name": "termcolor", "commit_message": "Additional dependencies: astor and termcolor\n\nPiperOrigin-RevId: 180580013\n", "change_type": "added", "type": ""}, {"name": "tensorflow", "commit_message": "Fix a bug that capture_tpu_profile only takes absolute logdir path. (#16337)\n\nAlso removed package dependancy on tensorflow for better compatibility.", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'master' of https://github.com/tensorflow/tensorflow into trt_dev\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'master' of https://github.com/tensorflow/tensorflow\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'master' of https://github.com/tensorflow/tensorflow\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge remote-tracking branch 'tensorflow/master'\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "import tensorflow as tf (#16318)\n\n* import tensorflow as tf\r\n\r\n* import tensorflow as tf\r\n\r\n* from contextlib import contextmanager\r\n\r\n* remove the last remaining change to py2tf\r\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'master' of https://github.com/tensorflow/tensorflow\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Switch over to max_pool_v2 in Python (#14983)\n\n* Switch over to max_pool_v2 in Python\r\n\r\nThis fix is a follow up to 11875 so that MaxPool in Python\r\nuse v2 version. As 11875 has been merged some time ago,\r\nthis fix conforms to the deprecation policy.\r\n\r\nThis fix is realted to 11875 and 4746.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update test cases in contrib/specs/python/specs_test due to MaxPool -> MaxPoolV2\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update tensorflow/contrib/receptive_field\r\n\r\nUpdate tensorflow/contrib/receptive_field\r\ndue to max_pool's strides and ksize from  attr -> input\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Remove const restriction for strides and ksize\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Register MaxPoolV2 with XLA\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Reformat with clang-format -i --style=Google\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Add KafkaReader for processing streaming data with Apache Kafka (#14098)\n\n* Add KafkaReader for processing streaming data with Apache Kafka\r\n\r\nApache Kafka is a widely used distributed streaming platform in\r\nopen source community. The goal of this fix is to create a contrib\r\nReader ops (inherits ReaderBase and is similiar to\r\nTextLineReader/TFRecordReader) so that it is possible to reader\r\nKafka streaming data from TensorFlow in a similiar fashion.\r\n\r\nThis fix uses a C/C++ Apache Kafka client library librdkafka which\r\nis released under the 2-clause BSD license, and is widely used in\r\na number of Kafka bindings such as Go, Python, C#/.Net, etc.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add KafkaReader Python wrapper.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add BUILD file and op registration for KafkaReader.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add C++ Kernel for KafkaReader\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add librdkafka to third_party packages in Bazel\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add contrib/kafka to part of the contrib bazel file.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Update workspace.bzl\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Comment out clean_deps of `tensorflow/core:framework` and `tensorflow/core:lib`\r\n\r\nso that it is possible to build with ReaderBase.\r\n\r\nSee 1419 for details.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add group id flag.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Sync offset\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add test cases and scipt to start and stop Kafka server (with docker)\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Convert to KafkaConsumer from the legacy Consumer with librdkafka\r\n\r\nso that thread join does not hang.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Only output offset as the key.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add timeout attr so that Kafka Consumer could use\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Build Kafka kernels by default, so that to get around the linkage issue.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Convert KafkaReader to KafkaDataset.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Fix workspace.bzl for kafka with tf_http_archive\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Add public visibility\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Address review feedbacks\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n\r\n* Optionally select Kafka support through ./configure\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\r\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Branch 183429339 (#16469)\n\n* Change `reduce_logsumexp` to internally use `reshape` rather than `squeeze`\r\nsince the latter requires the `axis` arg to be a Python `list`.\r\n\r\nPiperOrigin-RevId: 183396533\r\n\r\n* Kernel utils to support broadcast add and mul.\r\n\r\nPiperOrigin-RevId: 183397494\r\n\r\n* Updating sparsify_gather.\r\n\r\nPiperOrigin-RevId: 183402917\r\n\r\n* [tf.data] Move slow-path-related code into the slow path in IteratorHandleOp::Compute().\r\n\r\nThis slightly reduces the amount of work performed when an iterator is accessed (after the first access), and potentially reduces contention if concurrent steps are accessing the same iterator.\r\n\r\nPiperOrigin-RevId: 183406221\r\n\r\n* Cleanup: Ran clang-format on all *.{cc,h} in under grappler.\r\n\r\nPiperOrigin-RevId: 183406440\r\n\r\n* Increase shard count of //third_party/tensorflow/python:nn_batchnorm_test to avoid timeouts\r\n\r\nWhen run under asan, the test runs for about 5 minutes, and sometimes\r\nlonger, causing frequent timeouts.\r\n\r\nThis change increases the shard count of the test to 4, which brings the run time\r\nof the longest running shard under asan to about 2 minutes.\r\n\r\nPiperOrigin-RevId: 183414888\r\n\r\n* Add available choices to toco flags and fix minor formatting issues.\r\n\r\nPiperOrigin-RevId: 183415713\r\n\r\n* Performance improvements to some GPU code to use shared locks instead of unique locks for some hotspot cases.\r\n\r\nPiperOrigin-RevId: 183418559\r\n\r\n* [XLA] Improve error message for bad slices.\r\n\r\nPiperOrigin-RevId: 183420038\r\n\r\n* Fix py3 build rules for all py tests under py2tf.\r\n\r\nPiperOrigin-RevId: 183422144\r\n\r\n* Fix bug with Operation._control_inputs setter.\r\n\r\nPiperOrigin-RevId: 183422192\r\n\r\n* Make softmax_op_test.py work with C API enabled.\r\n\r\nPiperOrigin-RevId: 183422829\r\n\r\n* Cleanup: Ran clang-format on all *.{cc,h} files in tensorflow/core/kernels.\r\n\r\nPiperOrigin-RevId: 183423961\r\n\r\n* Fix the documentation for the dense layer for how rank > 2 inputs are handled.\r\n\r\nPiperOrigin-RevId: 183425868\r\n\r\n* Cleanup: Ran clang-format on all *.{cc,h} in tensorflow/core/ops.\r\n\r\nPiperOrigin-RevId: 183429339\r\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Fix build error with GCC 7.2.1 on AWS Linux 2 (#16470)\n\nThis fix fixes a build failure when compiling with\r\nGCC 7.2.1 on AWS Linux 2:\r\n```\r\ngcc version 7.2.1 20170915 (Red Hat 7.2.1-2) (GCC)\r\n```\r\n\r\nThe eror output was:\r\n```\r\n...\r\n./tensorflow/contrib/lite/toco/model.h:1567:25: error: 'std::function' has not been declared\r\n   void EraseArrays(std::function<bool(const string&)> discardable) {\r\n  .....\r\n```\r\n\r\nThis fix is related to 16046.\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'master' of https://github.com/tensorflow/tensorflow\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "tensorflow can be used by cmake find_package function\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Add nsync lib dep. to cc_library rule android_tensorflow_lib_selective_registration (#16117)\n\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Fix build (part1):\n1. Changed includes of \"NvInfer.h\" to \"tensorrt/include/NvInfer.h\"\n2. Remove build target \"tensorrt_ops.so\" (src file doesn't exist and the\n   target is not used anywhere)\n3. Add missing '#if GOOGLE_TENSORRT's\n4. Use tf_cuda_library instead of cc_library for some targets to get the\n   tf_copts naturally.\n5. Revert the changes that was accidentally made (by merging with\n   upstream head) from configure.py\n6. Replace exception with LOG(FATAL) in\n   tensorflow/contrib/tensorrt/convert/convert_nodes.cc as exception is\n   not supported.\n7. Revert the reinterprete_cast change in\n   tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc\n8. Fix minor formatting and naming issues according to the style guide.\n", "change_type": "removed", "type": ""}, {"name": "protobuf", "commit_message": "grpc build according to protobuf version\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "[COMMENT]\n  trt_engine_op compute\n    comment on the scope of pointer arrays for i/o binding\n    tensorflow/contrib/tensorrt/kernels/trt_engine_op.cc\n", "change_type": "removed", "type": ""}, {"name": "grpcio", "commit_message": "Add grpcio as a pip dependency of tensorflow\n\nPiperOrigin-RevId: 184052073\n", "change_type": "added", "type": ""}, {"name": "tensorflow", "commit_message": "Change RELEASE.md to specify CUDA 9.0 (#16486)\n\nPR for https://github.com/tensorflow/tensorflow/issues/16348 (tinyest PR ever?)", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge pull request #16704 from tensorflow/yifeif-patch-1\n\nRemove all_files rule from com_google_absl.BUILD", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge pull request #16708 from tensorflow/yifeif-patch-3\n\nFix sanity", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge remote-tracking branch 'tensorflow/master'\n", "change_type": "removed", "type": ""}, {"name": "numpy", "commit_message": "Bump the required numpy version in r1.6\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Merge pull request #16783 from jhseu/numpy_version\n\nBump the required numpy version to 1.13.3 in r1.6", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Merge remote-tracking branch 'tensorflow/master'\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "1. Use tensorflow::string instead of std::string\n2. Fix swig problem in trt_conversion.i\n3. Fix c++ styles\n4. Fix BUILD dependencies\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge pull request #1 from tensorflow/master\n\nmerge from master", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "[update]\n  fix naming stuff in tensorflow/contrib/tensorrt/convert/convert_nodes.cc\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "[tf.data] Move C++ code backing `tf.contrib.data.ignore_errors()` to contrib.\n\nThis change moves the `OpKernel` and `DatasetBase` implementations to\n\"tensorflow/contrib/data/kernels\", where they are packaged as a custom\nop library. This demonstrates (and enforces by continuous integration)\nthe ability to build a C++ Dataset implementation in a custom op\nlibrary.\n\nOther contrib Dataset implementations will move in subsequent changes.\n\nPiperOrigin-RevId: 184938885\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Fix broken link in CONTRIBUTING.md (#16869)\n\nThis fix fixes the broken link in CONTRIBUTING.md.\r\nWithout `https://`, the markdown will render the link incorrectly to\r\nhttps://github.com/tensorflow/tensorflow/blob/master/www.docker.com\r\n\r\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "[tf.data] Remove deprecated reader dataset classes in `tf.contrib.data`.\n\nThis change removes the following classes:\n* `tf.contrib.data.FixedLengthRecordDataset`\n* `tf.contrib.data.TextLineDataset`\n* `tf.contrib.data.TFRecordDataset`\n\nIF THIS BREAKS YOU: Replace `tf.contrib.data` with `tf.data` when constructing a\n`FixedLengthRecordDataset`, `TextLineDataset`, or `TFRecordDataset`. Note that\nyou may have to modify downstream transformations to use the core API. See\n\"tensorflow/contrib/data/README.md\" for details of how to update your code to use\nthe core API.\n\nPiperOrigin-RevId: 185016587\n", "change_type": "removed", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.6.0+ and new name (#16815)\n\n* Update tensorboard dependency to 1.6.0+ and new name\r\n\r\n* Mention tensorboard package name change in RELEASE.md\r\n", "change_type": "added", "type": ""}, {"name": "tensorflow", "commit_message": "[Java]: Add link to samples in the tensorflow/models repository.\n\nPiperOrigin-RevId: 185414475\n", "change_type": "removed", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.7.0+", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Merge pull request #18032 from nfelt/tensorboard-dep-1.7\n\nUpdate tensorboard dependency to 1.7.0+", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.7.0+", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Merge pull request #18035 from annarev/cherrypicks_WW13C\n\n1.7 cherry-pick request: Update tensorboard dependency to 1.7.0+", "change_type": "updated", "type": ""}, {"name": "grpcio", "commit_message": "Make grpcio pip dependency conditional on little endian\n\ngrpcio doesn't build correctly on big-endian machines due to\nlack of BoringSSL support.\n\nFixes: #17882\nPiperOrigin-RevId: 192122728\n", "change_type": "removed", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dep to 1.8.x", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Merge pull request #18844 from nfelt/tb-1.8\n\nUpdate tensorboard dep to 1.8.x", "change_type": "updated", "type": ""}, {"name": "setuptools", "commit_message": "Adding a constraint for the setuptools version.\n", "change_type": "added", "type": ""}, {"name": "setuptools", "commit_message": "Merge pull request #19820 from av8ramit/fix_setuptools4\n\nAdding a constraint for the setuptools version.", "change_type": "added", "type": ""}, {"name": "setuptools", "commit_message": "Add a setuptools constraint.\n", "change_type": "added", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.9.x", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Merge pull request #19994 from nfelt/tensorboard-1.9\n\nUpdate tensorboard dependency to 1.9.x", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Update protobuf dependency of TF to 3.6.\n\nPiperOrigin-RevId: 201386306\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "update protobuf requirement to 3.6.0 for pip (#20331)\n\nsince protobuf dependence was update 3.6.0, there are incompatible\r\nproblems on machines with 3.4.0 < protobuf version < 3.6.0", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Fix accidently downgrade of protobuf requirement.\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.10.x\n\nPiperOrigin-RevId: 205895470\n", "change_type": "updated", "type": ""}, {"name": "keras_applications", "commit_message": "Make tf.keras rely on external keras_applications and keras_preprocessing modules.\n\nPiperOrigin-RevId: 207953769\n", "change_type": "added", "type": ""}, {"name": "keras_preprocessing", "commit_message": "Make tf.keras rely on external keras_applications and keras_preprocessing modules.\n\nPiperOrigin-RevId: 207953769\n", "change_type": "added", "type": ""}, {"name": "numpy", "commit_message": "Revert the numpy restrictions. Tested on CPU/GPU pip builds.\n\nPiperOrigin-RevId: 210616689\n", "change_type": "updated", "type": ""}, {"name": "keras_applications", "commit_message": "Experiment using Bazel's pip_install rule to install keras_applications.\n\nPiperOrigin-RevId: 214076591\n", "change_type": "added", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.11.x\n\nPiperOrigin-RevId: 214371640\n", "change_type": "updated", "type": ""}, {"name": "setuptools", "commit_message": "Removing the setuptools upper limit.\n\nPiperOrigin-RevId: 215120867\n", "change_type": "removed", "type": ""}, {"name": "protobuf", "commit_message": "Bump the version of protobuf TF pip package depends on.\n\nFixes #21719\n\nPiperOrigin-RevId: 215154273\n", "change_type": "updated", "type": ""}, {"name": "keras_applications", "commit_message": "Update keras_applications to 1.0.6 and keras_preprocessing to 1.0.5.\nThis removes the transitive keras and scipy dependencies in TensorFlow.\n\nPiperOrigin-RevId: 215277190\n", "change_type": "updated", "type": ""}, {"name": "keras_preprocessing", "commit_message": "Update keras_applications to 1.0.6 and keras_preprocessing to 1.0.5.\nThis removes the transitive keras and scipy dependencies in TensorFlow.\n\nPiperOrigin-RevId: 215277190\n", "change_type": "updated", "type": ""}, {"name": "tensorflow_estimator", "commit_message": "Have TensorFlow opensource code use tensorflow_estimator module if available.\n\nPiperOrigin-RevId: 216706771\n", "change_type": "added", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.12.x\n\nAlso updated tb-nightly to +1 minor version, 1.13.x.\n\nPiperOrigin-RevId: 218582588\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.12.x (#23230)\n\nAlso updated tb-nightly to +1 minor version, 1.13.x.\r\n\r\nPiperOrigin-RevId: 218582588", "change_type": "updated", "type": ""}, {"name": "google_pasta", "commit_message": "Add dependency on google_pasta (freshly minted on pypi).\n\nPiperOrigin-RevId: 228541538\n", "change_type": "added", "type": ""}, {"name": "google_pasta", "commit_message": "Increase version of google_pasta to 0.1.1 (for Byte string fix).\n\nPiperOrigin-RevId: 229421387\n", "change_type": "updated", "type": ""}, {"name": "tensorflow_estimator", "commit_message": "Update Estimator version in setup,py\n\nThis needs to be cherry-picked to TF r1.13 branch.\nThere now exists a tensorflow_estimator==1.13.0rc0 release on pypi.\n\nPiperOrigin-RevId: 230987863\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Update numpy version >=1.14.5\n\nPiperOrigin-RevId: 231534268\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Fix OneDeviceDataset numpy dataset \"Error copying tensor to device:\"\nbug.  I needed to make sure OneDeviceExtended._create_variable() used\ntf.device() in this case instead of tf.colocate_with(). I also needed\nto remove the device set by one device strategy's scope, since\notherwise dataset creation gives lots of errors.\n\nAlso, expand OneDeviceStrategy eager/GPU test coverage.\n\nPiperOrigin-RevId: 232605692\n", "change_type": "updated", "type": ""}, {"name": "google_pasta", "commit_message": "Bump google_pasta dependency to 0.1.2\n\nI overlooked this when bumping the Bazel pasta dependency in https://github.com/tensorflow/tensorflow/commit/4f787752f93e171cf8554957e40f29667471275a\n\nPiperOrigin-RevId: 234636517\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.13.x\n\nTensorBoard release: https://pypi.org/project/tensorboard/1.13.0/\n\nPiperOrigin-RevId: 235563447\n", "change_type": "updated", "type": ""}, {"name": "wrapt", "commit_message": "Switch to wrapt for trackable dict data structures instead of subclassing collections.Mapping\n\nAdds a dependency on wrapt to TensorFlow's pip package. It's not a very large dependency, and this is a usability win when subclassing TensorFlow types (Model, Module, Layer, etc.).\n\nwrapt fixes issues with CPython's direct access to dictionaries by inheriting the memory layout of the wrapped object, so we can now pass isinstance(obj, dict) checks while staying correct (i.e. {}.update(obj) won't look at the possibly-stale wrapper object's memory). There are several new oddities with the wrapt approach, but overall this is much better.\n\nWe're already doing dict wrapping, just not in a way that passes isinstance(obj, dict) checks. We need it to support restore-on-create for variables added to objects while executing eagerly.\n\nI tried switching _ListWrapper to wrapt too. It works in most Python versions (with some tweaks to TF to accommodate the change), but apparently in Python 3.4 isinstance(obj, (list, tuple)) is not functioning properly. There are no correctness issues with actually subclassing list, and it means type(obj) shows up as a subclass of list, so this isn't too bad. Since ObjectProxy copies the memory layout of the wrapped object we can't do both of these at the same time.\n\nPiperOrigin-RevId: 243118363\n", "change_type": "added", "type": ""}, {"name": "kissfft", "commit_message": "Include kissfft 1.3.0 as a required package in setup.py.oss\n\nPiperOrigin-RevId: 245256804\n", "change_type": "added", "type": ""}, {"name": "kissfft", "commit_message": "Undo failed attempts at including kissfft\n\nPiperOrigin-RevId: 245315183\n", "change_type": "removed", "type": ""}, {"name": "tensorflow_estimator", "commit_message": "Change setup.py.oss to use tensorflow_estimator 1.14.0rc0\n\nPiperOrigin-RevId: 250953824\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.14.x\n\nTensorBoard release: https://pypi.org/project/tensorboard/1.14.0/\n\nPiperOrigin-RevId: 253251054\n", "change_type": "updated", "type": ""}, {"name": "opt_einsum", "commit_message": "Add opt_einsum to TensorFlow dependencies.\n\nThis library would be used for improving tf.einsum's performance through contraction path optimization.\n\nPiperOrigin-RevId: 255342691\n", "change_type": "added", "type": ""}, {"name": "enum34", "commit_message": "Use environment markers for enum34\n\nThis fix tries to addres the issue raised in 30200 where\nenum34 caused poetry breaks due to the conditional sys.version_info\n\nThis fix changes to use environment markers for enum34 (conform to PEP508)\n\nThis fix fixes 30200.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n", "change_type": "added", "type": ""}, {"name": "numpy", "commit_message": "Use \"numpy >= 1.16.0, < 2.0\" to fix #25636\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Merge pull request #30718 from tensorflow:master-numpy\n\nPiperOrigin-RevId: 258222061\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "Freeze gast==0.2.2 (#32319) in setup.py requirements.\n\nThis fixes breakage caused by minor update breaking tensorflow.\n\nPiperOrigin-RevId: 268261146\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 1.15.x\n\nTensorBoard release: https://pypi.org/project/tensorboard/1.15.0/\n\nPiperOrigin-RevId: 268769044\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 2.0.x\n\nAlso updates tb-nightly dependency to 2.1.x.\n\nTensorBoard release: https://pypi.org/project/tensorboard/2.0.0/\nNightly release: https://pypi.org/project/tb-nightly/2.1.0a20190919/\n\nPiperOrigin-RevId: 271150555\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Increase protobuf PIP requirement to >=3.8.0 \n\nThis is required in order to get https://github.com/protocolbuffers/protobuf/commit/d8c2501b43c1b56e3efa74048a18f8ce06ba07fe , which adds a `RepeatedCompositeContainer.append()` method.\r\n\r\nThanks to @seanpmorgan for raising this issue. Fixes #33348.", "change_type": "updated", "type": ""}, {"name": "six", "commit_message": "Adding `six` version requirement to setup.py.oss.\n\nPiperOrigin-RevId: 275100549\nChange-Id: I7ea03220475ed856bac26421a1361dd55b943014\n", "change_type": "added", "type": ""}, {"name": "six", "commit_message": "Removing duplicate `six` requirement in setup.py.\n\nPiperOrigin-RevId: 275549971\nChange-Id: I7f42d74c4833009c0542c1a09d688ccd63083183\n", "change_type": "removed", "type": ""}, {"name": "keras_preprocessing", "commit_message": "Update keras_preprocessing to 1.1.0\n\nPiperOrigin-RevId: 275632222\nChange-Id: Iabbaa9ac5a235627eb0a3319fd9edbd4312ca2ed\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 2.1.x\n\nTensorBoard release: https://pypi.org/project/tensorboard/2.1.0/\n\nPiperOrigin-RevId: 284056869\nChange-Id: I0645574f14dd4280420a074ef095818f2f07fae4\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Python 3 Migration. //tensorflow/python/distribute\n\nPiperOrigin-RevId: 284081338\nChange-Id: I494673b3c3543dbcefb35247cdc2aa9e03cb031f\n", "change_type": "added", "type": ""}, {"name": "tensorflow", "commit_message": "Expand the globs for legacy_srcs_no_runtime and legacy_srcs_no_runtime_google, and extract their common files into a single filegroup. This change helps prepare for a subsequent change adding BUILD files to tf/core/platform/default and tf/core/platform/windows.\nThis change is part of the Tensorflow Build Improvements RFC described here: https://github.com/tensorflow/community/pull/179\n\nPiperOrigin-RevId: 284436373\nChange-Id: I695ef8042388ad2bc17c763b87f4f7d0e189cd74\n", "change_type": "added", "type": ""}, {"name": "tensorflow", "commit_message": "Supports attention dropout in BaseDenseAttention.\nThis is originally from @claverru's PR:\nhttps://github.com/tensorflow/tensorflow/pull/31191\n\nPiperOrigin-RevId: 286007122\nChange-Id: Ic5fb32de79d1210d11554291b41e69cc3ebbbd12\n", "change_type": "updated", "type": ""}, {"name": "scipy", "commit_message": "Pin scipy to 1.4.1.\n\nFixes segfaults caused by scipy/scipy#11237 before 1.4.1 (observed at scipy==1.4.0 and any version of TF and scipy==1.1.0 and TF==2.1.0rc1 on a specific VM setup)\n\nPiperOrigin-RevId: 286416747\nChange-Id: I9f66f9145517d3b9279883a9292ae050b0dfa555\n", "change_type": "added", "type": ""}, {"name": "scipy", "commit_message": "For python2, pin scipy to 1.2.2 (latest released).\n\nThis means py2 won't get the fix in scipy/scipy#11237\n\nPiperOrigin-RevId: 286456504\nChange-Id: Ic94ee7e57dd6ea590d79aa643e5de4192709ff17\n", "change_type": "added", "type": ""}, {"name": "tensorflow", "commit_message": "Enable //third_party/tensorflow/python/keras:multi_gpu_utils_test_xla_gpu\n\n//third_party/tensorflow/python/keras:multi_gpu_utils_test_xla_gpu seems to pass\nnow.  Not sure exactly what changed, could be that this was fixed by\ncr/284627940.\n\nPiperOrigin-RevId: 287712795\nChange-Id: Ib3bc033b3a6ab1de61bd49bbf79e9f3c64cc51b9\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "Upgrade to gast 0.3.2.\n\nPiperOrigin-RevId: 289172767\nChange-Id: I98b02508aebdd15da78353db03f4f242257b0d72\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Add Broadcasted Matrix Triangular Solve.\n\nAdd Numpy-style broadcasting in the batch dimensions for tf.linalg.triangular_solve op. The last two dimensions of both operands constitute the matrix dimensions. The dimensions beyond these are broadcasted to form a common output shape with the standard NumPy broadcasting rules. (https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html)\nNote: This implementation differs from Numpy's behavior in that vectors (rank-1 Tensors) are not pr...\nPiperOrigin-RevId: 289978628\nChange-Id: I66e41e292e57e6df8111745cbe47ccffacb53edc\n", "change_type": "updated", "type": ""}, {"name": "astunparse", "commit_message": "Replace astor with astunparse in autograph, for compatibility with Python 3.8. This is a non-functional change - the only differences between the two should be in the formatting of the generated code.\n\nPiperOrigin-RevId: 289985611\nChange-Id: I1b87712255e20e354efe95abf3aa24a63ff41784\n", "change_type": "added", "type": ""}, {"name": "astor", "commit_message": "Replace astor with astunparse in autograph, for compatibility with Python 3.8. This is a non-functional change - the only differences between the two should be in the formatting of the generated code.\n\nPiperOrigin-RevId: 289985611\nChange-Id: I1b87712255e20e354efe95abf3aa24a63ff41784\n", "change_type": "removed", "type": ""}, {"name": "gast", "commit_message": "Upgrade to gast 0.3.3, which fixes a Python 3.8 compatibility bug.\n\nPiperOrigin-RevId: 290724579\nChange-Id: I10ed864e338358a70c32ac4edab15d68c49caf19\n", "change_type": "updated", "type": ""}, {"name": "python-hostlist", "commit_message": "Remove dependency on python-hostlist and fix tests\n\nAlso refactor some functions and improve the documentation\n", "change_type": "removed", "type": ""}, {"name": "numpy", "commit_message": "Change required numpy version to >= 1.16\n\nPiperOrigin-RevId: 296062347\nChange-Id: I416e4429606f130da6de08719da5693b82f0dcf7\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Upgrade protobuf to 3.9.2\n\nPiperOrigin-RevId: 301935849\nChange-Id: I63be177fc6601e4c68498e06bcba15fee8c445f1\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 2.2.x\n\nTensorBoard release: https://pypi.org/project/tensorboard/2.2.0/\n\nPiperOrigin-RevId: 302691090\nChange-Id: Id4941c0bf6c48f4b0d5fa679270407f22607dd5e\n", "change_type": "updated", "type": ""}, {"name": "pybind11", "commit_message": "Change swig dependency in pip_packge build to use pybind11.\n\nPiperOrigin-RevId: 302850381\nChange-Id: If7693293985c24d0e57c0129d1a73bc6e4ddc4a9\n", "change_type": "added", "type": ""}, {"name": "google-api-python-client", "commit_message": "Depend on a specific version of google-api-python-client.\n\nPiperOrigin-RevId: 307821213\nChange-Id: I917cb40009ab2454ca9b4abbecd240a451af486b\n", "change_type": "updated", "type": ""}, {"name": "keras_preprocessing", "commit_message": "Pin keras_preprocessing to 1.1.0\n\nPiperOrigin-RevId: 311474544\nChange-Id: I1911f5b834e61cd269c39ca30559d1304b3a787f\n", "change_type": "updated", "type": ""}, {"name": "keras_preprocessing", "commit_message": "Cleanup `setup.py`\n\nRemove python 2 and TF 1.x stanzas. Also make keras_preprocessing be between 1.1.1 and 1.2.\n\nPiperOrigin-RevId: 311475047\nChange-Id: I4ba517cb8babd609e83d031c86afb6670d34c757\n", "change_type": "updated", "type": ""}, {"name": "mock", "commit_message": "[tfdbg2] Fix graph-mode path_length_limit and stack_heigth_limit in enable_check_numerics()\n\nCause of the bug:\n  - Previously, the helper method get_check_numerics_error_message() was called\n    with the proper kwargs only under eager mode. The graph mode code path\n    incorrectly omitted the kwargs.\n\nThis CL fixes that. The fix is covered by mock-based unit tests.\n\nPiperOrigin-RevId: 312994212\nChange-Id: I8800ec85741da6efe8fb8f3115ea7f57a38f0882\n", "change_type": "removed", "type": ""}, {"name": "numpy", "commit_message": "Upper bound `numpy` dependency to `1.19.0`.\n\nSince `numpy==1.19.0` contains at least one breaking ABI change (numpy/numpy#15355), we need to either upper bound the dependency's range or fix our code to support both ABIs. Since the second requires more changes, we prefer the first one for now.\n\nPiperOrigin-RevId: 317699730\nChange-Id: Ia62a779f9ec42d63d3fac1b69cd75e6084358d2f\n", "change_type": "updated", "type": ""}, {"name": "scipy", "commit_message": "Remove `scipy` dependency.\n\nWe have added it temporarily to prevent a segfault due to ABI breakage in `scipy==1.4.1` but never removed it after fixing.\n\nFixes #40884. Fixes 35709. Closes #40789.\n\nPiperOrigin-RevId: 320974190\nChange-Id: I72531796db26ee6634930b004092da8703585a78\n", "change_type": "removed", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 2.3.x\n\nTensorBoard release: https://pypi.org/project/tensorboard/2.3.0/\n\nPiperOrigin-RevId: 322474571\nChange-Id: I7cb6bcbb101cb9b10d04b832279e62ea9066abca\n", "change_type": "updated", "type": ""}, {"name": "flatbuffers", "commit_message": "Add flatbuffers python library to tensorflow pip_package\n\nPiperOrigin-RevId: 322818638\nChange-Id: I2ff99c4c8f8409b3128a717709e64f03f142ee92\n", "change_type": "added", "type": ""}, {"name": "typing_extensions", "commit_message": "Add typing_extensions dependency. This is a very light dependency (roughly two Python files) that is useful to unlock typing features present only in the latest Python versions.\n\nPiperOrigin-RevId: 327637134\nChange-Id: Ifb4cd1314a6f8feee4f452a8256cff27c1acd590\n", "change_type": "added", "type": ""}, {"name": "absl-py", "commit_message": "Bump absl-py to pick up py3.8 logging fix.\n\nPiperOrigin-RevId: 333622148\nChange-Id: I89361e94abb6d41c491a120be06438cb8f72998d\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "absl-py", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "astunparse", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "flatbuffers", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "six", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "termcolor", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "wheel", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "wrapt", "commit_message": "Change `setup.py` to use the new pip resolver.\n\nAlso cleans up `setup.py`, upgrading dependencies, adding comments.\n\nFixes #41902 by changing constraint on `numpy` dependency to require `numpy` above the C++ API breaking change (https://github.com/numpy/numpy/pull/15355, https://github.com/tensorflow/tensorflow/commit/79518facb4b857af9d9d5df2da463fdbf7eb0e3e)\n\nFixes duplicate #43679 (duplicate of #41902)\n\nTested:\n```console\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ bazel build //tensorflow/tools/pip_package:build_pip_package\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\n...\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip install --upgrade pip\nCollecting pip\n  Using cached pip-20.2.3-py2.py3-none-any.whl (1.5 MB)\nInstalling collected packages: pip\n  Attempting uninstall: pip\n    Found existing installation: pip 20.1.1\n    Uninstalling pip-20.1.1:\n      Successfully uninstalled pip-20.1.1\nSuccessfully installed pip-20.2.3\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip --version\npip 20.2.3 from /tmp/tf/venv/lib/python3.8/site-packages/pip (python 3.8)\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage             Version\n------------------- -------\nKeras-Preprocessing 1.1.2\nnumpy               1.19.2\npip                 20.2.3\npkg-resources       0.0.0\nsetuptools          44.0.0\nsix                 1.15.0\nwheel               0.35.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ python -m pip install --upgrade --use-feature=2020-resolver /tmp/tensorflow_pkg/tensorflow-2.4.0-cp38-cp38-linux_x86_64.whl\n...\nSuccessfully installed absl-py-0.10.0 astunparse-1.6.3 cachetools-4.1.1 certifi-2020.6.20 chardet-3.0.4 flatbuffers-1.12 gast-0.4.0 google-auth-1.22.1 google-auth-oauthlib-0.4.1 google-pasta-0.2.0 grpcio-1.32.0 h5py-2.10.0 idna-2.10 markdown-3.3.1 oauthlib-3.1.0 opt-einsum-3.3.0 protobuf-3.13.0 pyasn1-0.4.8 pyasn1-modules-0.2.8 requests-2.24.0 requests-oauthlib-1.3.0 rsa-4.6 tensorboard-2.3.0 tensorboard-plugin-wit-1.7.0 tensorflow-2.4.0 tensorflow-estimator-2.3.0 termcolor-1.1.0 typing-extensions-3.7.4.3 urllib3-1.25.10 werkzeug-1.0.1 wrapt-1.12.1\n(venv) mihaimaruseac@ankh:/tmp/tf/cp/tf$ pip list\nPackage                Version\n---------------------- ---------\nabsl-py                0.10.0\nastunparse             1.6.3\ncachetools             4.1.1\ncertifi                2020.6.20\nchardet                3.0.4\nflatbuffers            1.12\ngast                   0.4.0\ngoogle-auth            1.22.1\ngoogle-auth-oauthlib   0.4.1\ngoogle-pasta           0.2.0\ngrpcio                 1.32.0\nh5py                   2.10.0\nidna                   2.10\nKeras-Preprocessing    1.1.2\nMarkdown               3.3.1\nnumpy                  1.19.2\noauthlib               3.1.0\nopt-einsum             3.3.0\npip                    20.2.3\npkg-resources          0.0.0\nprotobuf               3.13.0\npyasn1                 0.4.8\npyasn1-modules         0.2.8\nrequests               2.24.0\nrequests-oauthlib      1.3.0\nrsa                    4.6\nsetuptools             44.0.0\nsix                    1.15.0\ntensorboard            2.3.0\ntensorboard-plugin-wit 1.7.0\ntensorflow             2.4.0\ntensorflow-estimator   2.3.0\ntermcolor              1.1.0\ntyping-extensions      3.7.4.3\nurllib3                1.25.10\nWerkzeug               1.0.1\nwheel                  0.35.1\nwrapt                  1.12.1\n```\nPiperOrigin-RevId: 337563781\nChange-Id: I2aa111b21a43e333d6891c0392051d765aade964\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "Pin gast.\n\nSadly, gast needs to be pinned to 0.3.3 as otherwise ecosystem packages break.\n\nPiperOrigin-RevId: 337929706\nChange-Id: I92c901d9e1908f57ad217d899edb4c32e9252bf1\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Change protobuf version back to 3.9.2\n\nFixes #45300\n\nPiperOrigin-RevId: 345132065\nChange-Id: I271b1ffcbe7e34b905974d62415ee1efba4f5bb6\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Try to switch to h5py 3.1.0\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Merge remote-tracking branch 'upstream/master' into h5py\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Merge pull request #45380 from bhack:h5py\n\nPiperOrigin-RevId: 346168788\nChange-Id: I884cec055e1d367c21e0a1f89c769d870fa7d780\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Revert PR #45380: Try to switch to h5py 3.1.0\n\nPiperOrigin-RevId: 346215317\nChange-Id: Id990b67a0e3c446555b590c0711159bd3ab88465\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Revert \"Revert PR #45380: Try to switch to h5py 3.1.0\"\n\nThis reverts commit d36db2955c460d2abe185ced9cc5bdfabc67b631.\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Merge pull request #45487 from bhack:h5py\n\nPiperOrigin-RevId: 347056825\nChange-Id: Ib51f6715711fe521abf498d672b40cf4c11c0914\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Bump tensorflow in /tensorflow/lite/micro/examples/magic_wand/train\n\nBumps [tensorflow](https://github.com/tensorflow/tensorflow) from 2.0.0-beta1 to 2.4.0.\n- [Release notes](https://github.com/tensorflow/tensorflow/releases)\n- [Changelog](https://github.com/tensorflow/tensorflow/blob/master/RELEASE.md)\n- [Commits](https://github.com/tensorflow/tensorflow/compare/v2.0.0-beta1...v2.4.0)\n\nSigned-off-by: dependabot[bot] <support@github.com>", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Merge pull request #46095 from tensorflow:dependabot/pip/tensorflow/lite/micro/examples/magic_wand/train/tensorflow-2.4.0\n\nPiperOrigin-RevId: 350070544\nChange-Id: I28f33204986cb2db8ae2fee7d6126e3ac0420406\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Merge pull request #45554 from Intel-tensorflow:enable_dnnl_cpu_dispatch_control\n\nPiperOrigin-RevId: 350187826\nChange-Id: Ic4be28c53785db22b095ac7fbdea97d23c430d45\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "Upgrade to gast 0.4.\n\nWith thanks to @bhack for contributions in #46039.\n\nPiperOrigin-RevId: 350377724\nChange-Id: If1dbc77b9c2c7d640720f847292586aca39da80d\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Remove unneccessary define.\n\n@pnikam-cad confirmed that this will no longer be needed: https://github.com/tensorflow/tensorflow/pull/46238#discussion_r553364064\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Switching to Cadence HiFi 4 NN Library v2.3.0\n\nUsing the latest version of HiFi 4 NN Library.\nThis version has optimized implementation of FC and softmax for int8 datatype (not yet integrated).\nTested the change using following commands:\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=hifi4 XTENSA_TOOLS_VERSION=RI-2020.5-linux XTENSA_CORE=AE_HiFi4_LE5_FP_XC clean_downloads\nmake -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=hifi4 XTENSA_TOOLS_VERSION=RI-2020.5-linux XTENSA_CORE=AE_HiFi4_LE5_FP_XC test_kernel_softmax_test\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Handle breakage caused by new numpy and setuptools.\n\nPiperOrigin-RevId: 355019618\nChange-Id: Ie3f6df6cb88dd4f6b995f31474266cc9d8c281da\n", "change_type": "updated", "type": ""}, {"name": "keras", "commit_message": "Update PIP package script to include OSS keras as a PIP dependency.\n\nPiperOrigin-RevId: 359099489\nChange-Id: If252fce133591180f40bada6f2509f99c5b01dbb\n", "change_type": "added", "type": ""}, {"name": "keras", "commit_message": "Update PIP package script to include OSS keras as a PIP dependency.\n\nPiperOrigin-RevId: 359133801\nChange-Id: I2de5d77ebfce418ccb62f87c763ad0fbd45f37ca\n", "change_type": "removed", "type": ""}, {"name": "keras-nightly", "commit_message": "Update PIP package script to include OSS keras as a PIP dependency.\n\nAlso update keras build script to remove keras-nightly package if it is there. This will ensure keras integration test to only run with the code from local workspace.\n\nPiperOrigin-RevId: 364873257\nChange-Id: Ia79c73f85af3f7448fd613e85a2a6382d4725c85\n", "change_type": "added", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 2.5.x\n\nTensorBoard release: https://pypi.org/project/tensorboard/2.5.0/\n\nPiperOrigin-RevId: 369275616\nChange-Id: I4355e3861c493aa8693ca1e0ea1d96695ed87a53\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Merge pull request #49008 from fsx950223:numpy\n\nPiperOrigin-RevId: 373593674\nChange-Id: I8089e084c5e50d9268c6a96196c608db2136743f\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "PR #49008: fix numpy 1.20\n\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/49008\n\nRelated #48918\nCopybara import of the project:\n\n--\ne9924bfb66f6747ed33614a62c15fcce89ed6c5a by fsx950223 <fsx950223@outlook.com>:\n\nfix numpy 1.20\n\n--\n509a10cf30e2e8941c693dbb0ba8b35987423e2e by fsx950223 <fsx950223@outlook.com>:\n\nadd test case\n\nPiperOrigin-RevId: 373618749\nChange-Id: I925da021db2bdb5a1b35f0d187d0007b7802ff1c\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Misc TFLM cleanup:\n\n * upstreaming change from https://github.com/tensorflow/tflite-micro/pull/91\n\n * Fix hifimini build by excluding known failing tests. Tested with:\n   ```\n   make -f tensorflow/lite/micro/tools/make/Makefile TARGET=xtensa OPTIMIZED_KERNEL_DIR=xtensa TARGET_ARCH=hifimini XTENSA_CORE=mini1m1m_RG build -j8\n   ```\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Merge pull request #47992 from Intel-tensorflow:gaurides/ci_debug_analyzer\n\nPiperOrigin-RevId: 375687272\nChange-Id: I7b09a09bd321e5e9742b5e14a1e0bde57f3e891c\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "PR #49286: [INTEL MKL] re-submit rsqrst op bfloat16 support\n\nImported from GitHub PR https://github.com/tensorflow/tensorflow/pull/49286\n\nthe reverted PR is here:\nhttps://github.com/tensorflow/tensorflow/pull/43167\nCopybara import of the project:\n\n--\nb5b6fd1af8c16094608b5e47d3cebf5aeebfa5c7 by Xiaoming (Jason) Cui <xiaoming.cui@intel.com>:\n\n[INTEL MKL] re-submit rsqrst op bfloat16 support\n\nPiperOrigin-RevId: 376118079\nChange-Id: Ic0abb40246d028310aac334e4db2f5b92d93717f\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Roll forward https://github.com/tensorflow/tensorflow/pull/49286.\n\nPiperOrigin-RevId: 376289691\nChange-Id: I34398c01e5cbaefcc9ca3bf06ff25c64b0b83545\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'master' of github.com:ashahba/tensorflow into ashahba/onednn-redhat-8-partials\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Update TFRT dependency to use revision\nhttp://github.com/tensorflow/runtime/commit/2e639ce3c3441af551cbb3f07e5f79aaa560763e.\n\nPiperOrigin-RevId: 378483527\nChange-Id: I6e43999568fa046f8d38e07c587c42fa9989245b\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Merge pull request #50131 from tensorflow:ymodak-patch-2\n\nPiperOrigin-RevId: 378489708\nChange-Id: Ie9ac8668137445970dd78e44fc4136b2ea419eca\n", "change_type": "updated", "type": ""}, {"name": "clang", "commit_message": "PIP install clang python bindings in RBE and Kokoro images.\n\nThis is in preparation to open-source TF's TFRT backend. TFRT generates code using libclang python bindings as part of the build.\n\nPiperOrigin-RevId: 379810815\nChange-Id: I61b275a56a53b13ba5981f744e38ad5e3849d036\n", "change_type": "added", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'tensorflow:master' into master\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'tensorflow:master' into master\n", "change_type": "updated", "type": ""}, {"name": "libclang", "commit_message": "Change the pip-installed clang python bindings from 'clang' (added in cl/379810815) to 'libclang'.\nThe latter includes the libclang.so, so we don't need to install it separately.\n\nPiperOrigin-RevId: 383219020\nChange-Id: I64bf58965e15b3543d324b5fb4953dd21cae114b\n", "change_type": "added", "type": ""}, {"name": "clang", "commit_message": "Change the pip-installed clang python bindings from 'clang' (added in cl/379810815) to 'libclang'.\nThe latter includes the libclang.so, so we don't need to install it separately.\n\nPiperOrigin-RevId: 383219020\nChange-Id: I64bf58965e15b3543d324b5fb4953dd21cae114b\n", "change_type": "removed", "type": ""}, {"name": "libclang", "commit_message": "Use libclang 11.1.0 instead of 12.0.0. This is a fix forward for cl/383442190, which broke tf-nightly.\n\nPiperOrigin-RevId: 383489320\nChange-Id: Ib98bc51001e5e05504f5d678fb1f52c081909a0c\n", "change_type": "updated", "type": ""}, {"name": "tensorflow", "commit_message": "(Almost completely) Delete the micro folder.\n\nThe TFLM code has moved to https://github.com/tensorflow/tflite-micro\n\nThe only remaining code is the micro:debug_log BUILD target since that is a dependency for lite/kernels:op_macros. Removing this dependency will be done in a follow-on change as part of fixing http://b/187728891\n\nPiperOrigin-RevId: 383664882\nChange-Id: Ie03d5f65e2a5935459dc8f8f31c42d24be854e57\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Update TFRT dependency to use revision\nhttp://github.com/tensorflow/runtime/commit/a194b99bca692eaea8ad5fe0667d83b6009a6c2e.\n\nPiperOrigin-RevId: 383787028\nChange-Id: I63d501d5ef15a09f49b3cd53c3ca033ca3c31d55\n", "change_type": "removed", "type": ""}, {"name": "tensorflow", "commit_message": "Merge branch 'master' of https://github.com/abhilash1910/tensorflow\n", "change_type": "removed", "type": ""}, {"name": "grpcio", "commit_message": "Update requirements file with grpcio upgrade\n\nPiperOrigin-RevId: 385226669\nChange-Id: Id8b240ed014f610adddb2023679276aa0d4563e7\n", "change_type": "updated", "type": ""}, {"name": "tensorboard", "commit_message": "Update tensorboard dependency to 2.6.x and and tb-nightly dependency to 2.7.x.\n\nPiperOrigin-RevId: 389635311\nChange-Id: I73e876a3f398463f600c4c61bfd27468a1d7a2dc\n", "change_type": "updated", "type": ""}, {"name": "keras", "commit_message": "Update keras and estimator deps\n\nPiperOrigin-RevId: 389672438\nChange-Id: Iaee9f29c10caeffad752009faa1fcafab7935b67\n", "change_type": "added", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Add tensorflow-io-gcs-filesystem dependency\n\nThis PR is part of the effort to migrate to modular file systems.\nThis PR add the dependency of tensorflow-io-gcs-filesystem package\nwhile at the same time, only enable using it with\n`TF_USE_MODULAR_FILESYSTEM=1`.\n\nThis allows end user to not getting impacted by default.\n\nThe switch off will happen after a period of transition time.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n", "change_type": "added", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Merge pull request #51460 from yongtang:tensorflow-io-gcs-filesystem\n\nPiperOrigin-RevId: 390504173\nChange-Id: Ia090c836fbbf49f5611f35fc07c43f107ef9f843\n", "change_type": "added", "type": ""}, {"name": "flatbuffers", "commit_message": "Update setup.py\n\nUpdated flatbuffers to \"2.0.\"", "change_type": "updated", "type": ""}, {"name": "jax", "commit_message": "Add experimental API `experimental_from_jax` API for jax to tflite conversion.\n\nPiperOrigin-RevId: 393683040\nChange-Id: I75238bdb7b04350bf9ff3eae569893c1998c5865\n", "change_type": "added", "type": ""}, {"name": "absl-py", "commit_message": "Update absl-py in requirements_common.txt to v0.13.0\n\nPiperOrigin-RevId: 393839478\nChange-Id: I107c6b3b5bb3de8efc287bf01828be28cfbdce6a\n", "change_type": "updated", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Bump tensorflow-io-gcs-filesystem to 0.21.0\n\nThis PR bumps tensorflow-io-gcs-filesystem to 0.21.0 so that TF 2.7\nbranch cut can carry the latest change which includes the fix that removes the extra\nbuild directory in the python pip package (https://github.com/tensorflow/io/pull/1497)\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n", "change_type": "updated", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Merge pull request #51976 from yongtang:tensorflow-io-gcs-filesystem-0.21.0\n\nPiperOrigin-RevId: 401029884\nChange-Id: I193578c143d7e043e04c204920ede79f45b55dd5\n", "change_type": "updated", "type": ""}, {"name": "keras", "commit_message": "Increase the keras{-nightly} version for the 2.7 release.\n\nPiperOrigin-RevId: 401288349\nChange-Id: I386f02aa49813c7a69a1cce3839779e39c8c4232\n", "change_type": "updated", "type": ""}, {"name": "keras", "commit_message": "Change the keras version used on head.\n\nSince keras 2.7 has not been formally release, change it to 2.7 rc0 so that user can build and run from head.\n\nWe will change it back to keras 2.7 once the tf 2.7 release is finalized.\n\nPiperOrigin-RevId: 401816068\nChange-Id: Iac89da8117b812d451bd524d48cb83ad6a7efbb4\n", "change_type": "updated", "type": ""}, {"name": "keras", "commit_message": "Update the keras version used by tensorflow for 2.7 release.\n\nThe keras 2.7 has been released at https://pypi.org/project/keras/2.7.0/\n\nPiperOrigin-RevId: 407371581\nChange-Id: If5e767ddf90addb5e4007f6d40c9b200f08230ae\n", "change_type": "updated", "type": ""}, {"name": "wheel", "commit_message": "Unpin wheel requirement since astunparse does not require at runtime\n\nhttps://github.com/simonpercivall/astunparse/pull/65\n\n```\nastunparse $ for tag in v1.6.0 v1.6.1 v1.6.2 v1.6.3; do git checkout $tag; echo $tag; grep wheel . -R --exclude-dir=.git; done\nPrevious HEAD position was d7ba156 Bump version\nHEAD is now at df08255 Bump version and add HISTORY entry.\nv1.6.0\n./setup.cfg:[wheel]\n./Makefile:\tpython setup.py bdist_wheel\n./requirements.txt:wheel >= 0.23.0, < 1.0\nPrevious HEAD position was df08255 Bump version and add HISTORY entry.\nHEAD is now at c73b675 Bump version.\nv1.6.1\n./setup.cfg:[wheel]\n./Makefile:\tpython setup.py bdist_wheel\n./requirements.txt:wheel >= 0.23.0, < 1.0\nPrevious HEAD position was c73b675 Bump version.\nHEAD is now at d7ba156 Bump version\nv1.6.2\n./setup.cfg:[wheel]\n./Makefile:\tpython setup.py bdist_wheel\n./requirements.txt:wheel >= 0.23.0, < 1.0\nPrevious HEAD position was d7ba156 Bump version\nHEAD is now at 2acce01 Merge pull request #42 from simonpercivall/merge/python3.8-support\nv1.6.3\n./setup.cfg:[wheel]\n./Makefile:\tpython setup.py bdist_wheel\n./requirements.txt:wheel >= 0.23.0, < 1.0\n```\n", "change_type": "updated", "type": ""}, {"name": "wheel", "commit_message": "Remove wheel dependency alltogether", "change_type": "removed", "type": ""}, {"name": "wheel", "commit_message": "Merge pull request #53308 from hmaarrfk:unpin_wheel\n\nPiperOrigin-RevId: 414872783\nChange-Id: I31d48d7ed8ed4ca8f8228dfd55fd173d3cdeaefe\n", "change_type": "removed", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Update tensorflow-io-gcs-filesystem version and add python3.10 support\n\nWith the release of 0.23.0 tensorflow-io-gcs-filesystem, it is possible\nto update and remove the limitation of python3.10.\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n", "change_type": "removed", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Merge pull request #53420 from yongtang:tensorflow-io-gcs-filesystem-0.23.0\n\nPiperOrigin-RevId: 416387281\nChange-Id: I3a4888b2b9c13fa09f081bf4549642c0fadf30e1\n", "change_type": "updated", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Update tensorflow-io-gcs-filesystem to 0.23.1\n\nThis PR updates tensorflow-io-gcs-filesystem to 0.23.1,\nsee https://github.com/tensorflow/io/issues/1591\n\nThis PR fixes https://github.com/tensorflow/io/issues/1591\n\nSigned-off-by: Yong Tang <yong.tang.github@outlook.com>\n", "change_type": "updated", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Merge pull request #53442 from yongtang:tensorflow-io-gcs-filesystem-0.23.1\n\nPiperOrigin-RevId: 416686411\nChange-Id: I38049f63d07cf0f7626634f83721898b0d0df33f\n", "change_type": "updated", "type": ""}, {"name": "setuptools", "commit_message": "Pin TF to setuptools < 60 to fix build issue\n\nPiperOrigin-RevId: 417475112\nChange-Id: Ia3bb3266b4cb1ff6a7b6cc4d6415783626c46725\n", "change_type": "added", "type": ""}, {"name": "keras", "commit_message": "Change the keras version used by tf for upcoming 2.8 release.\n\nThe Keras 2.8.0rc0 is released at https://pypi.org/project/keras/2.8.0rc0/.\n\nThis change will be cherrypicked to tensorflow r2.8 branch.\n\nPiperOrigin-RevId: 417914213\nChange-Id: I73918b64dc0a92507b81e885157253aeb40a86d5\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Update upper bound to numpy to 1.20.\n\nPiperOrigin-RevId: 419625181\nChange-Id: Ic610b47386d029d293a4ab99daf5f3098838d28b\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "Squash REQUIRED_PACKAGES logic\n\nThis cleanup should be a no-op. I moved a bunch of package-selection logic into\nthe list of REQUIRED_PACKAGES so that all dependencies are specified in just one\nplace. For example, one big difference is that the TF ecosystem packages are\nright next to each other.\n\nI also know that gast 0.5.2 breaks one of our tests, so I've pinned the gast\nversion to 0.4.0 or below, which is what our CI currently installs for testing.\n\nPiperOrigin-RevId: 419650242\nChange-Id: I30a70e6a54f89e55e117d8484c84b2b39709b711\n", "change_type": "updated", "type": ""}, {"name": "grpcio", "commit_message": "Update grpcio, protobuf Version to support Windows Python 3.10\n\nPiperOrigin-RevId: 421044747\nChange-Id: I1711577635b43cb9627768f9ff93eed2e449e706\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Update grpcio, protobuf Version to support Windows Python 3.10\n\nPiperOrigin-RevId: 421044747\nChange-Id: I1711577635b43cb9627768f9ff93eed2e449e706\n", "change_type": "updated", "type": ""}, {"name": "setuptools", "commit_message": "Remove `setuptools` upper bound.\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Tensorflow Setup, pin protobuf <= 3.19.1\n\nPiperOrigin-RevId: 423349190\nChange-Id: I40a902c188ad39023dce18c9c062f063d943ccad\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Revert change - Tensorflow Setup, pin protobuf <= 3.19.1\n\nPiperOrigin-RevId: 423391652\nChange-Id: I3bec1ea0dba84c82345bad0041596870b5497a86\n", "change_type": "updated", "type": ""}, {"name": "setuptools", "commit_message": "Merge pull request #53872 from tensorflow:remove-setuptools-upper-bound\n\nPiperOrigin-RevId: 423806346\nChange-Id: Iaddfb78be4f4babee8ff87671799951c47fb2c68\n", "change_type": "updated", "type": ""}, {"name": "packaging", "commit_message": "Add `packaging` to common requirements for CI.\n\nAparently, in some CI instances we don't get it from `setuptools`\n\nPiperOrigin-RevId: 423815775\nChange-Id: I592a78f6919d65470a22f0e842629f71e189785c\n", "change_type": "added", "type": ""}, {"name": "packaging", "commit_message": "Add `packaging` dep to `setup.py`.\n\nCode uses this to make sure TF 1 saved models can load in TF 2, so we need to add this dependency.\n\nPiperOrigin-RevId: 423880332\nChange-Id: I48974c5b2d6116a2754f20a1d77dc1df272012ee\n", "change_type": "added", "type": ""}, {"name": "libclang", "commit_message": "Requires a newer version of the libclang package.\n\nSigned-off-by: Tao He <sighingnow@gmail.com>\n", "change_type": "updated", "type": ""}, {"name": "libclang", "commit_message": "Merge pull request #54120 from sighingnow:ht/upgrade-libclang\n\nPiperOrigin-RevId: 424729720\nChange-Id: Iefafa15bb7dcdd11bffd90f197f33c8f517ec8e0\n", "change_type": "updated", "type": ""}, {"name": "PyYAML", "commit_message": "Update PyYAML dependency version to 6.0 for Python 3.10 compatibility\n\nPiperOrigin-RevId: 433102980\n", "change_type": "updated", "type": ""}, {"name": "flatbuffers", "commit_message": "Don't use `flatbuffers ~= 2.0`\n\nDue to incompatibilities with internal code, using the new major version causes failures. Externally, these are visible in the Windows build only.\n\nPiperOrigin-RevId: 437280260\n", "change_type": "updated", "type": ""}, {"name": "setuptools", "commit_message": "Add twine and setuptools to build dependencies\n\nPiperOrigin-RevId: 445226135\n", "change_type": "added", "type": ""}, {"name": "twine", "commit_message": "Add twine and setuptools to build dependencies\n\nPiperOrigin-RevId: 445226135\n", "change_type": "added", "type": ""}, {"name": "protobuf", "commit_message": "Add upper bound to protobuf in setup.py.\n\nSee also: https://github.com/tensorflow/tensorflow/issues/53234\nSee also: https://github.com/protocolbuffers/protobuf/issues/9954\nSee also: https://github.com/tensorflow/tensorflow/issues/56077\n\nPiperOrigin-RevId: 450054200\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Fix `pip_new.sh` based pipelines with the new `protobuf` release\n\nPiperOrigin-RevId: 451180582\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Upgrade h5py to 3.7.0 for M1 compatibility\n\nPiperOrigin-RevId: 458281171\n", "change_type": "updated", "type": ""}, {"name": "jax", "commit_message": "Pin to minor version.\n\nWithout the pin to minor version, when `jax`/`jaxlib` would release version 0.4 CI would pick it up, but that might contain breaking changes. With the pin to the minor version and mentioning the explicit patch number 14, only 0.3.14, 0.3.15, ... versions would be allowed, so a better compatibility story", "change_type": "updated", "type": ""}, {"name": "jaxlib", "commit_message": "Pin to minor version.\n\nWithout the pin to minor version, when `jax`/`jaxlib` would release version 0.4 CI would pick it up, but that might contain breaking changes. With the pin to the minor version and mentioning the explicit patch number 14, only 0.3.14, 0.3.15, ... versions would be allowed, so a better compatibility story", "change_type": "updated", "type": ""}, {"name": "jax", "commit_message": "Merge pull request #56701 from tensorflow:bump-jax-in-CI\n\nPiperOrigin-RevId: 459586930\n", "change_type": "updated", "type": ""}, {"name": "keras_preprocessing", "commit_message": "keras_preprocessing is no longer required by the TF package.\n\nPiperOrigin-RevId: 470835978\n", "change_type": "updated", "type": ""}, {"name": "jax", "commit_message": "Add JAX as a runtime dependency of TF in preparation for jax2tf support.\n\nPiperOrigin-RevId: 487306476\n", "change_type": "added", "type": ""}, {"name": "scipy", "commit_message": "Use older scipy for Python 3.10 or lower\n\nPiperOrigin-RevId: 497035181\n", "change_type": "updated", "type": ""}, {"name": "h5py", "commit_message": "Update h5py to 3.8.0\n\nPiperOrigin-RevId: 504361612\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Bump lower bound of numpy.\n\nThis follows previous commit which bumps numpy in CI to fix CVEs\n\nPiperOrigin-RevId: 504701705\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "feat: Upgrade TensorFlow protobuf dependency to 3.21.9 (4.21.9 for Python)\n\nPiperOrigin-RevId: 505264303\n", "change_type": "updated", "type": ""}, {"name": "wrapt", "commit_message": "Add upper bound to `wrapt`.\n\nThis because we detected that `wrapt==1.15.0rc0` is incompatible with `tensorflow==2.12.0rc0`. In fact, the incompatibility is present in nightly too, but because there we only test with released deps, the issue was not discovered. For RC0, a test script had `pip install --pre` which would install pre-release versions __for all packages__ that are present (security issue in general, but helped us here).\n\nIn order to not have TF 2.12 broken weeks after release when wrapt finalizes the 1.15 release, adding an upper bound now as preemptive.\n\nThis is first in master branch and will need to be cherrypicked.\n\nThis is a temporary upper bound, we need to understand why the compatibility issue arises and solve it, either in TF side or on wrapt side, or both.\n\nPiperOrigin-RevId: 511219724\n", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Update devel.requirements.txt\n\nChanged protobuf ~= 3.20.1 to protobuf >= 3.20.3  since https://github.com/tensorflow/tensorflow/blob/20e0beaeebc1bd96c8eca40bed0e7b0d065d8e0b/tensorflow/tools/pip_package/setup.py#L100 has protobuf >= 3.20.3 in it and both versions should match. \r\nThis fixes https://github.com/tensorflow/tensorflow/issues/59774", "change_type": "updated", "type": ""}, {"name": "protobuf", "commit_message": "Update devel.requirements.txt\n\nChanged protobuf >= 3.20.3 to protobuf ~= 3.20.3", "change_type": "updated", "type": ""}, {"name": "jax", "commit_message": "Jax should not be a dependency of TensorFlow. TensorFlow should have as few dependencies as it actually requires. It's already one of the packages on PyPI that takes the longest to install.\n\nInterestingly, dropping the dependency does not break any OSS tests.\n\nIf you write any code in TF that needs JAX, please import it as such:\n\n```\ntry:\n    import jax\nexcept ImportError:\n    jax = None\n\n...\n# Later, in the caller function itself\nif jax is None:\n   raise ImportError(\"This feature requires JAX to be installed.\")\n```\n\nPiperOrigin-RevId: 522864744\n", "change_type": "removed", "type": ""}, {"name": "tb-nightly", "commit_message": "[Linaro:ARM_CI] Fix version of tb-nightly used in CI\n", "change_type": "updated", "type": ""}, {"name": "tb-nightly", "commit_message": "Merge pull request #60342 from elfringham:tb-nightly_ver_fix\n\nPiperOrigin-RevId: 525046487\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Remove the upper limit on numpy in OSS and upgrade Dockerfile test pip packages to newer versions\n\nPiperOrigin-RevId: 525211371\n", "change_type": "updated", "type": ""}, {"name": "tb-nightly", "commit_message": "Update version of tb-nightly used for CI\n\ntb-nightly versions have been updated so need\nto update version pulled in by CI\n", "change_type": "updated", "type": ""}, {"name": "wrapt", "commit_message": "Remove the 1.15 wrapt limit as TF head works with it now.\n\nPiperOrigin-RevId: 533170064\n", "change_type": "updated", "type": ""}, {"name": "typing_extensions", "commit_message": "Limit typing_extensions to less than 4.6.0 until it works\n\nThere is a unit test failure when run as a pip test with\ntyping_extensions >= 4.6.0 so limit the installed version to\nbelow that until the issue is resolved.\n", "change_type": "updated", "type": ""}, {"name": "portpicker", "commit_message": "Update portpicker to 1.5.2\n\nPiperOrigin-RevId: 534983605\n", "change_type": "updated", "type": ""}, {"name": "lit", "commit_message": "Use lit from pip instead of llvm/utils\n\nPiperOrigin-RevId: 538588570\n", "change_type": "updated", "type": ""}, {"name": "ml_dtypes", "commit_message": "Replace custom dtypes with ml_dtypes versions.\n\nTensorFlow's custom type definitions have been upstreamed to the\nml_dtypes library.  Here we transition to the new definitions.\n\nPiperOrigin-RevId: 543626045\n", "change_type": "updated", "type": ""}, {"name": "ml_dtypes", "commit_message": "Unbreak xla aot cmake build.\n\nThe cmake build under tensorflow/tools/pip_package/xla_build/ needs access to ml_dtypes headers.\nHere we copy them to be directly under `include/` so they are found.\n\nPiperOrigin-RevId: 544202967\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "unpin gast dependency for pip_package\n\nCommit c762c4501ca017994c1fa5554c3c8e47b7c80b66 noted that\n\"I also know that gast 0.5.2 breaks one of our tests\" and committed\n\"gast versions above 0.4.0 are incompatible with some of TF's tests.\"\n\nIn #56244, it was suggested to raise a PR to remove the cap. In view\nof the above-mentioned constraints, I've excluded everything after 0.4.0\nup to 0.5.2; note that 0.5.0 directly followed 0.4.0, see\nhttps://github.com/serge-sans-paille/gast/tags\n", "change_type": "updated", "type": ""}, {"name": "gast", "commit_message": "Merge pull request #61134 from h-vetinari:gast\n\nPiperOrigin-RevId: 546008481\n", "change_type": "updated", "type": ""}, {"name": "requests", "commit_message": "Upgrade requests version to 2.31\n\nPiperOrigin-RevId: 546100603\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Require numpy >= 1.23.\n\nPiperOrigin-RevId: 548813258\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Add python and numpy headers to the local_config_python folder in the wheel.\n\nPiperOrigin-RevId: 549961271\n", "change_type": "updated", "type": ""}, {"name": "wheel", "commit_message": "Add python and numpy headers to the local_config_python folder in the wheel.\n\nPiperOrigin-RevId: 549961271\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Lower numpy build version from 1.24.3 to 1.23.0\n\nPiperOrigin-RevId: 549961301\n", "change_type": "updated", "type": ""}, {"name": "wrapt", "commit_message": "Limit the version of wrapt to be used to prevent unit test failures\n\nA change in the behaviour of wrapt ends up in a unit test failure\nfor TensorFlow.\nThis can be removed once mitigation in TensorFlow is in place.\nhttps://github.com/tensorflow/tensorflow/issues/60687\nand\nhttps://github.com/GrahamDumpleton/wrapt/issues/231\nThis is an alternative and less intrusive fix to\nhttps://github.com/tensorflow/tensorflow/pull/60688 which was\ninadvertently reverted by a mis-merge in another commit.\n", "change_type": "updated", "type": ""}, {"name": "wrapt", "commit_message": "Merge pull request #61387 from elfringham:wrapt_limit\n\nPiperOrigin-RevId: 550952950\n", "change_type": "updated", "type": ""}, {"name": "keras-nightly", "commit_message": "Removes standard_or_nightly(...) for TensorFlow dependencies in setup.py.\n\nHere is how it works:\n- For TF nightly release we use the nightly packages of TB, Keras, etc as provided in setup.py on the `master` branch.\n- For TF release the version of Keras, TB, etc is updated from nightly to the released package only on the release branch. For example, 'keras-nightly ~= 2.14.0.dev' will be replaced by 'keras >= 2.14.0rc0, < 2.15' on the release branch.\n\nPiperOrigin-RevId: 559447041\n", "change_type": "added", "type": ""}, {"name": "tensorflow-io-gcs-filesystem", "commit_message": "Enable tensorflow-io-gcs-filesystem as a runtime dependency for Apple Silicon machines\n\nThis does not need to be disabled anymore now that TensorFlow IO has Apple Silicon wheels available.\n\nSee https://pypi.org/project/tensorflow-io-gcs-filesystem/0.34.0/#files\n\nPiperOrigin-RevId: 563826666\n", "change_type": "added", "type": ""}, {"name": "lit", "commit_message": "Split long-running test cases in mul_test into subshards.\nThis improves parallelism by evening out the sizes of the\ndifferent shards and thus speeds up this sharded test.\n\nPiperOrigin-RevId: 568351990\n", "change_type": "added", "type": ""}, {"name": "numpy", "commit_message": "Cap numpy version to below 2.0.0 to prevent breakages from new numpy version\n\nNumpy 2.0.0 is scheduled for Jan 2024.\n\nPiperOrigin-RevId: 573848261\n", "change_type": "updated", "type": ""}, {"name": "urllib3", "commit_message": "Bump urllib3 from 2.0.6 to 2.0.7\n\nBumps [urllib3](https://github.com/urllib3/urllib3) from 2.0.6 to 2.0.7.\n- [Release notes](https://github.com/urllib3/urllib3/releases)\n- [Changelog](https://github.com/urllib3/urllib3/blob/main/CHANGES.rst)\n- [Commits](https://github.com/urllib3/urllib3/compare/2.0.6...2.0.7)\n\n---\nupdated-dependencies:\n- dependency-name: urllib3\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "change_type": "updated", "type": ""}, {"name": "urllib3", "commit_message": "Merge pull request #62144 from tensorflow:dependabot/pip/urllib3-2.0.7\n\nPiperOrigin-RevId: 575716733\n", "change_type": "updated", "type": ""}, {"name": "tb-nightly", "commit_message": "Update tensorboard tb-nightly dependency, as a follow-up to the 2.15.0 release.\n\nThe first tb-nightly 2.16.0.a* pypi package is now available: https://pypi.org/project/tb-nightly/2.16.0a20231024/\n\nPiperOrigin-RevId: 577963162\n", "change_type": "updated", "type": ""}, {"name": "jaxlib", "commit_message": "Change jaxlib version to the next earliest version for MacOS + Linux CI builds.\n\nPiperOrigin-RevId: 579282341\n", "change_type": "updated", "type": ""}, {"name": "jax", "commit_message": "Bump jax test dependency to v0.4.1\n\nPiperOrigin-RevId: 582144297\n", "change_type": "updated", "type": ""}, {"name": "requests", "commit_message": "Add requests Python library to dependencies in Python package\n\nTF used to be implicilty depend on requests for quite some time\nthrough `python/distribute/failure_handling/failure_handling_util.py`,\nand `requests` got installed automatically because it was a dependency\nof `tb-nightly`.\n\nBut since `tb-nightly` does not depend on `requests` anymore we now get\n`Module not found` errors. The solution is to explicitly depend on\n`requests`.\n\nPiperOrigin-RevId: 596957313\n", "change_type": "added", "type": ""}, {"name": "lit", "commit_message": "Update JAX requirements file to install `lit` module. This is needed for using Python 3.11. This is needed to prevent breakage from LLVM integrate.\n\nPiperOrigin-RevId: 602794030\n", "change_type": "added", "type": ""}, {"name": "wrapt", "commit_message": "Remove the upperbound from wrapt\n\nPiperOrigin-RevId: 605155728\n", "change_type": "updated", "type": ""}, {"name": "numpy", "commit_message": "Add 3.12 numpy back in.\n\nPiperOrigin-RevId: 605337242\n", "change_type": "added", "type": ""}, {"name": "wrapt", "commit_message": "Update the wrapt dependency range for the new wheel building as well.\n\nPiperOrigin-RevId: 605448085\n", "change_type": "updated", "type": ""}, {"name": "keras-nightly", "commit_message": "Bumping keras-nightly to 3.1.0\n\nPiperOrigin-RevId: 609410474\n", "change_type": "updated", "type": ""}, {"name": "keras-nightly", "commit_message": "Update keras-nightly version in TensorFlow requirements.\n\nPiperOrigin-RevId: 617290482\n", "change_type": "updated", "type": ""}, {"name": "idna", "commit_message": "Bump idna from 3.6 to 3.7\n\nBumps [idna](https://github.com/kjd/idna) from 3.6 to 3.7.\n- [Release notes](https://github.com/kjd/idna/releases)\n- [Changelog](https://github.com/kjd/idna/blob/master/HISTORY.rst)\n- [Commits](https://github.com/kjd/idna/compare/v3.6...v3.7)\n\n---\nupdated-dependencies:\n- dependency-name: idna\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "change_type": "updated", "type": ""}, {"name": "idna", "commit_message": "Merge pull request #65507 from tensorflow:dependabot/pip/idna-3.7\n\nPiperOrigin-RevId: 624829507\n", "change_type": "updated", "type": ""}, {"name": "flatbuffers", "commit_message": "Update flatbuffers used in tflite.\n\nPiperOrigin-RevId: 627165379\n", "change_type": "updated", "type": ""}, {"name": "werkzeug", "commit_message": "Bump werkzeug from 3.0.1 to 3.0.3\n\nBumps [werkzeug](https://github.com/pallets/werkzeug) from 3.0.1 to 3.0.3.\n- [Release notes](https://github.com/pallets/werkzeug/releases)\n- [Changelog](https://github.com/pallets/werkzeug/blob/main/CHANGES.rst)\n- [Commits](https://github.com/pallets/werkzeug/compare/3.0.1...3.0.3)\n\n---\nupdated-dependencies:\n- dependency-name: werkzeug\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "change_type": "updated", "type": ""}, {"name": "flatbuffers", "commit_message": "Update flatbuffers to 24.3.25\n\nPiperOrigin-RevId: 631967585\n", "change_type": "updated", "type": ""}, {"name": "ml_dtypes", "commit_message": "Update TensorFlow ml_dtypes dependency to >= 0.3.1 < 0.5.0\n\nPiperOrigin-RevId: 642337465\n", "change_type": "updated", "type": ""}, {"name": "urllib3", "commit_message": "Merge pull request #69913 from tensorflow:dependabot/pip/urllib3-2.2.2\n\nPiperOrigin-RevId: 650134047\n", "change_type": "updated", "type": ""}, {"name": "certifi", "commit_message": "Bump certifi from 2024.6.2 to 2024.7.4\n\nBumps [certifi](https://github.com/certifi/python-certifi) from 2024.6.2 to 2024.7.4.\n- [Commits](https://github.com/certifi/python-certifi/compare/2024.06.02...2024.07.04)\n\n---\nupdated-dependencies:\n- dependency-name: certifi\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "change_type": "updated", "type": ""}, {"name": "setuptools", "commit_message": "Bump setuptools from 68.2.2 to 70.0.0\n\nBumps [setuptools](https://github.com/pypa/setuptools) from 68.2.2 to 70.0.0.\n- [Release notes](https://github.com/pypa/setuptools/releases)\n- [Changelog](https://github.com/pypa/setuptools/blob/main/NEWS.rst)\n- [Commits](https://github.com/pypa/setuptools/compare/v68.2.2...v70.0.0)\n\n---\nupdated-dependencies:\n- dependency-name: setuptools\n  dependency-type: direct:production\n...\n\nSigned-off-by: dependabot[bot] <support@github.com>", "change_type": "updated", "type": ""}, {"name": "setuptools", "commit_message": "Merge pull request #71879 from tensorflow:dependabot/pip/setuptools-70.0.0\n\nPiperOrigin-RevId: 653065552\n", "change_type": "updated", "type": ""}, {"name": "certifi", "commit_message": "Merge pull request #70906 from tensorflow:dependabot/pip/certifi-2024.7.4\n\nPiperOrigin-RevId: 653120004\n", "change_type": "updated", "type": ""}]